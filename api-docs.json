{
  "paths": {
    "/about/": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/About"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "summary": "Provide information about BEMServer",
        "description": "Returns bemserver_core and bemserver_api versions.",
        "tags": [
          "About"
        ]
      }
    },
    "/users/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "+name",
                  "-name",
                  "email",
                  "+email",
                  "-email",
                  "is_admin",
                  "+is_admin",
                  "-is_admin",
                  "is_active",
                  "+is_active",
                  "-is_active"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "is_admin",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "is_active",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List users",
        "tags": [
          "User"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new user",
        "tags": [
          "User"
        ]
      }
    },
    "/users/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get user by ID",
        "tags": [
          "User"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing user",
        "tags": [
          "User"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a user",
        "tags": [
          "User"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/users/{item_id}/set_admin": {
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "204": {
            "description": "No Content",
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Set / unset admin",
        "tags": [
          "User"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/users/{item_id}/set_active": {
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "204": {
            "description": "No Content",
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BooleanValue"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Set / unset active",
        "tags": [
          "User"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/user_groups/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "+name",
                  "-name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List user groups",
        "tags": [
          "UserGroup"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroup"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new user group",
        "tags": [
          "UserGroup"
        ]
      }
    },
    "/user_groups/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get user group by ID",
        "tags": [
          "UserGroup"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroup"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing user group",
        "tags": [
          "UserGroup"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a user group",
        "tags": [
          "UserGroup"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/users_by_user_groups/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "user_group_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserByUserGroup"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List user x user group associations",
        "tags": [
          "UserByUserGroup"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserByUserGroup"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserByUserGroup"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new user x user group association",
        "tags": [
          "UserByUserGroup"
        ]
      }
    },
    "/users_by_user_groups/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserByUserGroup"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get user x user group association by ID",
        "tags": [
          "UserByUserGroup"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a user x user group association",
        "tags": [
          "UserByUserGroup"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/campaigns/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "+name",
                  "-name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "in_name",
            "description": "Search for items whose name contains this input value (case insensitive)",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Campaign"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List campaigns",
        "tags": [
          "Campaign"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new campaign",
        "tags": [
          "Campaign"
        ]
      }
    },
    "/campaigns/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get campaign by ID",
        "tags": [
          "Campaign"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing campaign",
        "tags": [
          "Campaign"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a campaign",
        "tags": [
          "Campaign"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/user_groups_by_campaigns/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "user_group_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroupByCampaign"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List user group x campaign associations",
        "tags": [
          "UserGroupByCampaign"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupByCampaign"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupByCampaign"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new user group x campaign association",
        "tags": [
          "UserGroupByCampaign"
        ]
      }
    },
    "/user_groups_by_campaigns/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupByCampaign"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get user group x campaign association by ID",
        "tags": [
          "UserGroupByCampaign"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a user group x campaign association",
        "tags": [
          "UserGroupByCampaign"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/campaign_scopes/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "+name",
                  "-name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CampaignScope"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List campaign scopes",
        "tags": [
          "CampaignScope"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignScope"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignScope"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new campaign scope",
        "tags": [
          "CampaignScope"
        ]
      }
    },
    "/campaign_scopes/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignScope"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get campaign scope by ID",
        "tags": [
          "CampaignScope"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignScope"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignScopePut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing campaign scope",
        "tags": [
          "CampaignScope"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a campaign scope",
        "tags": [
          "CampaignScope"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/user_groups_by_campaign_scopes/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "user_group_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_scope_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroupByCampaignScope"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List user group x campaign scope associations",
        "tags": [
          "UserGroupByCampaignScope"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupByCampaignScope"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserGroupByCampaignScope"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new user group x campaign scope association",
        "tags": [
          "UserGroupByCampaignScope"
        ]
      }
    },
    "/user_groups_by_campaign_scopes/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupByCampaignScope"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get user group x campaign scope association by ID",
        "tags": [
          "UserGroupByCampaignScope"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a user group x campaign scope association",
        "tags": [
          "UserGroupByCampaignScope"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/timeseries_properties/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "+name",
                  "-name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "value_type",
            "schema": {
              "type": "string",
              "enum": [
                "integer",
                "float",
                "boolean",
                "string"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "unit_symbol",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeseriesProperty"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List timeseries properties",
        "tags": [
          "TimeseriesProperty"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesProperty"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeseriesProperty"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new timeseries property",
        "tags": [
          "TimeseriesProperty"
        ]
      }
    },
    "/timeseries_properties/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesProperty"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries property by ID",
        "tags": [
          "TimeseriesProperty"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesProperty"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeseriesPropertyPut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing timeseries property",
        "tags": [
          "TimeseriesProperty"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a timeseries property",
        "tags": [
          "TimeseriesProperty"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/timeseries_data_states/": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeseriesDataState"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List timeseries data states",
        "tags": [
          "TimeseriesDataState"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesDataState"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeseriesDataState"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new timeseries data state",
        "tags": [
          "TimeseriesDataState"
        ]
      }
    },
    "/timeseries_data_states/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesDataState"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries data state by ID",
        "tags": [
          "TimeseriesDataState"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesDataState"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeseriesDataState"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing timeseries data state",
        "tags": [
          "TimeseriesDataState"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a timeseries data state",
        "tags": [
          "TimeseriesDataState"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/timeseries/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "+name",
                  "-name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "in_name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "unit_symbol",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_scope_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "recurse_site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "building_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "recurse_building_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "storey_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "recurse_storey_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "space_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "zone_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "event_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Timeseries"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              },
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List timeseries",
        "tags": [
          "Timeseries"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Timeseries"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Timeseries"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new timeseries",
        "tags": [
          "Timeseries"
        ]
      }
    },
    "/timeseries/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Timeseries"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries by ID",
        "tags": [
          "Timeseries"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Timeseries"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeseriesPut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing timeseries",
        "tags": [
          "Timeseries"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a timeseries",
        "tags": [
          "Timeseries"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/timeseries_property_data/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "property_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeseriesPropertyData"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List timeseries property data",
        "tags": [
          "TimeseriesPropertyData"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesPropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeseriesPropertyData"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new timeseries property data",
        "tags": [
          "TimeseriesPropertyData"
        ]
      }
    },
    "/timeseries_property_data/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesPropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries property data by ID",
        "tags": [
          "TimeseriesPropertyData"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesPropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeseriesPropertyData"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing timeseries property data",
        "tags": [
          "TimeseriesPropertyData"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a timeseries property data",
        "tags": [
          "TimeseriesPropertyData"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/timeseries_data/stats": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "data_state",
            "description": "Data state ID",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "timezone",
            "description": "Timezone to use for response data",
            "schema": {
              "type": "string",
              "format": "iana-tz",
              "default": "UTC",
              "enum": [
                "Africa/Abidjan",
                "Africa/Accra",
                "Africa/Addis_Ababa",
                "Africa/Algiers",
                "Africa/Asmara",
                "Africa/Bamako",
                "Africa/Bangui",
                "Africa/Banjul",
                "Africa/Bissau",
                "Africa/Blantyre",
                "Africa/Brazzaville",
                "Africa/Bujumbura",
                "Africa/Cairo",
                "Africa/Casablanca",
                "Africa/Ceuta",
                "Africa/Conakry",
                "Africa/Dakar",
                "Africa/Dar_es_Salaam",
                "Africa/Djibouti",
                "Africa/Douala",
                "Africa/El_Aaiun",
                "Africa/Freetown",
                "Africa/Gaborone",
                "Africa/Harare",
                "Africa/Johannesburg",
                "Africa/Juba",
                "Africa/Kampala",
                "Africa/Khartoum",
                "Africa/Kigali",
                "Africa/Kinshasa",
                "Africa/Lagos",
                "Africa/Libreville",
                "Africa/Lome",
                "Africa/Luanda",
                "Africa/Lubumbashi",
                "Africa/Lusaka",
                "Africa/Malabo",
                "Africa/Maputo",
                "Africa/Maseru",
                "Africa/Mbabane",
                "Africa/Mogadishu",
                "Africa/Monrovia",
                "Africa/Nairobi",
                "Africa/Ndjamena",
                "Africa/Niamey",
                "Africa/Nouakchott",
                "Africa/Ouagadougou",
                "Africa/Porto-Novo",
                "Africa/Sao_Tome",
                "Africa/Tripoli",
                "Africa/Tunis",
                "Africa/Windhoek",
                "America/Adak",
                "America/Anchorage",
                "America/Anguilla",
                "America/Antigua",
                "America/Araguaina",
                "America/Argentina/Buenos_Aires",
                "America/Argentina/Catamarca",
                "America/Argentina/Cordoba",
                "America/Argentina/Jujuy",
                "America/Argentina/La_Rioja",
                "America/Argentina/Mendoza",
                "America/Argentina/Rio_Gallegos",
                "America/Argentina/Salta",
                "America/Argentina/San_Juan",
                "America/Argentina/San_Luis",
                "America/Argentina/Tucuman",
                "America/Argentina/Ushuaia",
                "America/Aruba",
                "America/Asuncion",
                "America/Atikokan",
                "America/Bahia",
                "America/Bahia_Banderas",
                "America/Barbados",
                "America/Belem",
                "America/Belize",
                "America/Blanc-Sablon",
                "America/Boa_Vista",
                "America/Bogota",
                "America/Boise",
                "America/Cambridge_Bay",
                "America/Campo_Grande",
                "America/Cancun",
                "America/Caracas",
                "America/Cayenne",
                "America/Cayman",
                "America/Chicago",
                "America/Chihuahua",
                "America/Costa_Rica",
                "America/Creston",
                "America/Cuiaba",
                "America/Curacao",
                "America/Danmarkshavn",
                "America/Dawson",
                "America/Dawson_Creek",
                "America/Denver",
                "America/Detroit",
                "America/Dominica",
                "America/Edmonton",
                "America/Eirunepe",
                "America/El_Salvador",
                "America/Fort_Nelson",
                "America/Fortaleza",
                "America/Glace_Bay",
                "America/Goose_Bay",
                "America/Grand_Turk",
                "America/Grenada",
                "America/Guadeloupe",
                "America/Guatemala",
                "America/Guayaquil",
                "America/Guyana",
                "America/Halifax",
                "America/Havana",
                "America/Hermosillo",
                "America/Indiana/Indianapolis",
                "America/Indiana/Knox",
                "America/Indiana/Marengo",
                "America/Indiana/Petersburg",
                "America/Indiana/Tell_City",
                "America/Indiana/Vevay",
                "America/Indiana/Vincennes",
                "America/Indiana/Winamac",
                "America/Inuvik",
                "America/Iqaluit",
                "America/Jamaica",
                "America/Juneau",
                "America/Kentucky/Louisville",
                "America/Kentucky/Monticello",
                "America/Kralendijk",
                "America/La_Paz",
                "America/Lima",
                "America/Los_Angeles",
                "America/Lower_Princes",
                "America/Maceio",
                "America/Managua",
                "America/Manaus",
                "America/Marigot",
                "America/Martinique",
                "America/Matamoros",
                "America/Mazatlan",
                "America/Menominee",
                "America/Merida",
                "America/Metlakatla",
                "America/Mexico_City",
                "America/Miquelon",
                "America/Moncton",
                "America/Monterrey",
                "America/Montevideo",
                "America/Montserrat",
                "America/Nassau",
                "America/New_York",
                "America/Nipigon",
                "America/Nome",
                "America/Noronha",
                "America/North_Dakota/Beulah",
                "America/North_Dakota/Center",
                "America/North_Dakota/New_Salem",
                "America/Nuuk",
                "America/Ojinaga",
                "America/Panama",
                "America/Pangnirtung",
                "America/Paramaribo",
                "America/Phoenix",
                "America/Port-au-Prince",
                "America/Port_of_Spain",
                "America/Porto_Velho",
                "America/Puerto_Rico",
                "America/Punta_Arenas",
                "America/Rainy_River",
                "America/Rankin_Inlet",
                "America/Recife",
                "America/Regina",
                "America/Resolute",
                "America/Rio_Branco",
                "America/Santarem",
                "America/Santiago",
                "America/Santo_Domingo",
                "America/Sao_Paulo",
                "America/Scoresbysund",
                "America/Sitka",
                "America/St_Barthelemy",
                "America/St_Johns",
                "America/St_Kitts",
                "America/St_Lucia",
                "America/St_Thomas",
                "America/St_Vincent",
                "America/Swift_Current",
                "America/Tegucigalpa",
                "America/Thule",
                "America/Thunder_Bay",
                "America/Tijuana",
                "America/Toronto",
                "America/Tortola",
                "America/Vancouver",
                "America/Whitehorse",
                "America/Winnipeg",
                "America/Yakutat",
                "America/Yellowknife",
                "Antarctica/Casey",
                "Antarctica/Davis",
                "Antarctica/DumontDUrville",
                "Antarctica/Macquarie",
                "Antarctica/Mawson",
                "Antarctica/McMurdo",
                "Antarctica/Palmer",
                "Antarctica/Rothera",
                "Antarctica/Syowa",
                "Antarctica/Troll",
                "Antarctica/Vostok",
                "Arctic/Longyearbyen",
                "Asia/Aden",
                "Asia/Almaty",
                "Asia/Amman",
                "Asia/Anadyr",
                "Asia/Aqtau",
                "Asia/Aqtobe",
                "Asia/Ashgabat",
                "Asia/Atyrau",
                "Asia/Baghdad",
                "Asia/Bahrain",
                "Asia/Baku",
                "Asia/Bangkok",
                "Asia/Barnaul",
                "Asia/Beirut",
                "Asia/Bishkek",
                "Asia/Brunei",
                "Asia/Chita",
                "Asia/Choibalsan",
                "Asia/Colombo",
                "Asia/Damascus",
                "Asia/Dhaka",
                "Asia/Dili",
                "Asia/Dubai",
                "Asia/Dushanbe",
                "Asia/Famagusta",
                "Asia/Gaza",
                "Asia/Hebron",
                "Asia/Ho_Chi_Minh",
                "Asia/Hong_Kong",
                "Asia/Hovd",
                "Asia/Irkutsk",
                "Asia/Jakarta",
                "Asia/Jayapura",
                "Asia/Jerusalem",
                "Asia/Kabul",
                "Asia/Kamchatka",
                "Asia/Karachi",
                "Asia/Kathmandu",
                "Asia/Khandyga",
                "Asia/Kolkata",
                "Asia/Krasnoyarsk",
                "Asia/Kuala_Lumpur",
                "Asia/Kuching",
                "Asia/Kuwait",
                "Asia/Macau",
                "Asia/Magadan",
                "Asia/Makassar",
                "Asia/Manila",
                "Asia/Muscat",
                "Asia/Novokuznetsk",
                "Asia/Novosibirsk",
                "Asia/Omsk",
                "Asia/Oral",
                "Asia/Phnom_Penh",
                "Asia/Pontianak",
                "Asia/Pyongyang",
                "Asia/Qatar",
                "Asia/Qostanay",
                "Asia/Qyzylorda",
                "Asia/Riyadh",
                "Asia/Sakhalin",
                "Asia/Samarkand",
                "Asia/Seoul",
                "Asia/Shanghai",
                "Asia/Singapore",
                "Asia/Srednekolymsk",
                "Asia/Taipei",
                "Asia/Tashkent",
                "Asia/Tbilisi",
                "Asia/Tehran",
                "Asia/Thimphu",
                "Asia/Tokyo",
                "Asia/Tomsk",
                "Asia/Ulaanbaatar",
                "Asia/Urumqi",
                "Asia/Ust-Nera",
                "Asia/Vientiane",
                "Asia/Vladivostok",
                "Asia/Yakutsk",
                "Asia/Yangon",
                "Asia/Yekaterinburg",
                "Asia/Yerevan",
                "Atlantic/Azores",
                "Atlantic/Bermuda",
                "Atlantic/Canary",
                "Atlantic/Cape_Verde",
                "Atlantic/Faroe",
                "Atlantic/Madeira",
                "Atlantic/Reykjavik",
                "Atlantic/South_Georgia",
                "Atlantic/St_Helena",
                "Atlantic/Stanley",
                "Australia/Adelaide",
                "Australia/Brisbane",
                "Australia/Broken_Hill",
                "Australia/Darwin",
                "Australia/Eucla",
                "Australia/Hobart",
                "Australia/Lindeman",
                "Australia/Lord_Howe",
                "Australia/Melbourne",
                "Australia/Perth",
                "Australia/Sydney",
                "CET",
                "CST6CDT",
                "EET",
                "EST",
                "EST5EDT",
                "Etc/GMT",
                "Etc/GMT+0",
                "Etc/GMT+1",
                "Etc/GMT+10",
                "Etc/GMT+11",
                "Etc/GMT+12",
                "Etc/GMT+2",
                "Etc/GMT+3",
                "Etc/GMT+4",
                "Etc/GMT+5",
                "Etc/GMT+6",
                "Etc/GMT+7",
                "Etc/GMT+8",
                "Etc/GMT+9",
                "Etc/GMT-0",
                "Etc/GMT-1",
                "Etc/GMT-10",
                "Etc/GMT-11",
                "Etc/GMT-12",
                "Etc/GMT-13",
                "Etc/GMT-14",
                "Etc/GMT-2",
                "Etc/GMT-3",
                "Etc/GMT-4",
                "Etc/GMT-5",
                "Etc/GMT-6",
                "Etc/GMT-7",
                "Etc/GMT-8",
                "Etc/GMT-9",
                "Etc/GMT0",
                "Etc/Greenwich",
                "Etc/UTC",
                "Etc/Universal",
                "Etc/Zulu",
                "Europe/Amsterdam",
                "Europe/Andorra",
                "Europe/Astrakhan",
                "Europe/Athens",
                "Europe/Belgrade",
                "Europe/Berlin",
                "Europe/Bratislava",
                "Europe/Brussels",
                "Europe/Bucharest",
                "Europe/Budapest",
                "Europe/Busingen",
                "Europe/Chisinau",
                "Europe/Copenhagen",
                "Europe/Dublin",
                "Europe/Gibraltar",
                "Europe/Guernsey",
                "Europe/Helsinki",
                "Europe/Isle_of_Man",
                "Europe/Istanbul",
                "Europe/Jersey",
                "Europe/Kaliningrad",
                "Europe/Kirov",
                "Europe/Kyiv",
                "Europe/Lisbon",
                "Europe/Ljubljana",
                "Europe/London",
                "Europe/Luxembourg",
                "Europe/Madrid",
                "Europe/Malta",
                "Europe/Mariehamn",
                "Europe/Minsk",
                "Europe/Monaco",
                "Europe/Moscow",
                "Europe/Nicosia",
                "Europe/Oslo",
                "Europe/Paris",
                "Europe/Podgorica",
                "Europe/Prague",
                "Europe/Riga",
                "Europe/Rome",
                "Europe/Samara",
                "Europe/San_Marino",
                "Europe/Sarajevo",
                "Europe/Saratov",
                "Europe/Simferopol",
                "Europe/Skopje",
                "Europe/Sofia",
                "Europe/Stockholm",
                "Europe/Tallinn",
                "Europe/Tirane",
                "Europe/Ulyanovsk",
                "Europe/Uzhgorod",
                "Europe/Vaduz",
                "Europe/Vatican",
                "Europe/Vienna",
                "Europe/Vilnius",
                "Europe/Volgograd",
                "Europe/Warsaw",
                "Europe/Zagreb",
                "Europe/Zaporozhye",
                "Europe/Zurich",
                "GMT",
                "HST",
                "Indian/Antananarivo",
                "Indian/Chagos",
                "Indian/Christmas",
                "Indian/Cocos",
                "Indian/Comoro",
                "Indian/Kerguelen",
                "Indian/Mahe",
                "Indian/Maldives",
                "Indian/Mauritius",
                "Indian/Mayotte",
                "Indian/Reunion",
                "MET",
                "MST",
                "MST7MDT",
                "PST8PDT",
                "Pacific/Apia",
                "Pacific/Auckland",
                "Pacific/Bougainville",
                "Pacific/Chatham",
                "Pacific/Chuuk",
                "Pacific/Easter",
                "Pacific/Efate",
                "Pacific/Fakaofo",
                "Pacific/Fiji",
                "Pacific/Funafuti",
                "Pacific/Galapagos",
                "Pacific/Gambier",
                "Pacific/Guadalcanal",
                "Pacific/Guam",
                "Pacific/Honolulu",
                "Pacific/Kanton",
                "Pacific/Kiritimati",
                "Pacific/Kosrae",
                "Pacific/Kwajalein",
                "Pacific/Majuro",
                "Pacific/Marquesas",
                "Pacific/Midway",
                "Pacific/Nauru",
                "Pacific/Niue",
                "Pacific/Norfolk",
                "Pacific/Noumea",
                "Pacific/Pago_Pago",
                "Pacific/Palau",
                "Pacific/Pitcairn",
                "Pacific/Pohnpei",
                "Pacific/Port_Moresby",
                "Pacific/Rarotonga",
                "Pacific/Saipan",
                "Pacific/Tahiti",
                "Pacific/Tarawa",
                "Pacific/Tongatapu",
                "Pacific/Wake",
                "Pacific/Wallis",
                "UTC",
                "WET"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries",
            "description": "List of timeseries ID",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": true,
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesDataStatsByID"
                },
                "example": "{\n    \"stats\":\n    {\n        \"1\": {\n            \"first_timestamp\": \"2020-01-01T00:00:00+00:00\",\n            \"last_timestamp\": \"2021-01-01T00:00:00+00:00\",\n            \"count\": 42,\n            \"min\": 0.0,\n            \"max\": 42.0,\n            \"avg\": 12.0,\n            \"stddev\": 4.2,\n        },\n        \"2\": {\n            \"first_timestamp\": \"2020-01-01T00:00:00+00:00\",\n            \"last_timestamp\": \"2021-01-01T00:00:00+00:00\",\n            \"count\": 69,\n            \"min\": 12.0,\n            \"max\": 142.0,\n            \"avg\": 69.0,\n            \"stddev\": 6.9,\n        },\n    },\n}"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries data stats",
        "tags": [
          "TimeseriesData"
        ]
      }
    },
    "/timeseries_data/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "timeseries",
            "description": "List of timeseries ID",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": true,
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "Initial datetime",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "End datetime (excluded from the interval)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "data_state",
            "description": "Data state ID",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "timezone",
            "description": "Timezone to use for response data",
            "schema": {
              "type": "string",
              "format": "iana-tz",
              "default": "UTC",
              "enum": [
                "Africa/Abidjan",
                "Africa/Accra",
                "Africa/Addis_Ababa",
                "Africa/Algiers",
                "Africa/Asmara",
                "Africa/Bamako",
                "Africa/Bangui",
                "Africa/Banjul",
                "Africa/Bissau",
                "Africa/Blantyre",
                "Africa/Brazzaville",
                "Africa/Bujumbura",
                "Africa/Cairo",
                "Africa/Casablanca",
                "Africa/Ceuta",
                "Africa/Conakry",
                "Africa/Dakar",
                "Africa/Dar_es_Salaam",
                "Africa/Djibouti",
                "Africa/Douala",
                "Africa/El_Aaiun",
                "Africa/Freetown",
                "Africa/Gaborone",
                "Africa/Harare",
                "Africa/Johannesburg",
                "Africa/Juba",
                "Africa/Kampala",
                "Africa/Khartoum",
                "Africa/Kigali",
                "Africa/Kinshasa",
                "Africa/Lagos",
                "Africa/Libreville",
                "Africa/Lome",
                "Africa/Luanda",
                "Africa/Lubumbashi",
                "Africa/Lusaka",
                "Africa/Malabo",
                "Africa/Maputo",
                "Africa/Maseru",
                "Africa/Mbabane",
                "Africa/Mogadishu",
                "Africa/Monrovia",
                "Africa/Nairobi",
                "Africa/Ndjamena",
                "Africa/Niamey",
                "Africa/Nouakchott",
                "Africa/Ouagadougou",
                "Africa/Porto-Novo",
                "Africa/Sao_Tome",
                "Africa/Tripoli",
                "Africa/Tunis",
                "Africa/Windhoek",
                "America/Adak",
                "America/Anchorage",
                "America/Anguilla",
                "America/Antigua",
                "America/Araguaina",
                "America/Argentina/Buenos_Aires",
                "America/Argentina/Catamarca",
                "America/Argentina/Cordoba",
                "America/Argentina/Jujuy",
                "America/Argentina/La_Rioja",
                "America/Argentina/Mendoza",
                "America/Argentina/Rio_Gallegos",
                "America/Argentina/Salta",
                "America/Argentina/San_Juan",
                "America/Argentina/San_Luis",
                "America/Argentina/Tucuman",
                "America/Argentina/Ushuaia",
                "America/Aruba",
                "America/Asuncion",
                "America/Atikokan",
                "America/Bahia",
                "America/Bahia_Banderas",
                "America/Barbados",
                "America/Belem",
                "America/Belize",
                "America/Blanc-Sablon",
                "America/Boa_Vista",
                "America/Bogota",
                "America/Boise",
                "America/Cambridge_Bay",
                "America/Campo_Grande",
                "America/Cancun",
                "America/Caracas",
                "America/Cayenne",
                "America/Cayman",
                "America/Chicago",
                "America/Chihuahua",
                "America/Costa_Rica",
                "America/Creston",
                "America/Cuiaba",
                "America/Curacao",
                "America/Danmarkshavn",
                "America/Dawson",
                "America/Dawson_Creek",
                "America/Denver",
                "America/Detroit",
                "America/Dominica",
                "America/Edmonton",
                "America/Eirunepe",
                "America/El_Salvador",
                "America/Fort_Nelson",
                "America/Fortaleza",
                "America/Glace_Bay",
                "America/Goose_Bay",
                "America/Grand_Turk",
                "America/Grenada",
                "America/Guadeloupe",
                "America/Guatemala",
                "America/Guayaquil",
                "America/Guyana",
                "America/Halifax",
                "America/Havana",
                "America/Hermosillo",
                "America/Indiana/Indianapolis",
                "America/Indiana/Knox",
                "America/Indiana/Marengo",
                "America/Indiana/Petersburg",
                "America/Indiana/Tell_City",
                "America/Indiana/Vevay",
                "America/Indiana/Vincennes",
                "America/Indiana/Winamac",
                "America/Inuvik",
                "America/Iqaluit",
                "America/Jamaica",
                "America/Juneau",
                "America/Kentucky/Louisville",
                "America/Kentucky/Monticello",
                "America/Kralendijk",
                "America/La_Paz",
                "America/Lima",
                "America/Los_Angeles",
                "America/Lower_Princes",
                "America/Maceio",
                "America/Managua",
                "America/Manaus",
                "America/Marigot",
                "America/Martinique",
                "America/Matamoros",
                "America/Mazatlan",
                "America/Menominee",
                "America/Merida",
                "America/Metlakatla",
                "America/Mexico_City",
                "America/Miquelon",
                "America/Moncton",
                "America/Monterrey",
                "America/Montevideo",
                "America/Montserrat",
                "America/Nassau",
                "America/New_York",
                "America/Nipigon",
                "America/Nome",
                "America/Noronha",
                "America/North_Dakota/Beulah",
                "America/North_Dakota/Center",
                "America/North_Dakota/New_Salem",
                "America/Nuuk",
                "America/Ojinaga",
                "America/Panama",
                "America/Pangnirtung",
                "America/Paramaribo",
                "America/Phoenix",
                "America/Port-au-Prince",
                "America/Port_of_Spain",
                "America/Porto_Velho",
                "America/Puerto_Rico",
                "America/Punta_Arenas",
                "America/Rainy_River",
                "America/Rankin_Inlet",
                "America/Recife",
                "America/Regina",
                "America/Resolute",
                "America/Rio_Branco",
                "America/Santarem",
                "America/Santiago",
                "America/Santo_Domingo",
                "America/Sao_Paulo",
                "America/Scoresbysund",
                "America/Sitka",
                "America/St_Barthelemy",
                "America/St_Johns",
                "America/St_Kitts",
                "America/St_Lucia",
                "America/St_Thomas",
                "America/St_Vincent",
                "America/Swift_Current",
                "America/Tegucigalpa",
                "America/Thule",
                "America/Thunder_Bay",
                "America/Tijuana",
                "America/Toronto",
                "America/Tortola",
                "America/Vancouver",
                "America/Whitehorse",
                "America/Winnipeg",
                "America/Yakutat",
                "America/Yellowknife",
                "Antarctica/Casey",
                "Antarctica/Davis",
                "Antarctica/DumontDUrville",
                "Antarctica/Macquarie",
                "Antarctica/Mawson",
                "Antarctica/McMurdo",
                "Antarctica/Palmer",
                "Antarctica/Rothera",
                "Antarctica/Syowa",
                "Antarctica/Troll",
                "Antarctica/Vostok",
                "Arctic/Longyearbyen",
                "Asia/Aden",
                "Asia/Almaty",
                "Asia/Amman",
                "Asia/Anadyr",
                "Asia/Aqtau",
                "Asia/Aqtobe",
                "Asia/Ashgabat",
                "Asia/Atyrau",
                "Asia/Baghdad",
                "Asia/Bahrain",
                "Asia/Baku",
                "Asia/Bangkok",
                "Asia/Barnaul",
                "Asia/Beirut",
                "Asia/Bishkek",
                "Asia/Brunei",
                "Asia/Chita",
                "Asia/Choibalsan",
                "Asia/Colombo",
                "Asia/Damascus",
                "Asia/Dhaka",
                "Asia/Dili",
                "Asia/Dubai",
                "Asia/Dushanbe",
                "Asia/Famagusta",
                "Asia/Gaza",
                "Asia/Hebron",
                "Asia/Ho_Chi_Minh",
                "Asia/Hong_Kong",
                "Asia/Hovd",
                "Asia/Irkutsk",
                "Asia/Jakarta",
                "Asia/Jayapura",
                "Asia/Jerusalem",
                "Asia/Kabul",
                "Asia/Kamchatka",
                "Asia/Karachi",
                "Asia/Kathmandu",
                "Asia/Khandyga",
                "Asia/Kolkata",
                "Asia/Krasnoyarsk",
                "Asia/Kuala_Lumpur",
                "Asia/Kuching",
                "Asia/Kuwait",
                "Asia/Macau",
                "Asia/Magadan",
                "Asia/Makassar",
                "Asia/Manila",
                "Asia/Muscat",
                "Asia/Novokuznetsk",
                "Asia/Novosibirsk",
                "Asia/Omsk",
                "Asia/Oral",
                "Asia/Phnom_Penh",
                "Asia/Pontianak",
                "Asia/Pyongyang",
                "Asia/Qatar",
                "Asia/Qostanay",
                "Asia/Qyzylorda",
                "Asia/Riyadh",
                "Asia/Sakhalin",
                "Asia/Samarkand",
                "Asia/Seoul",
                "Asia/Shanghai",
                "Asia/Singapore",
                "Asia/Srednekolymsk",
                "Asia/Taipei",
                "Asia/Tashkent",
                "Asia/Tbilisi",
                "Asia/Tehran",
                "Asia/Thimphu",
                "Asia/Tokyo",
                "Asia/Tomsk",
                "Asia/Ulaanbaatar",
                "Asia/Urumqi",
                "Asia/Ust-Nera",
                "Asia/Vientiane",
                "Asia/Vladivostok",
                "Asia/Yakutsk",
                "Asia/Yangon",
                "Asia/Yekaterinburg",
                "Asia/Yerevan",
                "Atlantic/Azores",
                "Atlantic/Bermuda",
                "Atlantic/Canary",
                "Atlantic/Cape_Verde",
                "Atlantic/Faroe",
                "Atlantic/Madeira",
                "Atlantic/Reykjavik",
                "Atlantic/South_Georgia",
                "Atlantic/St_Helena",
                "Atlantic/Stanley",
                "Australia/Adelaide",
                "Australia/Brisbane",
                "Australia/Broken_Hill",
                "Australia/Darwin",
                "Australia/Eucla",
                "Australia/Hobart",
                "Australia/Lindeman",
                "Australia/Lord_Howe",
                "Australia/Melbourne",
                "Australia/Perth",
                "Australia/Sydney",
                "CET",
                "CST6CDT",
                "EET",
                "EST",
                "EST5EDT",
                "Etc/GMT",
                "Etc/GMT+0",
                "Etc/GMT+1",
                "Etc/GMT+10",
                "Etc/GMT+11",
                "Etc/GMT+12",
                "Etc/GMT+2",
                "Etc/GMT+3",
                "Etc/GMT+4",
                "Etc/GMT+5",
                "Etc/GMT+6",
                "Etc/GMT+7",
                "Etc/GMT+8",
                "Etc/GMT+9",
                "Etc/GMT-0",
                "Etc/GMT-1",
                "Etc/GMT-10",
                "Etc/GMT-11",
                "Etc/GMT-12",
                "Etc/GMT-13",
                "Etc/GMT-14",
                "Etc/GMT-2",
                "Etc/GMT-3",
                "Etc/GMT-4",
                "Etc/GMT-5",
                "Etc/GMT-6",
                "Etc/GMT-7",
                "Etc/GMT-8",
                "Etc/GMT-9",
                "Etc/GMT0",
                "Etc/Greenwich",
                "Etc/UTC",
                "Etc/Universal",
                "Etc/Zulu",
                "Europe/Amsterdam",
                "Europe/Andorra",
                "Europe/Astrakhan",
                "Europe/Athens",
                "Europe/Belgrade",
                "Europe/Berlin",
                "Europe/Bratislava",
                "Europe/Brussels",
                "Europe/Bucharest",
                "Europe/Budapest",
                "Europe/Busingen",
                "Europe/Chisinau",
                "Europe/Copenhagen",
                "Europe/Dublin",
                "Europe/Gibraltar",
                "Europe/Guernsey",
                "Europe/Helsinki",
                "Europe/Isle_of_Man",
                "Europe/Istanbul",
                "Europe/Jersey",
                "Europe/Kaliningrad",
                "Europe/Kirov",
                "Europe/Kyiv",
                "Europe/Lisbon",
                "Europe/Ljubljana",
                "Europe/London",
                "Europe/Luxembourg",
                "Europe/Madrid",
                "Europe/Malta",
                "Europe/Mariehamn",
                "Europe/Minsk",
                "Europe/Monaco",
                "Europe/Moscow",
                "Europe/Nicosia",
                "Europe/Oslo",
                "Europe/Paris",
                "Europe/Podgorica",
                "Europe/Prague",
                "Europe/Riga",
                "Europe/Rome",
                "Europe/Samara",
                "Europe/San_Marino",
                "Europe/Sarajevo",
                "Europe/Saratov",
                "Europe/Simferopol",
                "Europe/Skopje",
                "Europe/Sofia",
                "Europe/Stockholm",
                "Europe/Tallinn",
                "Europe/Tirane",
                "Europe/Ulyanovsk",
                "Europe/Uzhgorod",
                "Europe/Vaduz",
                "Europe/Vatican",
                "Europe/Vienna",
                "Europe/Vilnius",
                "Europe/Volgograd",
                "Europe/Warsaw",
                "Europe/Zagreb",
                "Europe/Zaporozhye",
                "Europe/Zurich",
                "GMT",
                "HST",
                "Indian/Antananarivo",
                "Indian/Chagos",
                "Indian/Christmas",
                "Indian/Cocos",
                "Indian/Comoro",
                "Indian/Kerguelen",
                "Indian/Mahe",
                "Indian/Maldives",
                "Indian/Mauritius",
                "Indian/Mayotte",
                "Indian/Reunion",
                "MET",
                "MST",
                "MST7MDT",
                "PST8PDT",
                "Pacific/Apia",
                "Pacific/Auckland",
                "Pacific/Bougainville",
                "Pacific/Chatham",
                "Pacific/Chuuk",
                "Pacific/Easter",
                "Pacific/Efate",
                "Pacific/Fakaofo",
                "Pacific/Fiji",
                "Pacific/Funafuti",
                "Pacific/Galapagos",
                "Pacific/Gambier",
                "Pacific/Guadalcanal",
                "Pacific/Guam",
                "Pacific/Honolulu",
                "Pacific/Kanton",
                "Pacific/Kiritimati",
                "Pacific/Kosrae",
                "Pacific/Kwajalein",
                "Pacific/Majuro",
                "Pacific/Marquesas",
                "Pacific/Midway",
                "Pacific/Nauru",
                "Pacific/Niue",
                "Pacific/Norfolk",
                "Pacific/Noumea",
                "Pacific/Pago_Pago",
                "Pacific/Palau",
                "Pacific/Pitcairn",
                "Pacific/Pohnpei",
                "Pacific/Port_Moresby",
                "Pacific/Rarotonga",
                "Pacific/Saipan",
                "Pacific/Tahiti",
                "Pacific/Tarawa",
                "Pacific/Tongatapu",
                "Pacific/Wake",
                "Pacific/Wallis",
                "UTC",
                "WET"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "convert_to",
            "description": "Optional list of units to convert to. If passed, must be of same length as timeseries list. Empty string means no conversion for a timeseries.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false,
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": "{\n    \"1\": {\n        \"2020-01-01T00:00:00+00:00\": 0.1,\n        \"2020-01-01T10:00:00+00:00\": 0.2,\n        \"2020-01-01T20:00:00+00:00\": 0.3,\n    },\n    \"2\": {\n        \"2020-01-01T00:00:00+00:00\": 1.1,\n        \"2020-01-01T10:00:00+00:00\": 1.2,\n        \"2020-01-01T20:00:00+00:00\": 1.3,\n    },\n    \"3\": {\n        \"2020-01-01T00:00:00+00:00\": 2.1,\n        \"2020-01-01T10:00:00+00:00\": 2.2,\n        \"2020-01-01T20:00:00+00:00\": 2.3,\n    },\n}"
              },
              "text/csv": {
                "example": "Datetime,1,2,3\n2020-01-01T00:00:00+00:00,0.1,1.1,2.1\n2020-01-01T00:10:00+00:00,0.2,1.2,2.2\n2020-01-01T00:20:00+00:00,0.3,1.3,2.3"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries data",
        "description": "Returns data in either JSON or CSV format.\n\nJSON: each key is a timestamp ID as string. For each timeseries, values are\npassed a {timestamp: value} mappings.\n\nCSV: the first column is the timestamp as timezone aware datetime and each\nother column is a timeseries data. Column headers are timeseries IDs.",
        "tags": [
          "TimeseriesData"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "data_state",
            "description": "Data state ID",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "201": {
            "description": "Created"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Post timeseries data",
        "description": "Loads data in either JSON or CSV format.\n\nJSON: each key is a timestamp ID as string. For each timeseries, values are\npassed as {timestamp: value} mappings.",
        "tags": [
          "TimeseriesData"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "binary",
                "example": "{\n    \"1\": {\n        \"2020-01-01T00:00:00+00:00\": 0.1,\n        \"2020-01-01T10:00:00+00:00\": 0.2,\n        \"2020-01-01T20:00:00+00:00\": 0.3,\n    },\n    \"2\": {\n        \"2020-01-01T00:00:00+00:00\": 1.1,\n        \"2020-01-01T10:00:00+00:00\": 1.2,\n        \"2020-01-01T20:00:00+00:00\": 1.3,\n    },\n    \"3\": {\n        \"2020-01-01T00:00:00+00:00\": 2.1,\n        \"2020-01-01T10:00:00+00:00\": 2.2,\n        \"2020-01-01T20:00:00+00:00\": 2.3,\n    },\n}"
              }
            },
            "text/csv": {
              "schema": {
                "type": "string",
                "format": "binary",
                "example": "Datetime,1,2,3\n2020-01-01T00:00:00+00:00,0.1,1.1,2.1\n2020-01-01T00:10:00+00:00,0.2,1.2,2.2\n2020-01-01T00:20:00+00:00,0.3,1.3,2.3"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "timeseries",
            "description": "List of timeseries ID",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": true,
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "Initial datetime",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "End datetime (excluded from the interval)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "data_state",
            "description": "Data state ID",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete timeseries data",
        "tags": [
          "TimeseriesData"
        ]
      }
    },
    "/timeseries_data/aggregate": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "timeseries",
            "description": "List of timeseries ID",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": true,
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "bucket_width_value",
            "description": "Only fixed bucket width units (second, minute, hour) accept a value different than 1.",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          },
          {
            "in": "query",
            "name": "bucket_width_unit",
            "schema": {
              "type": "string",
              "enum": [
                "second",
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "Initial datetime",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "End datetime (excluded from the interval)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "data_state",
            "description": "Data state ID",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "timezone",
            "description": "Timezone to use for response data",
            "schema": {
              "type": "string",
              "format": "iana-tz",
              "default": "UTC",
              "enum": [
                "Africa/Abidjan",
                "Africa/Accra",
                "Africa/Addis_Ababa",
                "Africa/Algiers",
                "Africa/Asmara",
                "Africa/Bamako",
                "Africa/Bangui",
                "Africa/Banjul",
                "Africa/Bissau",
                "Africa/Blantyre",
                "Africa/Brazzaville",
                "Africa/Bujumbura",
                "Africa/Cairo",
                "Africa/Casablanca",
                "Africa/Ceuta",
                "Africa/Conakry",
                "Africa/Dakar",
                "Africa/Dar_es_Salaam",
                "Africa/Djibouti",
                "Africa/Douala",
                "Africa/El_Aaiun",
                "Africa/Freetown",
                "Africa/Gaborone",
                "Africa/Harare",
                "Africa/Johannesburg",
                "Africa/Juba",
                "Africa/Kampala",
                "Africa/Khartoum",
                "Africa/Kigali",
                "Africa/Kinshasa",
                "Africa/Lagos",
                "Africa/Libreville",
                "Africa/Lome",
                "Africa/Luanda",
                "Africa/Lubumbashi",
                "Africa/Lusaka",
                "Africa/Malabo",
                "Africa/Maputo",
                "Africa/Maseru",
                "Africa/Mbabane",
                "Africa/Mogadishu",
                "Africa/Monrovia",
                "Africa/Nairobi",
                "Africa/Ndjamena",
                "Africa/Niamey",
                "Africa/Nouakchott",
                "Africa/Ouagadougou",
                "Africa/Porto-Novo",
                "Africa/Sao_Tome",
                "Africa/Tripoli",
                "Africa/Tunis",
                "Africa/Windhoek",
                "America/Adak",
                "America/Anchorage",
                "America/Anguilla",
                "America/Antigua",
                "America/Araguaina",
                "America/Argentina/Buenos_Aires",
                "America/Argentina/Catamarca",
                "America/Argentina/Cordoba",
                "America/Argentina/Jujuy",
                "America/Argentina/La_Rioja",
                "America/Argentina/Mendoza",
                "America/Argentina/Rio_Gallegos",
                "America/Argentina/Salta",
                "America/Argentina/San_Juan",
                "America/Argentina/San_Luis",
                "America/Argentina/Tucuman",
                "America/Argentina/Ushuaia",
                "America/Aruba",
                "America/Asuncion",
                "America/Atikokan",
                "America/Bahia",
                "America/Bahia_Banderas",
                "America/Barbados",
                "America/Belem",
                "America/Belize",
                "America/Blanc-Sablon",
                "America/Boa_Vista",
                "America/Bogota",
                "America/Boise",
                "America/Cambridge_Bay",
                "America/Campo_Grande",
                "America/Cancun",
                "America/Caracas",
                "America/Cayenne",
                "America/Cayman",
                "America/Chicago",
                "America/Chihuahua",
                "America/Costa_Rica",
                "America/Creston",
                "America/Cuiaba",
                "America/Curacao",
                "America/Danmarkshavn",
                "America/Dawson",
                "America/Dawson_Creek",
                "America/Denver",
                "America/Detroit",
                "America/Dominica",
                "America/Edmonton",
                "America/Eirunepe",
                "America/El_Salvador",
                "America/Fort_Nelson",
                "America/Fortaleza",
                "America/Glace_Bay",
                "America/Goose_Bay",
                "America/Grand_Turk",
                "America/Grenada",
                "America/Guadeloupe",
                "America/Guatemala",
                "America/Guayaquil",
                "America/Guyana",
                "America/Halifax",
                "America/Havana",
                "America/Hermosillo",
                "America/Indiana/Indianapolis",
                "America/Indiana/Knox",
                "America/Indiana/Marengo",
                "America/Indiana/Petersburg",
                "America/Indiana/Tell_City",
                "America/Indiana/Vevay",
                "America/Indiana/Vincennes",
                "America/Indiana/Winamac",
                "America/Inuvik",
                "America/Iqaluit",
                "America/Jamaica",
                "America/Juneau",
                "America/Kentucky/Louisville",
                "America/Kentucky/Monticello",
                "America/Kralendijk",
                "America/La_Paz",
                "America/Lima",
                "America/Los_Angeles",
                "America/Lower_Princes",
                "America/Maceio",
                "America/Managua",
                "America/Manaus",
                "America/Marigot",
                "America/Martinique",
                "America/Matamoros",
                "America/Mazatlan",
                "America/Menominee",
                "America/Merida",
                "America/Metlakatla",
                "America/Mexico_City",
                "America/Miquelon",
                "America/Moncton",
                "America/Monterrey",
                "America/Montevideo",
                "America/Montserrat",
                "America/Nassau",
                "America/New_York",
                "America/Nipigon",
                "America/Nome",
                "America/Noronha",
                "America/North_Dakota/Beulah",
                "America/North_Dakota/Center",
                "America/North_Dakota/New_Salem",
                "America/Nuuk",
                "America/Ojinaga",
                "America/Panama",
                "America/Pangnirtung",
                "America/Paramaribo",
                "America/Phoenix",
                "America/Port-au-Prince",
                "America/Port_of_Spain",
                "America/Porto_Velho",
                "America/Puerto_Rico",
                "America/Punta_Arenas",
                "America/Rainy_River",
                "America/Rankin_Inlet",
                "America/Recife",
                "America/Regina",
                "America/Resolute",
                "America/Rio_Branco",
                "America/Santarem",
                "America/Santiago",
                "America/Santo_Domingo",
                "America/Sao_Paulo",
                "America/Scoresbysund",
                "America/Sitka",
                "America/St_Barthelemy",
                "America/St_Johns",
                "America/St_Kitts",
                "America/St_Lucia",
                "America/St_Thomas",
                "America/St_Vincent",
                "America/Swift_Current",
                "America/Tegucigalpa",
                "America/Thule",
                "America/Thunder_Bay",
                "America/Tijuana",
                "America/Toronto",
                "America/Tortola",
                "America/Vancouver",
                "America/Whitehorse",
                "America/Winnipeg",
                "America/Yakutat",
                "America/Yellowknife",
                "Antarctica/Casey",
                "Antarctica/Davis",
                "Antarctica/DumontDUrville",
                "Antarctica/Macquarie",
                "Antarctica/Mawson",
                "Antarctica/McMurdo",
                "Antarctica/Palmer",
                "Antarctica/Rothera",
                "Antarctica/Syowa",
                "Antarctica/Troll",
                "Antarctica/Vostok",
                "Arctic/Longyearbyen",
                "Asia/Aden",
                "Asia/Almaty",
                "Asia/Amman",
                "Asia/Anadyr",
                "Asia/Aqtau",
                "Asia/Aqtobe",
                "Asia/Ashgabat",
                "Asia/Atyrau",
                "Asia/Baghdad",
                "Asia/Bahrain",
                "Asia/Baku",
                "Asia/Bangkok",
                "Asia/Barnaul",
                "Asia/Beirut",
                "Asia/Bishkek",
                "Asia/Brunei",
                "Asia/Chita",
                "Asia/Choibalsan",
                "Asia/Colombo",
                "Asia/Damascus",
                "Asia/Dhaka",
                "Asia/Dili",
                "Asia/Dubai",
                "Asia/Dushanbe",
                "Asia/Famagusta",
                "Asia/Gaza",
                "Asia/Hebron",
                "Asia/Ho_Chi_Minh",
                "Asia/Hong_Kong",
                "Asia/Hovd",
                "Asia/Irkutsk",
                "Asia/Jakarta",
                "Asia/Jayapura",
                "Asia/Jerusalem",
                "Asia/Kabul",
                "Asia/Kamchatka",
                "Asia/Karachi",
                "Asia/Kathmandu",
                "Asia/Khandyga",
                "Asia/Kolkata",
                "Asia/Krasnoyarsk",
                "Asia/Kuala_Lumpur",
                "Asia/Kuching",
                "Asia/Kuwait",
                "Asia/Macau",
                "Asia/Magadan",
                "Asia/Makassar",
                "Asia/Manila",
                "Asia/Muscat",
                "Asia/Novokuznetsk",
                "Asia/Novosibirsk",
                "Asia/Omsk",
                "Asia/Oral",
                "Asia/Phnom_Penh",
                "Asia/Pontianak",
                "Asia/Pyongyang",
                "Asia/Qatar",
                "Asia/Qostanay",
                "Asia/Qyzylorda",
                "Asia/Riyadh",
                "Asia/Sakhalin",
                "Asia/Samarkand",
                "Asia/Seoul",
                "Asia/Shanghai",
                "Asia/Singapore",
                "Asia/Srednekolymsk",
                "Asia/Taipei",
                "Asia/Tashkent",
                "Asia/Tbilisi",
                "Asia/Tehran",
                "Asia/Thimphu",
                "Asia/Tokyo",
                "Asia/Tomsk",
                "Asia/Ulaanbaatar",
                "Asia/Urumqi",
                "Asia/Ust-Nera",
                "Asia/Vientiane",
                "Asia/Vladivostok",
                "Asia/Yakutsk",
                "Asia/Yangon",
                "Asia/Yekaterinburg",
                "Asia/Yerevan",
                "Atlantic/Azores",
                "Atlantic/Bermuda",
                "Atlantic/Canary",
                "Atlantic/Cape_Verde",
                "Atlantic/Faroe",
                "Atlantic/Madeira",
                "Atlantic/Reykjavik",
                "Atlantic/South_Georgia",
                "Atlantic/St_Helena",
                "Atlantic/Stanley",
                "Australia/Adelaide",
                "Australia/Brisbane",
                "Australia/Broken_Hill",
                "Australia/Darwin",
                "Australia/Eucla",
                "Australia/Hobart",
                "Australia/Lindeman",
                "Australia/Lord_Howe",
                "Australia/Melbourne",
                "Australia/Perth",
                "Australia/Sydney",
                "CET",
                "CST6CDT",
                "EET",
                "EST",
                "EST5EDT",
                "Etc/GMT",
                "Etc/GMT+0",
                "Etc/GMT+1",
                "Etc/GMT+10",
                "Etc/GMT+11",
                "Etc/GMT+12",
                "Etc/GMT+2",
                "Etc/GMT+3",
                "Etc/GMT+4",
                "Etc/GMT+5",
                "Etc/GMT+6",
                "Etc/GMT+7",
                "Etc/GMT+8",
                "Etc/GMT+9",
                "Etc/GMT-0",
                "Etc/GMT-1",
                "Etc/GMT-10",
                "Etc/GMT-11",
                "Etc/GMT-12",
                "Etc/GMT-13",
                "Etc/GMT-14",
                "Etc/GMT-2",
                "Etc/GMT-3",
                "Etc/GMT-4",
                "Etc/GMT-5",
                "Etc/GMT-6",
                "Etc/GMT-7",
                "Etc/GMT-8",
                "Etc/GMT-9",
                "Etc/GMT0",
                "Etc/Greenwich",
                "Etc/UTC",
                "Etc/Universal",
                "Etc/Zulu",
                "Europe/Amsterdam",
                "Europe/Andorra",
                "Europe/Astrakhan",
                "Europe/Athens",
                "Europe/Belgrade",
                "Europe/Berlin",
                "Europe/Bratislava",
                "Europe/Brussels",
                "Europe/Bucharest",
                "Europe/Budapest",
                "Europe/Busingen",
                "Europe/Chisinau",
                "Europe/Copenhagen",
                "Europe/Dublin",
                "Europe/Gibraltar",
                "Europe/Guernsey",
                "Europe/Helsinki",
                "Europe/Isle_of_Man",
                "Europe/Istanbul",
                "Europe/Jersey",
                "Europe/Kaliningrad",
                "Europe/Kirov",
                "Europe/Kyiv",
                "Europe/Lisbon",
                "Europe/Ljubljana",
                "Europe/London",
                "Europe/Luxembourg",
                "Europe/Madrid",
                "Europe/Malta",
                "Europe/Mariehamn",
                "Europe/Minsk",
                "Europe/Monaco",
                "Europe/Moscow",
                "Europe/Nicosia",
                "Europe/Oslo",
                "Europe/Paris",
                "Europe/Podgorica",
                "Europe/Prague",
                "Europe/Riga",
                "Europe/Rome",
                "Europe/Samara",
                "Europe/San_Marino",
                "Europe/Sarajevo",
                "Europe/Saratov",
                "Europe/Simferopol",
                "Europe/Skopje",
                "Europe/Sofia",
                "Europe/Stockholm",
                "Europe/Tallinn",
                "Europe/Tirane",
                "Europe/Ulyanovsk",
                "Europe/Uzhgorod",
                "Europe/Vaduz",
                "Europe/Vatican",
                "Europe/Vienna",
                "Europe/Vilnius",
                "Europe/Volgograd",
                "Europe/Warsaw",
                "Europe/Zagreb",
                "Europe/Zaporozhye",
                "Europe/Zurich",
                "GMT",
                "HST",
                "Indian/Antananarivo",
                "Indian/Chagos",
                "Indian/Christmas",
                "Indian/Cocos",
                "Indian/Comoro",
                "Indian/Kerguelen",
                "Indian/Mahe",
                "Indian/Maldives",
                "Indian/Mauritius",
                "Indian/Mayotte",
                "Indian/Reunion",
                "MET",
                "MST",
                "MST7MDT",
                "PST8PDT",
                "Pacific/Apia",
                "Pacific/Auckland",
                "Pacific/Bougainville",
                "Pacific/Chatham",
                "Pacific/Chuuk",
                "Pacific/Easter",
                "Pacific/Efate",
                "Pacific/Fakaofo",
                "Pacific/Fiji",
                "Pacific/Funafuti",
                "Pacific/Galapagos",
                "Pacific/Gambier",
                "Pacific/Guadalcanal",
                "Pacific/Guam",
                "Pacific/Honolulu",
                "Pacific/Kanton",
                "Pacific/Kiritimati",
                "Pacific/Kosrae",
                "Pacific/Kwajalein",
                "Pacific/Majuro",
                "Pacific/Marquesas",
                "Pacific/Midway",
                "Pacific/Nauru",
                "Pacific/Niue",
                "Pacific/Norfolk",
                "Pacific/Noumea",
                "Pacific/Pago_Pago",
                "Pacific/Palau",
                "Pacific/Pitcairn",
                "Pacific/Pohnpei",
                "Pacific/Port_Moresby",
                "Pacific/Rarotonga",
                "Pacific/Saipan",
                "Pacific/Tahiti",
                "Pacific/Tarawa",
                "Pacific/Tongatapu",
                "Pacific/Wake",
                "Pacific/Wallis",
                "UTC",
                "WET"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "convert_to",
            "description": "Optional list of units to convert to. If passed, must be of same length as timeseries list. Empty string means no conversion for a timeseries.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false,
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "aggregation",
            "schema": {
              "type": "string",
              "default": "avg",
              "enum": [
                "avg",
                "sum",
                "min",
                "max",
                "count"
              ]
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": "{\n    \"1\": {\n        \"2020-01-01T00:00:00+00:00\": 0.1,\n        \"2020-01-01T10:00:00+00:00\": 0.2,\n        \"2020-01-01T20:00:00+00:00\": 0.3,\n    },\n    \"2\": {\n        \"2020-01-01T00:00:00+00:00\": 1.1,\n        \"2020-01-01T10:00:00+00:00\": 1.2,\n        \"2020-01-01T20:00:00+00:00\": 1.3,\n    },\n    \"3\": {\n        \"2020-01-01T00:00:00+00:00\": 2.1,\n        \"2020-01-01T10:00:00+00:00\": 2.2,\n        \"2020-01-01T20:00:00+00:00\": 2.3,\n    },\n}"
              },
              "text/csv": {
                "example": "Datetime,1,2,3\n2020-01-01T00:00:00+00:00,0.1,1.1,2.1\n2020-01-01T00:10:00+00:00,0.2,1.2,2.2\n2020-01-01T00:20:00+00:00,0.3,1.3,2.3"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get aggregated timeseries data as CSV file",
        "description": "Returns data in either JSON or CSV format.\n\nJSON: each key is a timestamp ID as string. For each timeseries, values are\npassed a {timestamp: value} mappings.\n\nCSV: the first column is the timestamp as timezone aware datetime and each\nother column is a timeseries data. Column headers are timeseries IDs.",
        "tags": [
          "TimeseriesData"
        ]
      }
    },
    "/timeseries_data/campaign/{campaign_id}/stats": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "data_state",
            "description": "Data state ID",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "timezone",
            "description": "Timezone to use for response data",
            "schema": {
              "type": "string",
              "format": "iana-tz",
              "default": "UTC",
              "enum": [
                "Africa/Abidjan",
                "Africa/Accra",
                "Africa/Addis_Ababa",
                "Africa/Algiers",
                "Africa/Asmara",
                "Africa/Bamako",
                "Africa/Bangui",
                "Africa/Banjul",
                "Africa/Bissau",
                "Africa/Blantyre",
                "Africa/Brazzaville",
                "Africa/Bujumbura",
                "Africa/Cairo",
                "Africa/Casablanca",
                "Africa/Ceuta",
                "Africa/Conakry",
                "Africa/Dakar",
                "Africa/Dar_es_Salaam",
                "Africa/Djibouti",
                "Africa/Douala",
                "Africa/El_Aaiun",
                "Africa/Freetown",
                "Africa/Gaborone",
                "Africa/Harare",
                "Africa/Johannesburg",
                "Africa/Juba",
                "Africa/Kampala",
                "Africa/Khartoum",
                "Africa/Kigali",
                "Africa/Kinshasa",
                "Africa/Lagos",
                "Africa/Libreville",
                "Africa/Lome",
                "Africa/Luanda",
                "Africa/Lubumbashi",
                "Africa/Lusaka",
                "Africa/Malabo",
                "Africa/Maputo",
                "Africa/Maseru",
                "Africa/Mbabane",
                "Africa/Mogadishu",
                "Africa/Monrovia",
                "Africa/Nairobi",
                "Africa/Ndjamena",
                "Africa/Niamey",
                "Africa/Nouakchott",
                "Africa/Ouagadougou",
                "Africa/Porto-Novo",
                "Africa/Sao_Tome",
                "Africa/Tripoli",
                "Africa/Tunis",
                "Africa/Windhoek",
                "America/Adak",
                "America/Anchorage",
                "America/Anguilla",
                "America/Antigua",
                "America/Araguaina",
                "America/Argentina/Buenos_Aires",
                "America/Argentina/Catamarca",
                "America/Argentina/Cordoba",
                "America/Argentina/Jujuy",
                "America/Argentina/La_Rioja",
                "America/Argentina/Mendoza",
                "America/Argentina/Rio_Gallegos",
                "America/Argentina/Salta",
                "America/Argentina/San_Juan",
                "America/Argentina/San_Luis",
                "America/Argentina/Tucuman",
                "America/Argentina/Ushuaia",
                "America/Aruba",
                "America/Asuncion",
                "America/Atikokan",
                "America/Bahia",
                "America/Bahia_Banderas",
                "America/Barbados",
                "America/Belem",
                "America/Belize",
                "America/Blanc-Sablon",
                "America/Boa_Vista",
                "America/Bogota",
                "America/Boise",
                "America/Cambridge_Bay",
                "America/Campo_Grande",
                "America/Cancun",
                "America/Caracas",
                "America/Cayenne",
                "America/Cayman",
                "America/Chicago",
                "America/Chihuahua",
                "America/Costa_Rica",
                "America/Creston",
                "America/Cuiaba",
                "America/Curacao",
                "America/Danmarkshavn",
                "America/Dawson",
                "America/Dawson_Creek",
                "America/Denver",
                "America/Detroit",
                "America/Dominica",
                "America/Edmonton",
                "America/Eirunepe",
                "America/El_Salvador",
                "America/Fort_Nelson",
                "America/Fortaleza",
                "America/Glace_Bay",
                "America/Goose_Bay",
                "America/Grand_Turk",
                "America/Grenada",
                "America/Guadeloupe",
                "America/Guatemala",
                "America/Guayaquil",
                "America/Guyana",
                "America/Halifax",
                "America/Havana",
                "America/Hermosillo",
                "America/Indiana/Indianapolis",
                "America/Indiana/Knox",
                "America/Indiana/Marengo",
                "America/Indiana/Petersburg",
                "America/Indiana/Tell_City",
                "America/Indiana/Vevay",
                "America/Indiana/Vincennes",
                "America/Indiana/Winamac",
                "America/Inuvik",
                "America/Iqaluit",
                "America/Jamaica",
                "America/Juneau",
                "America/Kentucky/Louisville",
                "America/Kentucky/Monticello",
                "America/Kralendijk",
                "America/La_Paz",
                "America/Lima",
                "America/Los_Angeles",
                "America/Lower_Princes",
                "America/Maceio",
                "America/Managua",
                "America/Manaus",
                "America/Marigot",
                "America/Martinique",
                "America/Matamoros",
                "America/Mazatlan",
                "America/Menominee",
                "America/Merida",
                "America/Metlakatla",
                "America/Mexico_City",
                "America/Miquelon",
                "America/Moncton",
                "America/Monterrey",
                "America/Montevideo",
                "America/Montserrat",
                "America/Nassau",
                "America/New_York",
                "America/Nipigon",
                "America/Nome",
                "America/Noronha",
                "America/North_Dakota/Beulah",
                "America/North_Dakota/Center",
                "America/North_Dakota/New_Salem",
                "America/Nuuk",
                "America/Ojinaga",
                "America/Panama",
                "America/Pangnirtung",
                "America/Paramaribo",
                "America/Phoenix",
                "America/Port-au-Prince",
                "America/Port_of_Spain",
                "America/Porto_Velho",
                "America/Puerto_Rico",
                "America/Punta_Arenas",
                "America/Rainy_River",
                "America/Rankin_Inlet",
                "America/Recife",
                "America/Regina",
                "America/Resolute",
                "America/Rio_Branco",
                "America/Santarem",
                "America/Santiago",
                "America/Santo_Domingo",
                "America/Sao_Paulo",
                "America/Scoresbysund",
                "America/Sitka",
                "America/St_Barthelemy",
                "America/St_Johns",
                "America/St_Kitts",
                "America/St_Lucia",
                "America/St_Thomas",
                "America/St_Vincent",
                "America/Swift_Current",
                "America/Tegucigalpa",
                "America/Thule",
                "America/Thunder_Bay",
                "America/Tijuana",
                "America/Toronto",
                "America/Tortola",
                "America/Vancouver",
                "America/Whitehorse",
                "America/Winnipeg",
                "America/Yakutat",
                "America/Yellowknife",
                "Antarctica/Casey",
                "Antarctica/Davis",
                "Antarctica/DumontDUrville",
                "Antarctica/Macquarie",
                "Antarctica/Mawson",
                "Antarctica/McMurdo",
                "Antarctica/Palmer",
                "Antarctica/Rothera",
                "Antarctica/Syowa",
                "Antarctica/Troll",
                "Antarctica/Vostok",
                "Arctic/Longyearbyen",
                "Asia/Aden",
                "Asia/Almaty",
                "Asia/Amman",
                "Asia/Anadyr",
                "Asia/Aqtau",
                "Asia/Aqtobe",
                "Asia/Ashgabat",
                "Asia/Atyrau",
                "Asia/Baghdad",
                "Asia/Bahrain",
                "Asia/Baku",
                "Asia/Bangkok",
                "Asia/Barnaul",
                "Asia/Beirut",
                "Asia/Bishkek",
                "Asia/Brunei",
                "Asia/Chita",
                "Asia/Choibalsan",
                "Asia/Colombo",
                "Asia/Damascus",
                "Asia/Dhaka",
                "Asia/Dili",
                "Asia/Dubai",
                "Asia/Dushanbe",
                "Asia/Famagusta",
                "Asia/Gaza",
                "Asia/Hebron",
                "Asia/Ho_Chi_Minh",
                "Asia/Hong_Kong",
                "Asia/Hovd",
                "Asia/Irkutsk",
                "Asia/Jakarta",
                "Asia/Jayapura",
                "Asia/Jerusalem",
                "Asia/Kabul",
                "Asia/Kamchatka",
                "Asia/Karachi",
                "Asia/Kathmandu",
                "Asia/Khandyga",
                "Asia/Kolkata",
                "Asia/Krasnoyarsk",
                "Asia/Kuala_Lumpur",
                "Asia/Kuching",
                "Asia/Kuwait",
                "Asia/Macau",
                "Asia/Magadan",
                "Asia/Makassar",
                "Asia/Manila",
                "Asia/Muscat",
                "Asia/Novokuznetsk",
                "Asia/Novosibirsk",
                "Asia/Omsk",
                "Asia/Oral",
                "Asia/Phnom_Penh",
                "Asia/Pontianak",
                "Asia/Pyongyang",
                "Asia/Qatar",
                "Asia/Qostanay",
                "Asia/Qyzylorda",
                "Asia/Riyadh",
                "Asia/Sakhalin",
                "Asia/Samarkand",
                "Asia/Seoul",
                "Asia/Shanghai",
                "Asia/Singapore",
                "Asia/Srednekolymsk",
                "Asia/Taipei",
                "Asia/Tashkent",
                "Asia/Tbilisi",
                "Asia/Tehran",
                "Asia/Thimphu",
                "Asia/Tokyo",
                "Asia/Tomsk",
                "Asia/Ulaanbaatar",
                "Asia/Urumqi",
                "Asia/Ust-Nera",
                "Asia/Vientiane",
                "Asia/Vladivostok",
                "Asia/Yakutsk",
                "Asia/Yangon",
                "Asia/Yekaterinburg",
                "Asia/Yerevan",
                "Atlantic/Azores",
                "Atlantic/Bermuda",
                "Atlantic/Canary",
                "Atlantic/Cape_Verde",
                "Atlantic/Faroe",
                "Atlantic/Madeira",
                "Atlantic/Reykjavik",
                "Atlantic/South_Georgia",
                "Atlantic/St_Helena",
                "Atlantic/Stanley",
                "Australia/Adelaide",
                "Australia/Brisbane",
                "Australia/Broken_Hill",
                "Australia/Darwin",
                "Australia/Eucla",
                "Australia/Hobart",
                "Australia/Lindeman",
                "Australia/Lord_Howe",
                "Australia/Melbourne",
                "Australia/Perth",
                "Australia/Sydney",
                "CET",
                "CST6CDT",
                "EET",
                "EST",
                "EST5EDT",
                "Etc/GMT",
                "Etc/GMT+0",
                "Etc/GMT+1",
                "Etc/GMT+10",
                "Etc/GMT+11",
                "Etc/GMT+12",
                "Etc/GMT+2",
                "Etc/GMT+3",
                "Etc/GMT+4",
                "Etc/GMT+5",
                "Etc/GMT+6",
                "Etc/GMT+7",
                "Etc/GMT+8",
                "Etc/GMT+9",
                "Etc/GMT-0",
                "Etc/GMT-1",
                "Etc/GMT-10",
                "Etc/GMT-11",
                "Etc/GMT-12",
                "Etc/GMT-13",
                "Etc/GMT-14",
                "Etc/GMT-2",
                "Etc/GMT-3",
                "Etc/GMT-4",
                "Etc/GMT-5",
                "Etc/GMT-6",
                "Etc/GMT-7",
                "Etc/GMT-8",
                "Etc/GMT-9",
                "Etc/GMT0",
                "Etc/Greenwich",
                "Etc/UTC",
                "Etc/Universal",
                "Etc/Zulu",
                "Europe/Amsterdam",
                "Europe/Andorra",
                "Europe/Astrakhan",
                "Europe/Athens",
                "Europe/Belgrade",
                "Europe/Berlin",
                "Europe/Bratislava",
                "Europe/Brussels",
                "Europe/Bucharest",
                "Europe/Budapest",
                "Europe/Busingen",
                "Europe/Chisinau",
                "Europe/Copenhagen",
                "Europe/Dublin",
                "Europe/Gibraltar",
                "Europe/Guernsey",
                "Europe/Helsinki",
                "Europe/Isle_of_Man",
                "Europe/Istanbul",
                "Europe/Jersey",
                "Europe/Kaliningrad",
                "Europe/Kirov",
                "Europe/Kyiv",
                "Europe/Lisbon",
                "Europe/Ljubljana",
                "Europe/London",
                "Europe/Luxembourg",
                "Europe/Madrid",
                "Europe/Malta",
                "Europe/Mariehamn",
                "Europe/Minsk",
                "Europe/Monaco",
                "Europe/Moscow",
                "Europe/Nicosia",
                "Europe/Oslo",
                "Europe/Paris",
                "Europe/Podgorica",
                "Europe/Prague",
                "Europe/Riga",
                "Europe/Rome",
                "Europe/Samara",
                "Europe/San_Marino",
                "Europe/Sarajevo",
                "Europe/Saratov",
                "Europe/Simferopol",
                "Europe/Skopje",
                "Europe/Sofia",
                "Europe/Stockholm",
                "Europe/Tallinn",
                "Europe/Tirane",
                "Europe/Ulyanovsk",
                "Europe/Uzhgorod",
                "Europe/Vaduz",
                "Europe/Vatican",
                "Europe/Vienna",
                "Europe/Vilnius",
                "Europe/Volgograd",
                "Europe/Warsaw",
                "Europe/Zagreb",
                "Europe/Zaporozhye",
                "Europe/Zurich",
                "GMT",
                "HST",
                "Indian/Antananarivo",
                "Indian/Chagos",
                "Indian/Christmas",
                "Indian/Cocos",
                "Indian/Comoro",
                "Indian/Kerguelen",
                "Indian/Mahe",
                "Indian/Maldives",
                "Indian/Mauritius",
                "Indian/Mayotte",
                "Indian/Reunion",
                "MET",
                "MST",
                "MST7MDT",
                "PST8PDT",
                "Pacific/Apia",
                "Pacific/Auckland",
                "Pacific/Bougainville",
                "Pacific/Chatham",
                "Pacific/Chuuk",
                "Pacific/Easter",
                "Pacific/Efate",
                "Pacific/Fakaofo",
                "Pacific/Fiji",
                "Pacific/Funafuti",
                "Pacific/Galapagos",
                "Pacific/Gambier",
                "Pacific/Guadalcanal",
                "Pacific/Guam",
                "Pacific/Honolulu",
                "Pacific/Kanton",
                "Pacific/Kiritimati",
                "Pacific/Kosrae",
                "Pacific/Kwajalein",
                "Pacific/Majuro",
                "Pacific/Marquesas",
                "Pacific/Midway",
                "Pacific/Nauru",
                "Pacific/Niue",
                "Pacific/Norfolk",
                "Pacific/Noumea",
                "Pacific/Pago_Pago",
                "Pacific/Palau",
                "Pacific/Pitcairn",
                "Pacific/Pohnpei",
                "Pacific/Port_Moresby",
                "Pacific/Rarotonga",
                "Pacific/Saipan",
                "Pacific/Tahiti",
                "Pacific/Tarawa",
                "Pacific/Tongatapu",
                "Pacific/Wake",
                "Pacific/Wallis",
                "UTC",
                "WET"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries",
            "description": "List of timeseries names",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true,
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesDataStatsByName"
                },
                "example": "{\n    \"stats\":\n    {\n        \"Timeseries 1\": {\n            \"first_timestamp\": \"2020-01-01T00:00:00+00:00\",\n            \"last_timestamp\": \"2021-01-01T00:00:00+00:00\",\n            \"count\": 42,\n            \"min\": 0.0,\n            \"max\": 42.0,\n            \"avg\": 12.0,\n            \"stddev\": 4.2,\n        },\n        \"Timeseries 2\": {\n            \"first_timestamp\": \"2020-01-01T00:00:00+00:00\",\n            \"last_timestamp\": \"2021-01-01T00:00:00+00:00\",\n            \"count\": 69,\n            \"min\": 12.0,\n            \"max\": 142.0,\n            \"avg\": 69.0,\n            \"stddev\": 6.9,\n        },\n    },\n}"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries data stats",
        "tags": [
          "TimeseriesDataForCampaign"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "campaign_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/timeseries_data/campaign/{campaign_id}/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "timeseries",
            "description": "List of timeseries names",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true,
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "Initial datetime",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "End datetime (excluded from the interval)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "data_state",
            "description": "Data state ID",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "timezone",
            "description": "Timezone to use for response data",
            "schema": {
              "type": "string",
              "format": "iana-tz",
              "default": "UTC",
              "enum": [
                "Africa/Abidjan",
                "Africa/Accra",
                "Africa/Addis_Ababa",
                "Africa/Algiers",
                "Africa/Asmara",
                "Africa/Bamako",
                "Africa/Bangui",
                "Africa/Banjul",
                "Africa/Bissau",
                "Africa/Blantyre",
                "Africa/Brazzaville",
                "Africa/Bujumbura",
                "Africa/Cairo",
                "Africa/Casablanca",
                "Africa/Ceuta",
                "Africa/Conakry",
                "Africa/Dakar",
                "Africa/Dar_es_Salaam",
                "Africa/Djibouti",
                "Africa/Douala",
                "Africa/El_Aaiun",
                "Africa/Freetown",
                "Africa/Gaborone",
                "Africa/Harare",
                "Africa/Johannesburg",
                "Africa/Juba",
                "Africa/Kampala",
                "Africa/Khartoum",
                "Africa/Kigali",
                "Africa/Kinshasa",
                "Africa/Lagos",
                "Africa/Libreville",
                "Africa/Lome",
                "Africa/Luanda",
                "Africa/Lubumbashi",
                "Africa/Lusaka",
                "Africa/Malabo",
                "Africa/Maputo",
                "Africa/Maseru",
                "Africa/Mbabane",
                "Africa/Mogadishu",
                "Africa/Monrovia",
                "Africa/Nairobi",
                "Africa/Ndjamena",
                "Africa/Niamey",
                "Africa/Nouakchott",
                "Africa/Ouagadougou",
                "Africa/Porto-Novo",
                "Africa/Sao_Tome",
                "Africa/Tripoli",
                "Africa/Tunis",
                "Africa/Windhoek",
                "America/Adak",
                "America/Anchorage",
                "America/Anguilla",
                "America/Antigua",
                "America/Araguaina",
                "America/Argentina/Buenos_Aires",
                "America/Argentina/Catamarca",
                "America/Argentina/Cordoba",
                "America/Argentina/Jujuy",
                "America/Argentina/La_Rioja",
                "America/Argentina/Mendoza",
                "America/Argentina/Rio_Gallegos",
                "America/Argentina/Salta",
                "America/Argentina/San_Juan",
                "America/Argentina/San_Luis",
                "America/Argentina/Tucuman",
                "America/Argentina/Ushuaia",
                "America/Aruba",
                "America/Asuncion",
                "America/Atikokan",
                "America/Bahia",
                "America/Bahia_Banderas",
                "America/Barbados",
                "America/Belem",
                "America/Belize",
                "America/Blanc-Sablon",
                "America/Boa_Vista",
                "America/Bogota",
                "America/Boise",
                "America/Cambridge_Bay",
                "America/Campo_Grande",
                "America/Cancun",
                "America/Caracas",
                "America/Cayenne",
                "America/Cayman",
                "America/Chicago",
                "America/Chihuahua",
                "America/Costa_Rica",
                "America/Creston",
                "America/Cuiaba",
                "America/Curacao",
                "America/Danmarkshavn",
                "America/Dawson",
                "America/Dawson_Creek",
                "America/Denver",
                "America/Detroit",
                "America/Dominica",
                "America/Edmonton",
                "America/Eirunepe",
                "America/El_Salvador",
                "America/Fort_Nelson",
                "America/Fortaleza",
                "America/Glace_Bay",
                "America/Goose_Bay",
                "America/Grand_Turk",
                "America/Grenada",
                "America/Guadeloupe",
                "America/Guatemala",
                "America/Guayaquil",
                "America/Guyana",
                "America/Halifax",
                "America/Havana",
                "America/Hermosillo",
                "America/Indiana/Indianapolis",
                "America/Indiana/Knox",
                "America/Indiana/Marengo",
                "America/Indiana/Petersburg",
                "America/Indiana/Tell_City",
                "America/Indiana/Vevay",
                "America/Indiana/Vincennes",
                "America/Indiana/Winamac",
                "America/Inuvik",
                "America/Iqaluit",
                "America/Jamaica",
                "America/Juneau",
                "America/Kentucky/Louisville",
                "America/Kentucky/Monticello",
                "America/Kralendijk",
                "America/La_Paz",
                "America/Lima",
                "America/Los_Angeles",
                "America/Lower_Princes",
                "America/Maceio",
                "America/Managua",
                "America/Manaus",
                "America/Marigot",
                "America/Martinique",
                "America/Matamoros",
                "America/Mazatlan",
                "America/Menominee",
                "America/Merida",
                "America/Metlakatla",
                "America/Mexico_City",
                "America/Miquelon",
                "America/Moncton",
                "America/Monterrey",
                "America/Montevideo",
                "America/Montserrat",
                "America/Nassau",
                "America/New_York",
                "America/Nipigon",
                "America/Nome",
                "America/Noronha",
                "America/North_Dakota/Beulah",
                "America/North_Dakota/Center",
                "America/North_Dakota/New_Salem",
                "America/Nuuk",
                "America/Ojinaga",
                "America/Panama",
                "America/Pangnirtung",
                "America/Paramaribo",
                "America/Phoenix",
                "America/Port-au-Prince",
                "America/Port_of_Spain",
                "America/Porto_Velho",
                "America/Puerto_Rico",
                "America/Punta_Arenas",
                "America/Rainy_River",
                "America/Rankin_Inlet",
                "America/Recife",
                "America/Regina",
                "America/Resolute",
                "America/Rio_Branco",
                "America/Santarem",
                "America/Santiago",
                "America/Santo_Domingo",
                "America/Sao_Paulo",
                "America/Scoresbysund",
                "America/Sitka",
                "America/St_Barthelemy",
                "America/St_Johns",
                "America/St_Kitts",
                "America/St_Lucia",
                "America/St_Thomas",
                "America/St_Vincent",
                "America/Swift_Current",
                "America/Tegucigalpa",
                "America/Thule",
                "America/Thunder_Bay",
                "America/Tijuana",
                "America/Toronto",
                "America/Tortola",
                "America/Vancouver",
                "America/Whitehorse",
                "America/Winnipeg",
                "America/Yakutat",
                "America/Yellowknife",
                "Antarctica/Casey",
                "Antarctica/Davis",
                "Antarctica/DumontDUrville",
                "Antarctica/Macquarie",
                "Antarctica/Mawson",
                "Antarctica/McMurdo",
                "Antarctica/Palmer",
                "Antarctica/Rothera",
                "Antarctica/Syowa",
                "Antarctica/Troll",
                "Antarctica/Vostok",
                "Arctic/Longyearbyen",
                "Asia/Aden",
                "Asia/Almaty",
                "Asia/Amman",
                "Asia/Anadyr",
                "Asia/Aqtau",
                "Asia/Aqtobe",
                "Asia/Ashgabat",
                "Asia/Atyrau",
                "Asia/Baghdad",
                "Asia/Bahrain",
                "Asia/Baku",
                "Asia/Bangkok",
                "Asia/Barnaul",
                "Asia/Beirut",
                "Asia/Bishkek",
                "Asia/Brunei",
                "Asia/Chita",
                "Asia/Choibalsan",
                "Asia/Colombo",
                "Asia/Damascus",
                "Asia/Dhaka",
                "Asia/Dili",
                "Asia/Dubai",
                "Asia/Dushanbe",
                "Asia/Famagusta",
                "Asia/Gaza",
                "Asia/Hebron",
                "Asia/Ho_Chi_Minh",
                "Asia/Hong_Kong",
                "Asia/Hovd",
                "Asia/Irkutsk",
                "Asia/Jakarta",
                "Asia/Jayapura",
                "Asia/Jerusalem",
                "Asia/Kabul",
                "Asia/Kamchatka",
                "Asia/Karachi",
                "Asia/Kathmandu",
                "Asia/Khandyga",
                "Asia/Kolkata",
                "Asia/Krasnoyarsk",
                "Asia/Kuala_Lumpur",
                "Asia/Kuching",
                "Asia/Kuwait",
                "Asia/Macau",
                "Asia/Magadan",
                "Asia/Makassar",
                "Asia/Manila",
                "Asia/Muscat",
                "Asia/Novokuznetsk",
                "Asia/Novosibirsk",
                "Asia/Omsk",
                "Asia/Oral",
                "Asia/Phnom_Penh",
                "Asia/Pontianak",
                "Asia/Pyongyang",
                "Asia/Qatar",
                "Asia/Qostanay",
                "Asia/Qyzylorda",
                "Asia/Riyadh",
                "Asia/Sakhalin",
                "Asia/Samarkand",
                "Asia/Seoul",
                "Asia/Shanghai",
                "Asia/Singapore",
                "Asia/Srednekolymsk",
                "Asia/Taipei",
                "Asia/Tashkent",
                "Asia/Tbilisi",
                "Asia/Tehran",
                "Asia/Thimphu",
                "Asia/Tokyo",
                "Asia/Tomsk",
                "Asia/Ulaanbaatar",
                "Asia/Urumqi",
                "Asia/Ust-Nera",
                "Asia/Vientiane",
                "Asia/Vladivostok",
                "Asia/Yakutsk",
                "Asia/Yangon",
                "Asia/Yekaterinburg",
                "Asia/Yerevan",
                "Atlantic/Azores",
                "Atlantic/Bermuda",
                "Atlantic/Canary",
                "Atlantic/Cape_Verde",
                "Atlantic/Faroe",
                "Atlantic/Madeira",
                "Atlantic/Reykjavik",
                "Atlantic/South_Georgia",
                "Atlantic/St_Helena",
                "Atlantic/Stanley",
                "Australia/Adelaide",
                "Australia/Brisbane",
                "Australia/Broken_Hill",
                "Australia/Darwin",
                "Australia/Eucla",
                "Australia/Hobart",
                "Australia/Lindeman",
                "Australia/Lord_Howe",
                "Australia/Melbourne",
                "Australia/Perth",
                "Australia/Sydney",
                "CET",
                "CST6CDT",
                "EET",
                "EST",
                "EST5EDT",
                "Etc/GMT",
                "Etc/GMT+0",
                "Etc/GMT+1",
                "Etc/GMT+10",
                "Etc/GMT+11",
                "Etc/GMT+12",
                "Etc/GMT+2",
                "Etc/GMT+3",
                "Etc/GMT+4",
                "Etc/GMT+5",
                "Etc/GMT+6",
                "Etc/GMT+7",
                "Etc/GMT+8",
                "Etc/GMT+9",
                "Etc/GMT-0",
                "Etc/GMT-1",
                "Etc/GMT-10",
                "Etc/GMT-11",
                "Etc/GMT-12",
                "Etc/GMT-13",
                "Etc/GMT-14",
                "Etc/GMT-2",
                "Etc/GMT-3",
                "Etc/GMT-4",
                "Etc/GMT-5",
                "Etc/GMT-6",
                "Etc/GMT-7",
                "Etc/GMT-8",
                "Etc/GMT-9",
                "Etc/GMT0",
                "Etc/Greenwich",
                "Etc/UTC",
                "Etc/Universal",
                "Etc/Zulu",
                "Europe/Amsterdam",
                "Europe/Andorra",
                "Europe/Astrakhan",
                "Europe/Athens",
                "Europe/Belgrade",
                "Europe/Berlin",
                "Europe/Bratislava",
                "Europe/Brussels",
                "Europe/Bucharest",
                "Europe/Budapest",
                "Europe/Busingen",
                "Europe/Chisinau",
                "Europe/Copenhagen",
                "Europe/Dublin",
                "Europe/Gibraltar",
                "Europe/Guernsey",
                "Europe/Helsinki",
                "Europe/Isle_of_Man",
                "Europe/Istanbul",
                "Europe/Jersey",
                "Europe/Kaliningrad",
                "Europe/Kirov",
                "Europe/Kyiv",
                "Europe/Lisbon",
                "Europe/Ljubljana",
                "Europe/London",
                "Europe/Luxembourg",
                "Europe/Madrid",
                "Europe/Malta",
                "Europe/Mariehamn",
                "Europe/Minsk",
                "Europe/Monaco",
                "Europe/Moscow",
                "Europe/Nicosia",
                "Europe/Oslo",
                "Europe/Paris",
                "Europe/Podgorica",
                "Europe/Prague",
                "Europe/Riga",
                "Europe/Rome",
                "Europe/Samara",
                "Europe/San_Marino",
                "Europe/Sarajevo",
                "Europe/Saratov",
                "Europe/Simferopol",
                "Europe/Skopje",
                "Europe/Sofia",
                "Europe/Stockholm",
                "Europe/Tallinn",
                "Europe/Tirane",
                "Europe/Ulyanovsk",
                "Europe/Uzhgorod",
                "Europe/Vaduz",
                "Europe/Vatican",
                "Europe/Vienna",
                "Europe/Vilnius",
                "Europe/Volgograd",
                "Europe/Warsaw",
                "Europe/Zagreb",
                "Europe/Zaporozhye",
                "Europe/Zurich",
                "GMT",
                "HST",
                "Indian/Antananarivo",
                "Indian/Chagos",
                "Indian/Christmas",
                "Indian/Cocos",
                "Indian/Comoro",
                "Indian/Kerguelen",
                "Indian/Mahe",
                "Indian/Maldives",
                "Indian/Mauritius",
                "Indian/Mayotte",
                "Indian/Reunion",
                "MET",
                "MST",
                "MST7MDT",
                "PST8PDT",
                "Pacific/Apia",
                "Pacific/Auckland",
                "Pacific/Bougainville",
                "Pacific/Chatham",
                "Pacific/Chuuk",
                "Pacific/Easter",
                "Pacific/Efate",
                "Pacific/Fakaofo",
                "Pacific/Fiji",
                "Pacific/Funafuti",
                "Pacific/Galapagos",
                "Pacific/Gambier",
                "Pacific/Guadalcanal",
                "Pacific/Guam",
                "Pacific/Honolulu",
                "Pacific/Kanton",
                "Pacific/Kiritimati",
                "Pacific/Kosrae",
                "Pacific/Kwajalein",
                "Pacific/Majuro",
                "Pacific/Marquesas",
                "Pacific/Midway",
                "Pacific/Nauru",
                "Pacific/Niue",
                "Pacific/Norfolk",
                "Pacific/Noumea",
                "Pacific/Pago_Pago",
                "Pacific/Palau",
                "Pacific/Pitcairn",
                "Pacific/Pohnpei",
                "Pacific/Port_Moresby",
                "Pacific/Rarotonga",
                "Pacific/Saipan",
                "Pacific/Tahiti",
                "Pacific/Tarawa",
                "Pacific/Tongatapu",
                "Pacific/Wake",
                "Pacific/Wallis",
                "UTC",
                "WET"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "convert_to",
            "description": "Optional list of units to convert to. If passed, must be of same length as timeseries list. Empty string means no conversion for a timeseries.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false,
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": "{\n    \"Timeseries 1\": {\n        \"2020-01-01T00:00:00+00:00\": 0.1,\n        \"2020-01-01T10:00:00+00:00\": 0.2,\n        \"2020-01-01T20:00:00+00:00\": 0.3,\n    },\n    \"Timeseries 2\": {\n        \"2020-01-01T00:00:00+00:00\": 1.1,\n        \"2020-01-01T10:00:00+00:00\": 1.2,\n        \"2020-01-01T20:00:00+00:00\": 1.3,\n    },\n    \"Timeseries 3\": {\n        \"2020-01-01T00:00:00+00:00\": 2.1,\n        \"2020-01-01T10:00:00+00:00\": 2.2,\n        \"2020-01-01T20:00:00+00:00\": 2.3,\n    },\n}"
              },
              "text/csv": {
                "example": "Datetime,Timeseries 1,Timeseries 2,Timeseries 3\n2020-01-01T00:00:00+00:00,0.1,1.1,2.1\n2020-01-01T00:10:00+00:00,0.2,1.2,2.2\n2020-01-01T00:20:00+00:00,0.3,1.3,2.3"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries data for a given campaign",
        "description": "Returns data in either JSON or CSV format.\n\nJSON: each key is a timestamp name as string. For each timeseries, values\nare passed a {timestamp: value} mappings.\n\nCSV: the first column is the timestamp as timezone aware datetime and each\nother column is a timeseries data. Column headers are timeseries names.",
        "tags": [
          "TimeseriesDataForCampaign"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "campaign_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "data_state",
            "description": "Data state ID",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "201": {
            "description": "Created"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Post timeseries data for a given campaign",
        "description": "Loads data in either JSON or CSV format.\n\nJSON: each key is a timestamp ID as string. For each timeseries, values are\npassed as {timestamp: value} mappings.",
        "tags": [
          "TimeseriesDataForCampaign"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "binary",
                "example": "{\n    \"Timeseries 1\": {\n        \"2020-01-01T00:00:00+00:00\": 0.1,\n        \"2020-01-01T10:00:00+00:00\": 0.2,\n        \"2020-01-01T20:00:00+00:00\": 0.3,\n    },\n    \"Timeseries 2\": {\n        \"2020-01-01T00:00:00+00:00\": 1.1,\n        \"2020-01-01T10:00:00+00:00\": 1.2,\n        \"2020-01-01T20:00:00+00:00\": 1.3,\n    },\n    \"Timeseries 3\": {\n        \"2020-01-01T00:00:00+00:00\": 2.1,\n        \"2020-01-01T10:00:00+00:00\": 2.2,\n        \"2020-01-01T20:00:00+00:00\": 2.3,\n    },\n}"
              }
            },
            "text/csv": {
              "schema": {
                "type": "string",
                "format": "binary",
                "example": "Datetime,Timeseries 1,Timeseries 2,Timeseries 3\n2020-01-01T00:00:00+00:00,0.1,1.1,2.1\n2020-01-01T00:10:00+00:00,0.2,1.2,2.2\n2020-01-01T00:20:00+00:00,0.3,1.3,2.3"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "timeseries",
            "description": "List of timeseries names",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true,
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "Initial datetime",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "End datetime (excluded from the interval)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "data_state",
            "description": "Data state ID",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete timeseries data for a given campaign",
        "tags": [
          "TimeseriesDataForCampaign"
        ]
      }
    },
    "/timeseries_data/campaign/{campaign_id}/aggregate": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "timeseries",
            "description": "List of timeseries names",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true,
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "bucket_width_value",
            "description": "Only fixed bucket width units (second, minute, hour) accept a value different than 1.",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          },
          {
            "in": "query",
            "name": "bucket_width_unit",
            "schema": {
              "type": "string",
              "enum": [
                "second",
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "Initial datetime",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "End datetime (excluded from the interval)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "data_state",
            "description": "Data state ID",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "timezone",
            "description": "Timezone to use for response data",
            "schema": {
              "type": "string",
              "format": "iana-tz",
              "default": "UTC",
              "enum": [
                "Africa/Abidjan",
                "Africa/Accra",
                "Africa/Addis_Ababa",
                "Africa/Algiers",
                "Africa/Asmara",
                "Africa/Bamako",
                "Africa/Bangui",
                "Africa/Banjul",
                "Africa/Bissau",
                "Africa/Blantyre",
                "Africa/Brazzaville",
                "Africa/Bujumbura",
                "Africa/Cairo",
                "Africa/Casablanca",
                "Africa/Ceuta",
                "Africa/Conakry",
                "Africa/Dakar",
                "Africa/Dar_es_Salaam",
                "Africa/Djibouti",
                "Africa/Douala",
                "Africa/El_Aaiun",
                "Africa/Freetown",
                "Africa/Gaborone",
                "Africa/Harare",
                "Africa/Johannesburg",
                "Africa/Juba",
                "Africa/Kampala",
                "Africa/Khartoum",
                "Africa/Kigali",
                "Africa/Kinshasa",
                "Africa/Lagos",
                "Africa/Libreville",
                "Africa/Lome",
                "Africa/Luanda",
                "Africa/Lubumbashi",
                "Africa/Lusaka",
                "Africa/Malabo",
                "Africa/Maputo",
                "Africa/Maseru",
                "Africa/Mbabane",
                "Africa/Mogadishu",
                "Africa/Monrovia",
                "Africa/Nairobi",
                "Africa/Ndjamena",
                "Africa/Niamey",
                "Africa/Nouakchott",
                "Africa/Ouagadougou",
                "Africa/Porto-Novo",
                "Africa/Sao_Tome",
                "Africa/Tripoli",
                "Africa/Tunis",
                "Africa/Windhoek",
                "America/Adak",
                "America/Anchorage",
                "America/Anguilla",
                "America/Antigua",
                "America/Araguaina",
                "America/Argentina/Buenos_Aires",
                "America/Argentina/Catamarca",
                "America/Argentina/Cordoba",
                "America/Argentina/Jujuy",
                "America/Argentina/La_Rioja",
                "America/Argentina/Mendoza",
                "America/Argentina/Rio_Gallegos",
                "America/Argentina/Salta",
                "America/Argentina/San_Juan",
                "America/Argentina/San_Luis",
                "America/Argentina/Tucuman",
                "America/Argentina/Ushuaia",
                "America/Aruba",
                "America/Asuncion",
                "America/Atikokan",
                "America/Bahia",
                "America/Bahia_Banderas",
                "America/Barbados",
                "America/Belem",
                "America/Belize",
                "America/Blanc-Sablon",
                "America/Boa_Vista",
                "America/Bogota",
                "America/Boise",
                "America/Cambridge_Bay",
                "America/Campo_Grande",
                "America/Cancun",
                "America/Caracas",
                "America/Cayenne",
                "America/Cayman",
                "America/Chicago",
                "America/Chihuahua",
                "America/Costa_Rica",
                "America/Creston",
                "America/Cuiaba",
                "America/Curacao",
                "America/Danmarkshavn",
                "America/Dawson",
                "America/Dawson_Creek",
                "America/Denver",
                "America/Detroit",
                "America/Dominica",
                "America/Edmonton",
                "America/Eirunepe",
                "America/El_Salvador",
                "America/Fort_Nelson",
                "America/Fortaleza",
                "America/Glace_Bay",
                "America/Goose_Bay",
                "America/Grand_Turk",
                "America/Grenada",
                "America/Guadeloupe",
                "America/Guatemala",
                "America/Guayaquil",
                "America/Guyana",
                "America/Halifax",
                "America/Havana",
                "America/Hermosillo",
                "America/Indiana/Indianapolis",
                "America/Indiana/Knox",
                "America/Indiana/Marengo",
                "America/Indiana/Petersburg",
                "America/Indiana/Tell_City",
                "America/Indiana/Vevay",
                "America/Indiana/Vincennes",
                "America/Indiana/Winamac",
                "America/Inuvik",
                "America/Iqaluit",
                "America/Jamaica",
                "America/Juneau",
                "America/Kentucky/Louisville",
                "America/Kentucky/Monticello",
                "America/Kralendijk",
                "America/La_Paz",
                "America/Lima",
                "America/Los_Angeles",
                "America/Lower_Princes",
                "America/Maceio",
                "America/Managua",
                "America/Manaus",
                "America/Marigot",
                "America/Martinique",
                "America/Matamoros",
                "America/Mazatlan",
                "America/Menominee",
                "America/Merida",
                "America/Metlakatla",
                "America/Mexico_City",
                "America/Miquelon",
                "America/Moncton",
                "America/Monterrey",
                "America/Montevideo",
                "America/Montserrat",
                "America/Nassau",
                "America/New_York",
                "America/Nipigon",
                "America/Nome",
                "America/Noronha",
                "America/North_Dakota/Beulah",
                "America/North_Dakota/Center",
                "America/North_Dakota/New_Salem",
                "America/Nuuk",
                "America/Ojinaga",
                "America/Panama",
                "America/Pangnirtung",
                "America/Paramaribo",
                "America/Phoenix",
                "America/Port-au-Prince",
                "America/Port_of_Spain",
                "America/Porto_Velho",
                "America/Puerto_Rico",
                "America/Punta_Arenas",
                "America/Rainy_River",
                "America/Rankin_Inlet",
                "America/Recife",
                "America/Regina",
                "America/Resolute",
                "America/Rio_Branco",
                "America/Santarem",
                "America/Santiago",
                "America/Santo_Domingo",
                "America/Sao_Paulo",
                "America/Scoresbysund",
                "America/Sitka",
                "America/St_Barthelemy",
                "America/St_Johns",
                "America/St_Kitts",
                "America/St_Lucia",
                "America/St_Thomas",
                "America/St_Vincent",
                "America/Swift_Current",
                "America/Tegucigalpa",
                "America/Thule",
                "America/Thunder_Bay",
                "America/Tijuana",
                "America/Toronto",
                "America/Tortola",
                "America/Vancouver",
                "America/Whitehorse",
                "America/Winnipeg",
                "America/Yakutat",
                "America/Yellowknife",
                "Antarctica/Casey",
                "Antarctica/Davis",
                "Antarctica/DumontDUrville",
                "Antarctica/Macquarie",
                "Antarctica/Mawson",
                "Antarctica/McMurdo",
                "Antarctica/Palmer",
                "Antarctica/Rothera",
                "Antarctica/Syowa",
                "Antarctica/Troll",
                "Antarctica/Vostok",
                "Arctic/Longyearbyen",
                "Asia/Aden",
                "Asia/Almaty",
                "Asia/Amman",
                "Asia/Anadyr",
                "Asia/Aqtau",
                "Asia/Aqtobe",
                "Asia/Ashgabat",
                "Asia/Atyrau",
                "Asia/Baghdad",
                "Asia/Bahrain",
                "Asia/Baku",
                "Asia/Bangkok",
                "Asia/Barnaul",
                "Asia/Beirut",
                "Asia/Bishkek",
                "Asia/Brunei",
                "Asia/Chita",
                "Asia/Choibalsan",
                "Asia/Colombo",
                "Asia/Damascus",
                "Asia/Dhaka",
                "Asia/Dili",
                "Asia/Dubai",
                "Asia/Dushanbe",
                "Asia/Famagusta",
                "Asia/Gaza",
                "Asia/Hebron",
                "Asia/Ho_Chi_Minh",
                "Asia/Hong_Kong",
                "Asia/Hovd",
                "Asia/Irkutsk",
                "Asia/Jakarta",
                "Asia/Jayapura",
                "Asia/Jerusalem",
                "Asia/Kabul",
                "Asia/Kamchatka",
                "Asia/Karachi",
                "Asia/Kathmandu",
                "Asia/Khandyga",
                "Asia/Kolkata",
                "Asia/Krasnoyarsk",
                "Asia/Kuala_Lumpur",
                "Asia/Kuching",
                "Asia/Kuwait",
                "Asia/Macau",
                "Asia/Magadan",
                "Asia/Makassar",
                "Asia/Manila",
                "Asia/Muscat",
                "Asia/Novokuznetsk",
                "Asia/Novosibirsk",
                "Asia/Omsk",
                "Asia/Oral",
                "Asia/Phnom_Penh",
                "Asia/Pontianak",
                "Asia/Pyongyang",
                "Asia/Qatar",
                "Asia/Qostanay",
                "Asia/Qyzylorda",
                "Asia/Riyadh",
                "Asia/Sakhalin",
                "Asia/Samarkand",
                "Asia/Seoul",
                "Asia/Shanghai",
                "Asia/Singapore",
                "Asia/Srednekolymsk",
                "Asia/Taipei",
                "Asia/Tashkent",
                "Asia/Tbilisi",
                "Asia/Tehran",
                "Asia/Thimphu",
                "Asia/Tokyo",
                "Asia/Tomsk",
                "Asia/Ulaanbaatar",
                "Asia/Urumqi",
                "Asia/Ust-Nera",
                "Asia/Vientiane",
                "Asia/Vladivostok",
                "Asia/Yakutsk",
                "Asia/Yangon",
                "Asia/Yekaterinburg",
                "Asia/Yerevan",
                "Atlantic/Azores",
                "Atlantic/Bermuda",
                "Atlantic/Canary",
                "Atlantic/Cape_Verde",
                "Atlantic/Faroe",
                "Atlantic/Madeira",
                "Atlantic/Reykjavik",
                "Atlantic/South_Georgia",
                "Atlantic/St_Helena",
                "Atlantic/Stanley",
                "Australia/Adelaide",
                "Australia/Brisbane",
                "Australia/Broken_Hill",
                "Australia/Darwin",
                "Australia/Eucla",
                "Australia/Hobart",
                "Australia/Lindeman",
                "Australia/Lord_Howe",
                "Australia/Melbourne",
                "Australia/Perth",
                "Australia/Sydney",
                "CET",
                "CST6CDT",
                "EET",
                "EST",
                "EST5EDT",
                "Etc/GMT",
                "Etc/GMT+0",
                "Etc/GMT+1",
                "Etc/GMT+10",
                "Etc/GMT+11",
                "Etc/GMT+12",
                "Etc/GMT+2",
                "Etc/GMT+3",
                "Etc/GMT+4",
                "Etc/GMT+5",
                "Etc/GMT+6",
                "Etc/GMT+7",
                "Etc/GMT+8",
                "Etc/GMT+9",
                "Etc/GMT-0",
                "Etc/GMT-1",
                "Etc/GMT-10",
                "Etc/GMT-11",
                "Etc/GMT-12",
                "Etc/GMT-13",
                "Etc/GMT-14",
                "Etc/GMT-2",
                "Etc/GMT-3",
                "Etc/GMT-4",
                "Etc/GMT-5",
                "Etc/GMT-6",
                "Etc/GMT-7",
                "Etc/GMT-8",
                "Etc/GMT-9",
                "Etc/GMT0",
                "Etc/Greenwich",
                "Etc/UTC",
                "Etc/Universal",
                "Etc/Zulu",
                "Europe/Amsterdam",
                "Europe/Andorra",
                "Europe/Astrakhan",
                "Europe/Athens",
                "Europe/Belgrade",
                "Europe/Berlin",
                "Europe/Bratislava",
                "Europe/Brussels",
                "Europe/Bucharest",
                "Europe/Budapest",
                "Europe/Busingen",
                "Europe/Chisinau",
                "Europe/Copenhagen",
                "Europe/Dublin",
                "Europe/Gibraltar",
                "Europe/Guernsey",
                "Europe/Helsinki",
                "Europe/Isle_of_Man",
                "Europe/Istanbul",
                "Europe/Jersey",
                "Europe/Kaliningrad",
                "Europe/Kirov",
                "Europe/Kyiv",
                "Europe/Lisbon",
                "Europe/Ljubljana",
                "Europe/London",
                "Europe/Luxembourg",
                "Europe/Madrid",
                "Europe/Malta",
                "Europe/Mariehamn",
                "Europe/Minsk",
                "Europe/Monaco",
                "Europe/Moscow",
                "Europe/Nicosia",
                "Europe/Oslo",
                "Europe/Paris",
                "Europe/Podgorica",
                "Europe/Prague",
                "Europe/Riga",
                "Europe/Rome",
                "Europe/Samara",
                "Europe/San_Marino",
                "Europe/Sarajevo",
                "Europe/Saratov",
                "Europe/Simferopol",
                "Europe/Skopje",
                "Europe/Sofia",
                "Europe/Stockholm",
                "Europe/Tallinn",
                "Europe/Tirane",
                "Europe/Ulyanovsk",
                "Europe/Uzhgorod",
                "Europe/Vaduz",
                "Europe/Vatican",
                "Europe/Vienna",
                "Europe/Vilnius",
                "Europe/Volgograd",
                "Europe/Warsaw",
                "Europe/Zagreb",
                "Europe/Zaporozhye",
                "Europe/Zurich",
                "GMT",
                "HST",
                "Indian/Antananarivo",
                "Indian/Chagos",
                "Indian/Christmas",
                "Indian/Cocos",
                "Indian/Comoro",
                "Indian/Kerguelen",
                "Indian/Mahe",
                "Indian/Maldives",
                "Indian/Mauritius",
                "Indian/Mayotte",
                "Indian/Reunion",
                "MET",
                "MST",
                "MST7MDT",
                "PST8PDT",
                "Pacific/Apia",
                "Pacific/Auckland",
                "Pacific/Bougainville",
                "Pacific/Chatham",
                "Pacific/Chuuk",
                "Pacific/Easter",
                "Pacific/Efate",
                "Pacific/Fakaofo",
                "Pacific/Fiji",
                "Pacific/Funafuti",
                "Pacific/Galapagos",
                "Pacific/Gambier",
                "Pacific/Guadalcanal",
                "Pacific/Guam",
                "Pacific/Honolulu",
                "Pacific/Kanton",
                "Pacific/Kiritimati",
                "Pacific/Kosrae",
                "Pacific/Kwajalein",
                "Pacific/Majuro",
                "Pacific/Marquesas",
                "Pacific/Midway",
                "Pacific/Nauru",
                "Pacific/Niue",
                "Pacific/Norfolk",
                "Pacific/Noumea",
                "Pacific/Pago_Pago",
                "Pacific/Palau",
                "Pacific/Pitcairn",
                "Pacific/Pohnpei",
                "Pacific/Port_Moresby",
                "Pacific/Rarotonga",
                "Pacific/Saipan",
                "Pacific/Tahiti",
                "Pacific/Tarawa",
                "Pacific/Tongatapu",
                "Pacific/Wake",
                "Pacific/Wallis",
                "UTC",
                "WET"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "convert_to",
            "description": "Optional list of units to convert to. If passed, must be of same length as timeseries list. Empty string means no conversion for a timeseries.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false,
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "aggregation",
            "schema": {
              "type": "string",
              "default": "avg",
              "enum": [
                "avg",
                "sum",
                "min",
                "max",
                "count"
              ]
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "example": "{\n    \"Timeseries 1\": {\n        \"2020-01-01T00:00:00+00:00\": 0.1,\n        \"2020-01-01T10:00:00+00:00\": 0.2,\n        \"2020-01-01T20:00:00+00:00\": 0.3,\n    },\n    \"Timeseries 2\": {\n        \"2020-01-01T00:00:00+00:00\": 1.1,\n        \"2020-01-01T10:00:00+00:00\": 1.2,\n        \"2020-01-01T20:00:00+00:00\": 1.3,\n    },\n    \"Timeseries 3\": {\n        \"2020-01-01T00:00:00+00:00\": 2.1,\n        \"2020-01-01T10:00:00+00:00\": 2.2,\n        \"2020-01-01T20:00:00+00:00\": 2.3,\n    },\n}"
              },
              "text/csv": {
                "example": "Datetime,Timeseries 1,Timeseries 2,Timeseries 3\n2020-01-01T00:00:00+00:00,0.1,1.1,2.1\n2020-01-01T00:10:00+00:00,0.2,1.2,2.2\n2020-01-01T00:20:00+00:00,0.3,1.3,2.3"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get aggregated timeseries data for a given campaign",
        "description": "Returns data in either JSON or CSV format.\n\nJSON: each key is a timestamp name as string. For each timeseries, values\nare passed a {timestamp: value} mappings.\n\nCSV: the first column is the timestamp as timezone aware datetime and each\nother column is a timeseries data. Column headers are timeseries names.",
        "tags": [
          "TimeseriesDataForCampaign"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "campaign_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/event_categories/": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCategory"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List event categories",
        "tags": [
          "EventCategory"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCategory"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCategory"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new event category",
        "tags": [
          "EventCategory"
        ]
      }
    },
    "/event_categories/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCategory"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get an event category by its by ID",
        "tags": [
          "EventCategory"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCategory"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCategory"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing event category",
        "tags": [
          "EventCategory"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete an event category",
        "tags": [
          "EventCategory"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "string",
            "minLength": 1
          }
        }
      ]
    },
    "/event_categories_by_users/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "category_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCategoryByUser"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List event category x user associations",
        "tags": [
          "EventCategoryByUser"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCategoryByUser"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCategoryByUser"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new event category x user association",
        "tags": [
          "EventCategoryByUser"
        ]
      }
    },
    "/event_categories_by_users/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCategoryByUser"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get event category x user association by ID",
        "tags": [
          "EventCategoryByUser"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCategoryByUser"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCategoryByUserPut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing  event category x user association",
        "tags": [
          "EventCategoryByUser"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete an event category x user association",
        "tags": [
          "EventCategoryByUser"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/events/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "timestamp",
                  "+timestamp",
                  "-timestamp",
                  "level",
                  "+level",
                  "-level"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_scope_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "source",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "in_source",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "category_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "level",
            "schema": {
              "type": "string",
              "enum": [
                "DEBUG",
                "INFO",
                "WARNING",
                "ERROR",
                "CRITICAL"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "level_min",
            "schema": {
              "type": "string",
              "enum": [
                "DEBUG",
                "INFO",
                "WARNING",
                "ERROR",
                "CRITICAL"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timestamp_min",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timestamp_max",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "recurse_site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "building_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "recurse_building_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "storey_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "recurse_storey_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "space_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "zone_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              },
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List events",
        "tags": [
          "Event"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new event",
        "tags": [
          "Event"
        ]
      }
    },
    "/events/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get event by ID",
        "tags": [
          "Event"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing event",
        "tags": [
          "Event"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete an event",
        "tags": [
          "Event"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/timeseries_by_events/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeseriesByEvent"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List timeseries x event associations",
        "tags": [
          "TimeseriesByEvent"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesByEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeseriesByEvent"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new timeseries x event association",
        "tags": [
          "TimeseriesByEvent"
        ]
      }
    },
    "/timeseries_by_events/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesByEvent"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries x event association by ID",
        "tags": [
          "TimeseriesByEvent"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a timeseries x event association",
        "tags": [
          "TimeseriesByEvent"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/events_by_sites/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "event_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventBySite"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List event x site associations",
        "tags": [
          "EventBySite"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventBySite"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventBySite"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new event x site association",
        "tags": [
          "EventBySite"
        ]
      }
    },
    "/events_by_sites/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventBySite"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get event x site association by ID",
        "tags": [
          "EventBySite"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete an event x site association",
        "tags": [
          "EventBySite"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/events_by_buildings/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "building_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "event_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventByBuilding"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List event x building associations",
        "tags": [
          "EventByBuilding"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventByBuilding"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventByBuilding"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new event x building association",
        "tags": [
          "EventByBuilding"
        ]
      }
    },
    "/events_by_buildings/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventByBuilding"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get event x building association by ID",
        "tags": [
          "EventByBuilding"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete an event x building association",
        "tags": [
          "EventByBuilding"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/events_by_storeys/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "storey_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "event_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventByStorey"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List event x storey associations",
        "tags": [
          "EventByStorey"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventByStorey"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventByStorey"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new event x storey association",
        "tags": [
          "EventByStorey"
        ]
      }
    },
    "/events_by_storeys/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventByStorey"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get event x storey association by ID",
        "tags": [
          "EventByStorey"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete an event x storey association",
        "tags": [
          "EventByStorey"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/events_by_spaces/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "space_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "event_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventBySpace"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List event x space associations",
        "tags": [
          "EventBySpace"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventBySpace"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventBySpace"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new event x space association",
        "tags": [
          "EventBySpace"
        ]
      }
    },
    "/events_by_spaces/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventBySpace"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get event x space association by ID",
        "tags": [
          "EventBySpace"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete an event x space association",
        "tags": [
          "EventBySpace"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/events_by_zones/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "zone_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "event_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventByZone"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List event x zone associations",
        "tags": [
          "EventByZone"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventByZone"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventByZone"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new event x zone association",
        "tags": [
          "EventByZone"
        ]
      }
    },
    "/events_by_zones/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventByZone"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get event x zone association by ID",
        "tags": [
          "EventByZone"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete an event x zone association",
        "tags": [
          "EventByZone"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/notifications/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "timestamp",
                  "+timestamp",
                  "-timestamp"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "event_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timestamp_min",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timestamp_max",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "read",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              },
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List notifications",
        "tags": [
          "Notification"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new notification",
        "tags": [
          "Notification"
        ]
      }
    },
    "/notifications/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get a notification by its by ID",
        "tags": [
          "Notification"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationPut"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing notification",
        "tags": [
          "Notification"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a notification",
        "tags": [
          "Notification"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "string",
            "minLength": 1
          }
        }
      ]
    },
    "/notifications/count_by_campaign": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "read",
            "description": "Count only read/unread. Leave empty to count all.",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationCountByCampaign"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get notification count by campaign",
        "tags": [
          "Notification"
        ]
      }
    },
    "/notifications/mark_all_as_read": {
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Mark all notifications as read",
        "tags": [
          "Notification"
        ]
      }
    },
    "/sites/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "+name",
                  "-name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ifc_id",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Site"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List sites",
        "tags": [
          "Site"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Site"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new site",
        "tags": [
          "Site"
        ]
      }
    },
    "/sites/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get site by ID",
        "tags": [
          "Site"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SitePut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing site",
        "tags": [
          "Site"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a site",
        "tags": [
          "Site"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/sites/{item_id}/download_weather_data": {
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "start_time",
            "description": "Initial datetime",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "End datetime (excluded from the interval)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Download weather data for a site",
        "description": "Download weather data from external web service and store it in DB.\nRequires weather timeseries to be defined.",
        "tags": [
          "Site"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/sites/{item_id}/degree_days": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "start_date",
            "description": "Initial date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "end_date",
            "description": "End date (excluded from the interval)",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "period",
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "month",
                "year"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string",
              "default": "heating",
              "enum": [
                "heating",
                "cooling"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "base",
            "schema": {
              "type": "number",
              "default": 18.0
            },
            "required": false
          },
          {
            "in": "query",
            "name": "unit",
            "schema": {
              "type": "string",
              "default": "\u00b0C"
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DegreeDays"
                },
                "example": "{\n    \"degree_days\":\n    {\n        \"2020-01-01T00:00:00+00:00\": 690.0,\n        \"2020-02-01T00:00:00+00:00\": 420.0,\n        \"2020-03-01T00:00:00+00:00\": 120.0,\n    },\n}"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get degree days for a site",
        "description": "Computes degree days on-the-fly.\nRequires air temperature timeseries to be defined.",
        "tags": [
          "Site"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/buildings/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "+name",
                  "-name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ifc_id",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Building"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List buildings",
        "tags": [
          "Building"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Building"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Building"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new building",
        "tags": [
          "Building"
        ]
      }
    },
    "/buildings/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Building"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get building by ID",
        "tags": [
          "Building"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Building"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildingPut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing building",
        "tags": [
          "Building"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a building",
        "tags": [
          "Building"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/storeys/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "+name",
                  "-name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "building_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ifc_id",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Storey"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List storeys",
        "tags": [
          "Storey"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Storey"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Storey"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new storey",
        "tags": [
          "Storey"
        ]
      }
    },
    "/storeys/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Storey"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get storey by ID",
        "tags": [
          "Storey"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Storey"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreyPut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing storey",
        "tags": [
          "Storey"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a storey",
        "tags": [
          "Storey"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/spaces/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "+name",
                  "-name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "building_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "storey_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ifc_id",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Space"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List spaces",
        "tags": [
          "Space"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Space"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new space",
        "tags": [
          "Space"
        ]
      }
    },
    "/spaces/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get space by ID",
        "tags": [
          "Space"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Space"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpacePut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing space",
        "tags": [
          "Space"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a space",
        "tags": [
          "Space"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/zones/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "+name",
                  "-name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "ifc_id",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Zone"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List zones",
        "tags": [
          "Zone"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zone"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new zone",
        "tags": [
          "Zone"
        ]
      }
    },
    "/zones/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get zone by ID",
        "tags": [
          "Zone"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZonePut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing zone",
        "tags": [
          "Zone"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a zone",
        "tags": [
          "Zone"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/structural_element_properties/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "+name",
                  "-name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "value_type",
            "schema": {
              "type": "string",
              "enum": [
                "integer",
                "float",
                "boolean",
                "string"
              ]
            },
            "required": false
          },
          {
            "in": "query",
            "name": "unit_symbol",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StructuralElementProperty"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List structural element properties",
        "tags": [
          "StructuralElementProperty"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructuralElementProperty"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StructuralElementProperty"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new structural element property",
        "tags": [
          "StructuralElementProperty"
        ]
      }
    },
    "/structural_element_properties/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructuralElementProperty"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get structural element property by ID",
        "tags": [
          "StructuralElementProperty"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StructuralElementProperty"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StructuralElementPropertyPut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing structural element property",
        "tags": [
          "StructuralElementProperty"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a structural element property",
        "tags": [
          "StructuralElementProperty"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/site_properties/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "structural_element_property_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SiteProperty"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List site properties",
        "tags": [
          "SiteProperty"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteProperty"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteProperty"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new site property",
        "tags": [
          "SiteProperty"
        ]
      }
    },
    "/site_properties/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteProperty"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get site property by ID",
        "tags": [
          "SiteProperty"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a site property",
        "tags": [
          "SiteProperty"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/building_properties/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "structural_element_property_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuildingProperty"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List building properties",
        "tags": [
          "BuildingProperty"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildingProperty"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildingProperty"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new building property",
        "tags": [
          "BuildingProperty"
        ]
      }
    },
    "/building_properties/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildingProperty"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get building property by ID",
        "tags": [
          "BuildingProperty"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a building property",
        "tags": [
          "BuildingProperty"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/storey_properties/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "structural_element_property_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreyProperty"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List storey properties",
        "tags": [
          "StoreyProperty"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreyProperty"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreyProperty"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new storey property",
        "tags": [
          "StoreyProperty"
        ]
      }
    },
    "/storey_properties/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreyProperty"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get storey property by ID",
        "tags": [
          "StoreyProperty"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a storey property",
        "tags": [
          "StoreyProperty"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/space_properties/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "structural_element_property_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpaceProperty"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List space properties",
        "tags": [
          "SpaceProperty"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceProperty"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpaceProperty"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new space property",
        "tags": [
          "SpaceProperty"
        ]
      }
    },
    "/space_properties/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpaceProperty"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get space property by ID",
        "tags": [
          "SpaceProperty"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a space property",
        "tags": [
          "SpaceProperty"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/zone_properties/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "structural_element_property_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ZoneProperty"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List zone properties",
        "tags": [
          "ZoneProperty"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneProperty"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZoneProperty"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new zone property",
        "tags": [
          "ZoneProperty"
        ]
      }
    },
    "/zone_properties/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneProperty"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get zone property by ID",
        "tags": [
          "ZoneProperty"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a zone property",
        "tags": [
          "ZoneProperty"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/site_property_data/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "site_property_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SitePropertyData"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List site property data",
        "tags": [
          "SitePropertyData"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitePropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SitePropertyData"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new site property data",
        "tags": [
          "SitePropertyData"
        ]
      }
    },
    "/site_property_data/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitePropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get site property data by ID",
        "tags": [
          "SitePropertyData"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitePropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SitePropertyData"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing site property data",
        "tags": [
          "SitePropertyData"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a site property data",
        "tags": [
          "SitePropertyData"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/building_property_data/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "building_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "building_property_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuildingPropertyData"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List building property data",
        "tags": [
          "BuildingPropertyData"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildingPropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildingPropertyData"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new building property data",
        "tags": [
          "BuildingPropertyData"
        ]
      }
    },
    "/building_property_data/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildingPropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get building property data by ID",
        "tags": [
          "BuildingPropertyData"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildingPropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildingPropertyData"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing building property data",
        "tags": [
          "BuildingPropertyData"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a building property data",
        "tags": [
          "BuildingPropertyData"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/storey_property_data/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "storey_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "storey_property_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoreyPropertyData"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List storey property data",
        "tags": [
          "StoreyPropertyData"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreyPropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreyPropertyData"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new storey property data",
        "tags": [
          "StoreyPropertyData"
        ]
      }
    },
    "/storey_property_data/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreyPropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get storey property data by ID",
        "tags": [
          "StoreyPropertyData"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoreyPropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreyPropertyData"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing storey property data",
        "tags": [
          "StoreyPropertyData"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a storey property data",
        "tags": [
          "StoreyPropertyData"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/space_property_data/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "space_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "space_property_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpacePropertyData"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List space property data",
        "tags": [
          "SpacePropertyData"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpacePropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpacePropertyData"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new space property data",
        "tags": [
          "SpacePropertyData"
        ]
      }
    },
    "/space_property_data/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpacePropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get space property data by ID",
        "tags": [
          "SpacePropertyData"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpacePropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpacePropertyData"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing space property data",
        "tags": [
          "SpacePropertyData"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a space property data",
        "tags": [
          "SpacePropertyData"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/zone_property_data/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "zone_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "zone_property_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ZonePropertyData"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List zone property data",
        "tags": [
          "ZonePropertyData"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZonePropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZonePropertyData"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new zone property data",
        "tags": [
          "ZonePropertyData"
        ]
      }
    },
    "/zone_property_data/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZonePropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get zone property data by ID",
        "tags": [
          "ZonePropertyData"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZonePropertyData"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZonePropertyData"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing zone property data",
        "tags": [
          "ZonePropertyData"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a zone property data",
        "tags": [
          "ZonePropertyData"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/timeseries_by_sites/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeseriesBySite"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List timeseries x site associations",
        "tags": [
          "TimeseriesBySite"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesBySite"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeseriesBySite"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new timeseries x site association",
        "tags": [
          "TimeseriesBySite"
        ]
      }
    },
    "/timeseries_by_sites/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesBySite"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries x site association by ID",
        "tags": [
          "TimeseriesBySite"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a timeseries x site association",
        "tags": [
          "TimeseriesBySite"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/timeseries_by_buildings/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "building_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeseriesByBuilding"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List timeseries x building associations",
        "tags": [
          "TimeseriesByBuilding"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesByBuilding"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeseriesByBuilding"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new timeseries x building association",
        "tags": [
          "TimeseriesByBuilding"
        ]
      }
    },
    "/timeseries_by_buildings/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesByBuilding"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries x building association by ID",
        "tags": [
          "TimeseriesByBuilding"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a timeseries x building association",
        "tags": [
          "TimeseriesByBuilding"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/timeseries_by_storeys/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "storey_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeseriesByStorey"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List timeseries x storey associations",
        "tags": [
          "TimeseriesByStorey"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesByStorey"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeseriesByStorey"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new timeseries x storey association",
        "tags": [
          "TimeseriesByStorey"
        ]
      }
    },
    "/timeseries_by_storeys/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesByStorey"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries x storey association by ID",
        "tags": [
          "TimeseriesByStorey"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a timeseries x storey association",
        "tags": [
          "TimeseriesByStorey"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/timeseries_by_spaces/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "space_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeseriesBySpace"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List timeseries x space associations",
        "tags": [
          "TimeseriesBySpace"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesBySpace"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeseriesBySpace"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new timeseries x space association",
        "tags": [
          "TimeseriesBySpace"
        ]
      }
    },
    "/timeseries_by_spaces/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesBySpace"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries x space association by ID",
        "tags": [
          "TimeseriesBySpace"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a timeseries x space association",
        "tags": [
          "TimeseriesBySpace"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/timeseries_by_zones/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "zone_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "required": false
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeseriesByZone"
                  }
                }
              }
            },
            "headers": {
              "X-Pagination": {
                "$ref": "#/components/headers/PAGINATION"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List timeseries x zone associations",
        "tags": [
          "TimeseriesByZone"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesByZone"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeseriesByZone"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new timeseries x zone association",
        "tags": [
          "TimeseriesByZone"
        ]
      }
    },
    "/timeseries_by_zones/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeseriesByZone"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries x zone association by ID",
        "tags": [
          "TimeseriesByZone"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a timeseries x zone association",
        "tags": [
          "TimeseriesByZone"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/energies/": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Energy"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List energies",
        "tags": [
          "Energy"
        ]
      }
    },
    "/energy_end_uses/": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnergyEndUse"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List energy end uses",
        "tags": [
          "EnergyEndUse"
        ]
      }
    },
    "/energy_production_technologies/": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnergyProductionTechnology"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List energy production technologies",
        "tags": [
          "EnergyProductionTechnology"
        ]
      }
    },
    "/energy_consumption_timeseries_by_sites/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "energy_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "end_use_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnergyConsumptionTimeseriesBySite"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List energy consumption timeseries x site associations",
        "tags": [
          "EnergyConsumptionTimeseriesBySite"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnergyConsumptionTimeseriesBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnergyConsumptionTimeseriesBySite"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new energy consumption timeseries x site association",
        "tags": [
          "EnergyConsumptionTimeseriesBySite"
        ]
      }
    },
    "/energy_consumption_timeseries_by_sites/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnergyConsumptionTimeseriesBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get energy consumption timeseries x site association by ID",
        "tags": [
          "EnergyConsumptionTimeseriesBySite"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnergyConsumptionTimeseriesBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnergyConsumptionTimeseriesBySite"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing energy consumption timeseries x site association",
        "tags": [
          "EnergyConsumptionTimeseriesBySite"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a energy consumption timeseries x site association",
        "tags": [
          "EnergyConsumptionTimeseriesBySite"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/energy_consumption_timeseries_by_buildings/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "building_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "energy_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "end_use_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnergyConsumptionTimeseriesByBuilding"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List energy consumption timeseries x building associations",
        "tags": [
          "EnergyConsumptionTimeseriesByBuilding"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnergyConsumptionTimeseriesByBuilding"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnergyConsumptionTimeseriesByBuilding"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new energy consumption timeseries x building association",
        "tags": [
          "EnergyConsumptionTimeseriesByBuilding"
        ]
      }
    },
    "/energy_consumption_timeseries_by_buildings/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnergyConsumptionTimeseriesByBuilding"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get energy consumption timeseries x building association by ID",
        "tags": [
          "EnergyConsumptionTimeseriesByBuilding"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnergyConsumptionTimeseriesByBuilding"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnergyConsumptionTimeseriesByBuilding"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing energy consumption timeseries x building association",
        "tags": [
          "EnergyConsumptionTimeseriesByBuilding"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a energy consumption timeseries x building association",
        "tags": [
          "EnergyConsumptionTimeseriesByBuilding"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/energy_production_timeseries_by_sites/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "energy_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "prod_tech_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnergyProductionTimeseriesBySite"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List energy production timeseries x site associations",
        "tags": [
          "EnergyProductionTimeseriesBySite"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnergyProductionTimeseriesBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnergyProductionTimeseriesBySite"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new energy production timeseries x site association",
        "tags": [
          "EnergyProductionTimeseriesBySite"
        ]
      }
    },
    "/energy_production_timeseries_by_sites/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnergyProductionTimeseriesBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get energy production timeseries x site association by ID",
        "tags": [
          "EnergyProductionTimeseriesBySite"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnergyProductionTimeseriesBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnergyProductionTimeseriesBySite"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing energy production timeseries x site association",
        "tags": [
          "EnergyProductionTimeseriesBySite"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a energy production timeseries x site association",
        "tags": [
          "EnergyProductionTimeseriesBySite"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/energy_production_timeseries_by_buildings/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "building_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "energy_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "prod_tech_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnergyProductionTimeseriesByBuilding"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List energy production timeseries x building associations",
        "tags": [
          "EnergyProductionTimeseriesByBuilding"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnergyProductionTimeseriesByBuilding"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnergyProductionTimeseriesByBuilding"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new energy production timeseries x building association",
        "tags": [
          "EnergyProductionTimeseriesByBuilding"
        ]
      }
    },
    "/energy_production_timeseries_by_buildings/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnergyProductionTimeseriesByBuilding"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get energy production timeseries x building association by ID",
        "tags": [
          "EnergyProductionTimeseriesByBuilding"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnergyProductionTimeseriesByBuilding"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnergyProductionTimeseriesByBuilding"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing energy production timeseries x building association",
        "tags": [
          "EnergyProductionTimeseriesByBuilding"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a energy production timeseries x building association",
        "tags": [
          "EnergyProductionTimeseriesByBuilding"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/weather_timeseries_by_sites/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "parameter",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "forecast",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherTimeseriesBySite"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List weather timeseries x site associations",
        "tags": [
          "WeatherTimeseriesBySite"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeatherTimeseriesBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WeatherTimeseriesBySite"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new weather timeseries x site association",
        "tags": [
          "WeatherTimeseriesBySite"
        ]
      }
    },
    "/weather_timeseries_by_sites/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeatherTimeseriesBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get weather timeseries x site association by ID",
        "tags": [
          "WeatherTimeseriesBySite"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeatherTimeseriesBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WeatherTimeseriesBySite"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update an existing weather timeseries x site association",
        "tags": [
          "WeatherTimeseriesBySite"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a weather timeseries x site association",
        "tags": [
          "WeatherTimeseriesBySite"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/io/sites": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "201": {
            "description": "Created"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SitesCSVUploadFile"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Import site description tree",
        "tags": [
          "Input/Output"
        ]
      }
    },
    "/io/timeseries": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "201": {
            "description": "Created"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TimeseriesCSVUploadFile"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Import timeseries description tree",
        "tags": [
          "Input/Output"
        ]
      }
    },
    "/analysis/completeness": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "bucket_width_value",
            "description": "Only fixed bucket width units (second, minute, hour) accept a value different than 1.",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          },
          {
            "in": "query",
            "name": "bucket_width_unit",
            "schema": {
              "type": "string",
              "enum": [
                "second",
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "Initial datetime",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "End datetime (excluded from the interval)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "timeseries",
            "description": "List of timeseries ID",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "required": true,
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "data_state",
            "description": "Data state ID",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "timezone",
            "description": "Timezone to use for the aggreagation",
            "schema": {
              "type": "string",
              "format": "iana-tz",
              "default": "UTC",
              "enum": [
                "Africa/Abidjan",
                "Africa/Accra",
                "Africa/Addis_Ababa",
                "Africa/Algiers",
                "Africa/Asmara",
                "Africa/Bamako",
                "Africa/Bangui",
                "Africa/Banjul",
                "Africa/Bissau",
                "Africa/Blantyre",
                "Africa/Brazzaville",
                "Africa/Bujumbura",
                "Africa/Cairo",
                "Africa/Casablanca",
                "Africa/Ceuta",
                "Africa/Conakry",
                "Africa/Dakar",
                "Africa/Dar_es_Salaam",
                "Africa/Djibouti",
                "Africa/Douala",
                "Africa/El_Aaiun",
                "Africa/Freetown",
                "Africa/Gaborone",
                "Africa/Harare",
                "Africa/Johannesburg",
                "Africa/Juba",
                "Africa/Kampala",
                "Africa/Khartoum",
                "Africa/Kigali",
                "Africa/Kinshasa",
                "Africa/Lagos",
                "Africa/Libreville",
                "Africa/Lome",
                "Africa/Luanda",
                "Africa/Lubumbashi",
                "Africa/Lusaka",
                "Africa/Malabo",
                "Africa/Maputo",
                "Africa/Maseru",
                "Africa/Mbabane",
                "Africa/Mogadishu",
                "Africa/Monrovia",
                "Africa/Nairobi",
                "Africa/Ndjamena",
                "Africa/Niamey",
                "Africa/Nouakchott",
                "Africa/Ouagadougou",
                "Africa/Porto-Novo",
                "Africa/Sao_Tome",
                "Africa/Tripoli",
                "Africa/Tunis",
                "Africa/Windhoek",
                "America/Adak",
                "America/Anchorage",
                "America/Anguilla",
                "America/Antigua",
                "America/Araguaina",
                "America/Argentina/Buenos_Aires",
                "America/Argentina/Catamarca",
                "America/Argentina/Cordoba",
                "America/Argentina/Jujuy",
                "America/Argentina/La_Rioja",
                "America/Argentina/Mendoza",
                "America/Argentina/Rio_Gallegos",
                "America/Argentina/Salta",
                "America/Argentina/San_Juan",
                "America/Argentina/San_Luis",
                "America/Argentina/Tucuman",
                "America/Argentina/Ushuaia",
                "America/Aruba",
                "America/Asuncion",
                "America/Atikokan",
                "America/Bahia",
                "America/Bahia_Banderas",
                "America/Barbados",
                "America/Belem",
                "America/Belize",
                "America/Blanc-Sablon",
                "America/Boa_Vista",
                "America/Bogota",
                "America/Boise",
                "America/Cambridge_Bay",
                "America/Campo_Grande",
                "America/Cancun",
                "America/Caracas",
                "America/Cayenne",
                "America/Cayman",
                "America/Chicago",
                "America/Chihuahua",
                "America/Costa_Rica",
                "America/Creston",
                "America/Cuiaba",
                "America/Curacao",
                "America/Danmarkshavn",
                "America/Dawson",
                "America/Dawson_Creek",
                "America/Denver",
                "America/Detroit",
                "America/Dominica",
                "America/Edmonton",
                "America/Eirunepe",
                "America/El_Salvador",
                "America/Fort_Nelson",
                "America/Fortaleza",
                "America/Glace_Bay",
                "America/Goose_Bay",
                "America/Grand_Turk",
                "America/Grenada",
                "America/Guadeloupe",
                "America/Guatemala",
                "America/Guayaquil",
                "America/Guyana",
                "America/Halifax",
                "America/Havana",
                "America/Hermosillo",
                "America/Indiana/Indianapolis",
                "America/Indiana/Knox",
                "America/Indiana/Marengo",
                "America/Indiana/Petersburg",
                "America/Indiana/Tell_City",
                "America/Indiana/Vevay",
                "America/Indiana/Vincennes",
                "America/Indiana/Winamac",
                "America/Inuvik",
                "America/Iqaluit",
                "America/Jamaica",
                "America/Juneau",
                "America/Kentucky/Louisville",
                "America/Kentucky/Monticello",
                "America/Kralendijk",
                "America/La_Paz",
                "America/Lima",
                "America/Los_Angeles",
                "America/Lower_Princes",
                "America/Maceio",
                "America/Managua",
                "America/Manaus",
                "America/Marigot",
                "America/Martinique",
                "America/Matamoros",
                "America/Mazatlan",
                "America/Menominee",
                "America/Merida",
                "America/Metlakatla",
                "America/Mexico_City",
                "America/Miquelon",
                "America/Moncton",
                "America/Monterrey",
                "America/Montevideo",
                "America/Montserrat",
                "America/Nassau",
                "America/New_York",
                "America/Nipigon",
                "America/Nome",
                "America/Noronha",
                "America/North_Dakota/Beulah",
                "America/North_Dakota/Center",
                "America/North_Dakota/New_Salem",
                "America/Nuuk",
                "America/Ojinaga",
                "America/Panama",
                "America/Pangnirtung",
                "America/Paramaribo",
                "America/Phoenix",
                "America/Port-au-Prince",
                "America/Port_of_Spain",
                "America/Porto_Velho",
                "America/Puerto_Rico",
                "America/Punta_Arenas",
                "America/Rainy_River",
                "America/Rankin_Inlet",
                "America/Recife",
                "America/Regina",
                "America/Resolute",
                "America/Rio_Branco",
                "America/Santarem",
                "America/Santiago",
                "America/Santo_Domingo",
                "America/Sao_Paulo",
                "America/Scoresbysund",
                "America/Sitka",
                "America/St_Barthelemy",
                "America/St_Johns",
                "America/St_Kitts",
                "America/St_Lucia",
                "America/St_Thomas",
                "America/St_Vincent",
                "America/Swift_Current",
                "America/Tegucigalpa",
                "America/Thule",
                "America/Thunder_Bay",
                "America/Tijuana",
                "America/Toronto",
                "America/Tortola",
                "America/Vancouver",
                "America/Whitehorse",
                "America/Winnipeg",
                "America/Yakutat",
                "America/Yellowknife",
                "Antarctica/Casey",
                "Antarctica/Davis",
                "Antarctica/DumontDUrville",
                "Antarctica/Macquarie",
                "Antarctica/Mawson",
                "Antarctica/McMurdo",
                "Antarctica/Palmer",
                "Antarctica/Rothera",
                "Antarctica/Syowa",
                "Antarctica/Troll",
                "Antarctica/Vostok",
                "Arctic/Longyearbyen",
                "Asia/Aden",
                "Asia/Almaty",
                "Asia/Amman",
                "Asia/Anadyr",
                "Asia/Aqtau",
                "Asia/Aqtobe",
                "Asia/Ashgabat",
                "Asia/Atyrau",
                "Asia/Baghdad",
                "Asia/Bahrain",
                "Asia/Baku",
                "Asia/Bangkok",
                "Asia/Barnaul",
                "Asia/Beirut",
                "Asia/Bishkek",
                "Asia/Brunei",
                "Asia/Chita",
                "Asia/Choibalsan",
                "Asia/Colombo",
                "Asia/Damascus",
                "Asia/Dhaka",
                "Asia/Dili",
                "Asia/Dubai",
                "Asia/Dushanbe",
                "Asia/Famagusta",
                "Asia/Gaza",
                "Asia/Hebron",
                "Asia/Ho_Chi_Minh",
                "Asia/Hong_Kong",
                "Asia/Hovd",
                "Asia/Irkutsk",
                "Asia/Jakarta",
                "Asia/Jayapura",
                "Asia/Jerusalem",
                "Asia/Kabul",
                "Asia/Kamchatka",
                "Asia/Karachi",
                "Asia/Kathmandu",
                "Asia/Khandyga",
                "Asia/Kolkata",
                "Asia/Krasnoyarsk",
                "Asia/Kuala_Lumpur",
                "Asia/Kuching",
                "Asia/Kuwait",
                "Asia/Macau",
                "Asia/Magadan",
                "Asia/Makassar",
                "Asia/Manila",
                "Asia/Muscat",
                "Asia/Novokuznetsk",
                "Asia/Novosibirsk",
                "Asia/Omsk",
                "Asia/Oral",
                "Asia/Phnom_Penh",
                "Asia/Pontianak",
                "Asia/Pyongyang",
                "Asia/Qatar",
                "Asia/Qostanay",
                "Asia/Qyzylorda",
                "Asia/Riyadh",
                "Asia/Sakhalin",
                "Asia/Samarkand",
                "Asia/Seoul",
                "Asia/Shanghai",
                "Asia/Singapore",
                "Asia/Srednekolymsk",
                "Asia/Taipei",
                "Asia/Tashkent",
                "Asia/Tbilisi",
                "Asia/Tehran",
                "Asia/Thimphu",
                "Asia/Tokyo",
                "Asia/Tomsk",
                "Asia/Ulaanbaatar",
                "Asia/Urumqi",
                "Asia/Ust-Nera",
                "Asia/Vientiane",
                "Asia/Vladivostok",
                "Asia/Yakutsk",
                "Asia/Yangon",
                "Asia/Yekaterinburg",
                "Asia/Yerevan",
                "Atlantic/Azores",
                "Atlantic/Bermuda",
                "Atlantic/Canary",
                "Atlantic/Cape_Verde",
                "Atlantic/Faroe",
                "Atlantic/Madeira",
                "Atlantic/Reykjavik",
                "Atlantic/South_Georgia",
                "Atlantic/St_Helena",
                "Atlantic/Stanley",
                "Australia/Adelaide",
                "Australia/Brisbane",
                "Australia/Broken_Hill",
                "Australia/Darwin",
                "Australia/Eucla",
                "Australia/Hobart",
                "Australia/Lindeman",
                "Australia/Lord_Howe",
                "Australia/Melbourne",
                "Australia/Perth",
                "Australia/Sydney",
                "CET",
                "CST6CDT",
                "EET",
                "EST",
                "EST5EDT",
                "Etc/GMT",
                "Etc/GMT+0",
                "Etc/GMT+1",
                "Etc/GMT+10",
                "Etc/GMT+11",
                "Etc/GMT+12",
                "Etc/GMT+2",
                "Etc/GMT+3",
                "Etc/GMT+4",
                "Etc/GMT+5",
                "Etc/GMT+6",
                "Etc/GMT+7",
                "Etc/GMT+8",
                "Etc/GMT+9",
                "Etc/GMT-0",
                "Etc/GMT-1",
                "Etc/GMT-10",
                "Etc/GMT-11",
                "Etc/GMT-12",
                "Etc/GMT-13",
                "Etc/GMT-14",
                "Etc/GMT-2",
                "Etc/GMT-3",
                "Etc/GMT-4",
                "Etc/GMT-5",
                "Etc/GMT-6",
                "Etc/GMT-7",
                "Etc/GMT-8",
                "Etc/GMT-9",
                "Etc/GMT0",
                "Etc/Greenwich",
                "Etc/UTC",
                "Etc/Universal",
                "Etc/Zulu",
                "Europe/Amsterdam",
                "Europe/Andorra",
                "Europe/Astrakhan",
                "Europe/Athens",
                "Europe/Belgrade",
                "Europe/Berlin",
                "Europe/Bratislava",
                "Europe/Brussels",
                "Europe/Bucharest",
                "Europe/Budapest",
                "Europe/Busingen",
                "Europe/Chisinau",
                "Europe/Copenhagen",
                "Europe/Dublin",
                "Europe/Gibraltar",
                "Europe/Guernsey",
                "Europe/Helsinki",
                "Europe/Isle_of_Man",
                "Europe/Istanbul",
                "Europe/Jersey",
                "Europe/Kaliningrad",
                "Europe/Kirov",
                "Europe/Kyiv",
                "Europe/Lisbon",
                "Europe/Ljubljana",
                "Europe/London",
                "Europe/Luxembourg",
                "Europe/Madrid",
                "Europe/Malta",
                "Europe/Mariehamn",
                "Europe/Minsk",
                "Europe/Monaco",
                "Europe/Moscow",
                "Europe/Nicosia",
                "Europe/Oslo",
                "Europe/Paris",
                "Europe/Podgorica",
                "Europe/Prague",
                "Europe/Riga",
                "Europe/Rome",
                "Europe/Samara",
                "Europe/San_Marino",
                "Europe/Sarajevo",
                "Europe/Saratov",
                "Europe/Simferopol",
                "Europe/Skopje",
                "Europe/Sofia",
                "Europe/Stockholm",
                "Europe/Tallinn",
                "Europe/Tirane",
                "Europe/Ulyanovsk",
                "Europe/Uzhgorod",
                "Europe/Vaduz",
                "Europe/Vatican",
                "Europe/Vienna",
                "Europe/Vilnius",
                "Europe/Volgograd",
                "Europe/Warsaw",
                "Europe/Zagreb",
                "Europe/Zaporozhye",
                "Europe/Zurich",
                "GMT",
                "HST",
                "Indian/Antananarivo",
                "Indian/Chagos",
                "Indian/Christmas",
                "Indian/Cocos",
                "Indian/Comoro",
                "Indian/Kerguelen",
                "Indian/Mahe",
                "Indian/Maldives",
                "Indian/Mauritius",
                "Indian/Mayotte",
                "Indian/Reunion",
                "MET",
                "MST",
                "MST7MDT",
                "PST8PDT",
                "Pacific/Apia",
                "Pacific/Auckland",
                "Pacific/Bougainville",
                "Pacific/Chatham",
                "Pacific/Chuuk",
                "Pacific/Easter",
                "Pacific/Efate",
                "Pacific/Fakaofo",
                "Pacific/Fiji",
                "Pacific/Funafuti",
                "Pacific/Galapagos",
                "Pacific/Gambier",
                "Pacific/Guadalcanal",
                "Pacific/Guam",
                "Pacific/Honolulu",
                "Pacific/Kanton",
                "Pacific/Kiritimati",
                "Pacific/Kosrae",
                "Pacific/Kwajalein",
                "Pacific/Majuro",
                "Pacific/Marquesas",
                "Pacific/Midway",
                "Pacific/Nauru",
                "Pacific/Niue",
                "Pacific/Norfolk",
                "Pacific/Noumea",
                "Pacific/Pago_Pago",
                "Pacific/Palau",
                "Pacific/Pitcairn",
                "Pacific/Pohnpei",
                "Pacific/Port_Moresby",
                "Pacific/Rarotonga",
                "Pacific/Saipan",
                "Pacific/Tahiti",
                "Pacific/Tarawa",
                "Pacific/Tongatapu",
                "Pacific/Wake",
                "Pacific/Wallis",
                "UTC",
                "WET"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Completeness"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get timeseries data completeness",
        "description": "Returns a report about data completeness, involving the number of values\nper time bucket and the sample interval.\n\nIf the theoretical time interval for a timeseries is not defined in database,\nit is inferred from the maximum number of values per bucket.",
        "tags": [
          "Analysis"
        ]
      }
    },
    "/analysis/energy_consumption/site/{site_id}": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "bucket_width_value",
            "description": "Only fixed bucket width units (second, minute, hour) accept a value different than 1.",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          },
          {
            "in": "query",
            "name": "bucket_width_unit",
            "schema": {
              "type": "string",
              "enum": [
                "second",
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "Initial datetime",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "End datetime (excluded from the interval)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "timezone",
            "description": "Timezone to use for the aggreagation",
            "schema": {
              "type": "string",
              "format": "iana-tz",
              "default": "UTC",
              "enum": [
                "Africa/Abidjan",
                "Africa/Accra",
                "Africa/Addis_Ababa",
                "Africa/Algiers",
                "Africa/Asmara",
                "Africa/Bamako",
                "Africa/Bangui",
                "Africa/Banjul",
                "Africa/Bissau",
                "Africa/Blantyre",
                "Africa/Brazzaville",
                "Africa/Bujumbura",
                "Africa/Cairo",
                "Africa/Casablanca",
                "Africa/Ceuta",
                "Africa/Conakry",
                "Africa/Dakar",
                "Africa/Dar_es_Salaam",
                "Africa/Djibouti",
                "Africa/Douala",
                "Africa/El_Aaiun",
                "Africa/Freetown",
                "Africa/Gaborone",
                "Africa/Harare",
                "Africa/Johannesburg",
                "Africa/Juba",
                "Africa/Kampala",
                "Africa/Khartoum",
                "Africa/Kigali",
                "Africa/Kinshasa",
                "Africa/Lagos",
                "Africa/Libreville",
                "Africa/Lome",
                "Africa/Luanda",
                "Africa/Lubumbashi",
                "Africa/Lusaka",
                "Africa/Malabo",
                "Africa/Maputo",
                "Africa/Maseru",
                "Africa/Mbabane",
                "Africa/Mogadishu",
                "Africa/Monrovia",
                "Africa/Nairobi",
                "Africa/Ndjamena",
                "Africa/Niamey",
                "Africa/Nouakchott",
                "Africa/Ouagadougou",
                "Africa/Porto-Novo",
                "Africa/Sao_Tome",
                "Africa/Tripoli",
                "Africa/Tunis",
                "Africa/Windhoek",
                "America/Adak",
                "America/Anchorage",
                "America/Anguilla",
                "America/Antigua",
                "America/Araguaina",
                "America/Argentina/Buenos_Aires",
                "America/Argentina/Catamarca",
                "America/Argentina/Cordoba",
                "America/Argentina/Jujuy",
                "America/Argentina/La_Rioja",
                "America/Argentina/Mendoza",
                "America/Argentina/Rio_Gallegos",
                "America/Argentina/Salta",
                "America/Argentina/San_Juan",
                "America/Argentina/San_Luis",
                "America/Argentina/Tucuman",
                "America/Argentina/Ushuaia",
                "America/Aruba",
                "America/Asuncion",
                "America/Atikokan",
                "America/Bahia",
                "America/Bahia_Banderas",
                "America/Barbados",
                "America/Belem",
                "America/Belize",
                "America/Blanc-Sablon",
                "America/Boa_Vista",
                "America/Bogota",
                "America/Boise",
                "America/Cambridge_Bay",
                "America/Campo_Grande",
                "America/Cancun",
                "America/Caracas",
                "America/Cayenne",
                "America/Cayman",
                "America/Chicago",
                "America/Chihuahua",
                "America/Costa_Rica",
                "America/Creston",
                "America/Cuiaba",
                "America/Curacao",
                "America/Danmarkshavn",
                "America/Dawson",
                "America/Dawson_Creek",
                "America/Denver",
                "America/Detroit",
                "America/Dominica",
                "America/Edmonton",
                "America/Eirunepe",
                "America/El_Salvador",
                "America/Fort_Nelson",
                "America/Fortaleza",
                "America/Glace_Bay",
                "America/Goose_Bay",
                "America/Grand_Turk",
                "America/Grenada",
                "America/Guadeloupe",
                "America/Guatemala",
                "America/Guayaquil",
                "America/Guyana",
                "America/Halifax",
                "America/Havana",
                "America/Hermosillo",
                "America/Indiana/Indianapolis",
                "America/Indiana/Knox",
                "America/Indiana/Marengo",
                "America/Indiana/Petersburg",
                "America/Indiana/Tell_City",
                "America/Indiana/Vevay",
                "America/Indiana/Vincennes",
                "America/Indiana/Winamac",
                "America/Inuvik",
                "America/Iqaluit",
                "America/Jamaica",
                "America/Juneau",
                "America/Kentucky/Louisville",
                "America/Kentucky/Monticello",
                "America/Kralendijk",
                "America/La_Paz",
                "America/Lima",
                "America/Los_Angeles",
                "America/Lower_Princes",
                "America/Maceio",
                "America/Managua",
                "America/Manaus",
                "America/Marigot",
                "America/Martinique",
                "America/Matamoros",
                "America/Mazatlan",
                "America/Menominee",
                "America/Merida",
                "America/Metlakatla",
                "America/Mexico_City",
                "America/Miquelon",
                "America/Moncton",
                "America/Monterrey",
                "America/Montevideo",
                "America/Montserrat",
                "America/Nassau",
                "America/New_York",
                "America/Nipigon",
                "America/Nome",
                "America/Noronha",
                "America/North_Dakota/Beulah",
                "America/North_Dakota/Center",
                "America/North_Dakota/New_Salem",
                "America/Nuuk",
                "America/Ojinaga",
                "America/Panama",
                "America/Pangnirtung",
                "America/Paramaribo",
                "America/Phoenix",
                "America/Port-au-Prince",
                "America/Port_of_Spain",
                "America/Porto_Velho",
                "America/Puerto_Rico",
                "America/Punta_Arenas",
                "America/Rainy_River",
                "America/Rankin_Inlet",
                "America/Recife",
                "America/Regina",
                "America/Resolute",
                "America/Rio_Branco",
                "America/Santarem",
                "America/Santiago",
                "America/Santo_Domingo",
                "America/Sao_Paulo",
                "America/Scoresbysund",
                "America/Sitka",
                "America/St_Barthelemy",
                "America/St_Johns",
                "America/St_Kitts",
                "America/St_Lucia",
                "America/St_Thomas",
                "America/St_Vincent",
                "America/Swift_Current",
                "America/Tegucigalpa",
                "America/Thule",
                "America/Thunder_Bay",
                "America/Tijuana",
                "America/Toronto",
                "America/Tortola",
                "America/Vancouver",
                "America/Whitehorse",
                "America/Winnipeg",
                "America/Yakutat",
                "America/Yellowknife",
                "Antarctica/Casey",
                "Antarctica/Davis",
                "Antarctica/DumontDUrville",
                "Antarctica/Macquarie",
                "Antarctica/Mawson",
                "Antarctica/McMurdo",
                "Antarctica/Palmer",
                "Antarctica/Rothera",
                "Antarctica/Syowa",
                "Antarctica/Troll",
                "Antarctica/Vostok",
                "Arctic/Longyearbyen",
                "Asia/Aden",
                "Asia/Almaty",
                "Asia/Amman",
                "Asia/Anadyr",
                "Asia/Aqtau",
                "Asia/Aqtobe",
                "Asia/Ashgabat",
                "Asia/Atyrau",
                "Asia/Baghdad",
                "Asia/Bahrain",
                "Asia/Baku",
                "Asia/Bangkok",
                "Asia/Barnaul",
                "Asia/Beirut",
                "Asia/Bishkek",
                "Asia/Brunei",
                "Asia/Chita",
                "Asia/Choibalsan",
                "Asia/Colombo",
                "Asia/Damascus",
                "Asia/Dhaka",
                "Asia/Dili",
                "Asia/Dubai",
                "Asia/Dushanbe",
                "Asia/Famagusta",
                "Asia/Gaza",
                "Asia/Hebron",
                "Asia/Ho_Chi_Minh",
                "Asia/Hong_Kong",
                "Asia/Hovd",
                "Asia/Irkutsk",
                "Asia/Jakarta",
                "Asia/Jayapura",
                "Asia/Jerusalem",
                "Asia/Kabul",
                "Asia/Kamchatka",
                "Asia/Karachi",
                "Asia/Kathmandu",
                "Asia/Khandyga",
                "Asia/Kolkata",
                "Asia/Krasnoyarsk",
                "Asia/Kuala_Lumpur",
                "Asia/Kuching",
                "Asia/Kuwait",
                "Asia/Macau",
                "Asia/Magadan",
                "Asia/Makassar",
                "Asia/Manila",
                "Asia/Muscat",
                "Asia/Novokuznetsk",
                "Asia/Novosibirsk",
                "Asia/Omsk",
                "Asia/Oral",
                "Asia/Phnom_Penh",
                "Asia/Pontianak",
                "Asia/Pyongyang",
                "Asia/Qatar",
                "Asia/Qostanay",
                "Asia/Qyzylorda",
                "Asia/Riyadh",
                "Asia/Sakhalin",
                "Asia/Samarkand",
                "Asia/Seoul",
                "Asia/Shanghai",
                "Asia/Singapore",
                "Asia/Srednekolymsk",
                "Asia/Taipei",
                "Asia/Tashkent",
                "Asia/Tbilisi",
                "Asia/Tehran",
                "Asia/Thimphu",
                "Asia/Tokyo",
                "Asia/Tomsk",
                "Asia/Ulaanbaatar",
                "Asia/Urumqi",
                "Asia/Ust-Nera",
                "Asia/Vientiane",
                "Asia/Vladivostok",
                "Asia/Yakutsk",
                "Asia/Yangon",
                "Asia/Yekaterinburg",
                "Asia/Yerevan",
                "Atlantic/Azores",
                "Atlantic/Bermuda",
                "Atlantic/Canary",
                "Atlantic/Cape_Verde",
                "Atlantic/Faroe",
                "Atlantic/Madeira",
                "Atlantic/Reykjavik",
                "Atlantic/South_Georgia",
                "Atlantic/St_Helena",
                "Atlantic/Stanley",
                "Australia/Adelaide",
                "Australia/Brisbane",
                "Australia/Broken_Hill",
                "Australia/Darwin",
                "Australia/Eucla",
                "Australia/Hobart",
                "Australia/Lindeman",
                "Australia/Lord_Howe",
                "Australia/Melbourne",
                "Australia/Perth",
                "Australia/Sydney",
                "CET",
                "CST6CDT",
                "EET",
                "EST",
                "EST5EDT",
                "Etc/GMT",
                "Etc/GMT+0",
                "Etc/GMT+1",
                "Etc/GMT+10",
                "Etc/GMT+11",
                "Etc/GMT+12",
                "Etc/GMT+2",
                "Etc/GMT+3",
                "Etc/GMT+4",
                "Etc/GMT+5",
                "Etc/GMT+6",
                "Etc/GMT+7",
                "Etc/GMT+8",
                "Etc/GMT+9",
                "Etc/GMT-0",
                "Etc/GMT-1",
                "Etc/GMT-10",
                "Etc/GMT-11",
                "Etc/GMT-12",
                "Etc/GMT-13",
                "Etc/GMT-14",
                "Etc/GMT-2",
                "Etc/GMT-3",
                "Etc/GMT-4",
                "Etc/GMT-5",
                "Etc/GMT-6",
                "Etc/GMT-7",
                "Etc/GMT-8",
                "Etc/GMT-9",
                "Etc/GMT0",
                "Etc/Greenwich",
                "Etc/UTC",
                "Etc/Universal",
                "Etc/Zulu",
                "Europe/Amsterdam",
                "Europe/Andorra",
                "Europe/Astrakhan",
                "Europe/Athens",
                "Europe/Belgrade",
                "Europe/Berlin",
                "Europe/Bratislava",
                "Europe/Brussels",
                "Europe/Bucharest",
                "Europe/Budapest",
                "Europe/Busingen",
                "Europe/Chisinau",
                "Europe/Copenhagen",
                "Europe/Dublin",
                "Europe/Gibraltar",
                "Europe/Guernsey",
                "Europe/Helsinki",
                "Europe/Isle_of_Man",
                "Europe/Istanbul",
                "Europe/Jersey",
                "Europe/Kaliningrad",
                "Europe/Kirov",
                "Europe/Kyiv",
                "Europe/Lisbon",
                "Europe/Ljubljana",
                "Europe/London",
                "Europe/Luxembourg",
                "Europe/Madrid",
                "Europe/Malta",
                "Europe/Mariehamn",
                "Europe/Minsk",
                "Europe/Monaco",
                "Europe/Moscow",
                "Europe/Nicosia",
                "Europe/Oslo",
                "Europe/Paris",
                "Europe/Podgorica",
                "Europe/Prague",
                "Europe/Riga",
                "Europe/Rome",
                "Europe/Samara",
                "Europe/San_Marino",
                "Europe/Sarajevo",
                "Europe/Saratov",
                "Europe/Simferopol",
                "Europe/Skopje",
                "Europe/Sofia",
                "Europe/Stockholm",
                "Europe/Tallinn",
                "Europe/Tirane",
                "Europe/Ulyanovsk",
                "Europe/Uzhgorod",
                "Europe/Vaduz",
                "Europe/Vatican",
                "Europe/Vienna",
                "Europe/Vilnius",
                "Europe/Volgograd",
                "Europe/Warsaw",
                "Europe/Zagreb",
                "Europe/Zaporozhye",
                "Europe/Zurich",
                "GMT",
                "HST",
                "Indian/Antananarivo",
                "Indian/Chagos",
                "Indian/Christmas",
                "Indian/Cocos",
                "Indian/Comoro",
                "Indian/Kerguelen",
                "Indian/Mahe",
                "Indian/Maldives",
                "Indian/Mauritius",
                "Indian/Mayotte",
                "Indian/Reunion",
                "MET",
                "MST",
                "MST7MDT",
                "PST8PDT",
                "Pacific/Apia",
                "Pacific/Auckland",
                "Pacific/Bougainville",
                "Pacific/Chatham",
                "Pacific/Chuuk",
                "Pacific/Easter",
                "Pacific/Efate",
                "Pacific/Fakaofo",
                "Pacific/Fiji",
                "Pacific/Funafuti",
                "Pacific/Galapagos",
                "Pacific/Gambier",
                "Pacific/Guadalcanal",
                "Pacific/Guam",
                "Pacific/Honolulu",
                "Pacific/Kanton",
                "Pacific/Kiritimati",
                "Pacific/Kosrae",
                "Pacific/Kwajalein",
                "Pacific/Majuro",
                "Pacific/Marquesas",
                "Pacific/Midway",
                "Pacific/Nauru",
                "Pacific/Niue",
                "Pacific/Norfolk",
                "Pacific/Noumea",
                "Pacific/Pago_Pago",
                "Pacific/Palau",
                "Pacific/Pitcairn",
                "Pacific/Pohnpei",
                "Pacific/Port_Moresby",
                "Pacific/Rarotonga",
                "Pacific/Saipan",
                "Pacific/Tahiti",
                "Pacific/Tarawa",
                "Pacific/Tongatapu",
                "Pacific/Wake",
                "Pacific/Wallis",
                "UTC",
                "WET"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnergyConsumption"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get energy consumption breakdown for a site",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "site_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/analysis/energy_consumption/building/{building_id}": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "bucket_width_value",
            "description": "Only fixed bucket width units (second, minute, hour) accept a value different than 1.",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          },
          {
            "in": "query",
            "name": "bucket_width_unit",
            "schema": {
              "type": "string",
              "enum": [
                "second",
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "start_time",
            "description": "Initial datetime",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "end_time",
            "description": "End datetime (excluded from the interval)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "timezone",
            "description": "Timezone to use for the aggreagation",
            "schema": {
              "type": "string",
              "format": "iana-tz",
              "default": "UTC",
              "enum": [
                "Africa/Abidjan",
                "Africa/Accra",
                "Africa/Addis_Ababa",
                "Africa/Algiers",
                "Africa/Asmara",
                "Africa/Bamako",
                "Africa/Bangui",
                "Africa/Banjul",
                "Africa/Bissau",
                "Africa/Blantyre",
                "Africa/Brazzaville",
                "Africa/Bujumbura",
                "Africa/Cairo",
                "Africa/Casablanca",
                "Africa/Ceuta",
                "Africa/Conakry",
                "Africa/Dakar",
                "Africa/Dar_es_Salaam",
                "Africa/Djibouti",
                "Africa/Douala",
                "Africa/El_Aaiun",
                "Africa/Freetown",
                "Africa/Gaborone",
                "Africa/Harare",
                "Africa/Johannesburg",
                "Africa/Juba",
                "Africa/Kampala",
                "Africa/Khartoum",
                "Africa/Kigali",
                "Africa/Kinshasa",
                "Africa/Lagos",
                "Africa/Libreville",
                "Africa/Lome",
                "Africa/Luanda",
                "Africa/Lubumbashi",
                "Africa/Lusaka",
                "Africa/Malabo",
                "Africa/Maputo",
                "Africa/Maseru",
                "Africa/Mbabane",
                "Africa/Mogadishu",
                "Africa/Monrovia",
                "Africa/Nairobi",
                "Africa/Ndjamena",
                "Africa/Niamey",
                "Africa/Nouakchott",
                "Africa/Ouagadougou",
                "Africa/Porto-Novo",
                "Africa/Sao_Tome",
                "Africa/Tripoli",
                "Africa/Tunis",
                "Africa/Windhoek",
                "America/Adak",
                "America/Anchorage",
                "America/Anguilla",
                "America/Antigua",
                "America/Araguaina",
                "America/Argentina/Buenos_Aires",
                "America/Argentina/Catamarca",
                "America/Argentina/Cordoba",
                "America/Argentina/Jujuy",
                "America/Argentina/La_Rioja",
                "America/Argentina/Mendoza",
                "America/Argentina/Rio_Gallegos",
                "America/Argentina/Salta",
                "America/Argentina/San_Juan",
                "America/Argentina/San_Luis",
                "America/Argentina/Tucuman",
                "America/Argentina/Ushuaia",
                "America/Aruba",
                "America/Asuncion",
                "America/Atikokan",
                "America/Bahia",
                "America/Bahia_Banderas",
                "America/Barbados",
                "America/Belem",
                "America/Belize",
                "America/Blanc-Sablon",
                "America/Boa_Vista",
                "America/Bogota",
                "America/Boise",
                "America/Cambridge_Bay",
                "America/Campo_Grande",
                "America/Cancun",
                "America/Caracas",
                "America/Cayenne",
                "America/Cayman",
                "America/Chicago",
                "America/Chihuahua",
                "America/Costa_Rica",
                "America/Creston",
                "America/Cuiaba",
                "America/Curacao",
                "America/Danmarkshavn",
                "America/Dawson",
                "America/Dawson_Creek",
                "America/Denver",
                "America/Detroit",
                "America/Dominica",
                "America/Edmonton",
                "America/Eirunepe",
                "America/El_Salvador",
                "America/Fort_Nelson",
                "America/Fortaleza",
                "America/Glace_Bay",
                "America/Goose_Bay",
                "America/Grand_Turk",
                "America/Grenada",
                "America/Guadeloupe",
                "America/Guatemala",
                "America/Guayaquil",
                "America/Guyana",
                "America/Halifax",
                "America/Havana",
                "America/Hermosillo",
                "America/Indiana/Indianapolis",
                "America/Indiana/Knox",
                "America/Indiana/Marengo",
                "America/Indiana/Petersburg",
                "America/Indiana/Tell_City",
                "America/Indiana/Vevay",
                "America/Indiana/Vincennes",
                "America/Indiana/Winamac",
                "America/Inuvik",
                "America/Iqaluit",
                "America/Jamaica",
                "America/Juneau",
                "America/Kentucky/Louisville",
                "America/Kentucky/Monticello",
                "America/Kralendijk",
                "America/La_Paz",
                "America/Lima",
                "America/Los_Angeles",
                "America/Lower_Princes",
                "America/Maceio",
                "America/Managua",
                "America/Manaus",
                "America/Marigot",
                "America/Martinique",
                "America/Matamoros",
                "America/Mazatlan",
                "America/Menominee",
                "America/Merida",
                "America/Metlakatla",
                "America/Mexico_City",
                "America/Miquelon",
                "America/Moncton",
                "America/Monterrey",
                "America/Montevideo",
                "America/Montserrat",
                "America/Nassau",
                "America/New_York",
                "America/Nipigon",
                "America/Nome",
                "America/Noronha",
                "America/North_Dakota/Beulah",
                "America/North_Dakota/Center",
                "America/North_Dakota/New_Salem",
                "America/Nuuk",
                "America/Ojinaga",
                "America/Panama",
                "America/Pangnirtung",
                "America/Paramaribo",
                "America/Phoenix",
                "America/Port-au-Prince",
                "America/Port_of_Spain",
                "America/Porto_Velho",
                "America/Puerto_Rico",
                "America/Punta_Arenas",
                "America/Rainy_River",
                "America/Rankin_Inlet",
                "America/Recife",
                "America/Regina",
                "America/Resolute",
                "America/Rio_Branco",
                "America/Santarem",
                "America/Santiago",
                "America/Santo_Domingo",
                "America/Sao_Paulo",
                "America/Scoresbysund",
                "America/Sitka",
                "America/St_Barthelemy",
                "America/St_Johns",
                "America/St_Kitts",
                "America/St_Lucia",
                "America/St_Thomas",
                "America/St_Vincent",
                "America/Swift_Current",
                "America/Tegucigalpa",
                "America/Thule",
                "America/Thunder_Bay",
                "America/Tijuana",
                "America/Toronto",
                "America/Tortola",
                "America/Vancouver",
                "America/Whitehorse",
                "America/Winnipeg",
                "America/Yakutat",
                "America/Yellowknife",
                "Antarctica/Casey",
                "Antarctica/Davis",
                "Antarctica/DumontDUrville",
                "Antarctica/Macquarie",
                "Antarctica/Mawson",
                "Antarctica/McMurdo",
                "Antarctica/Palmer",
                "Antarctica/Rothera",
                "Antarctica/Syowa",
                "Antarctica/Troll",
                "Antarctica/Vostok",
                "Arctic/Longyearbyen",
                "Asia/Aden",
                "Asia/Almaty",
                "Asia/Amman",
                "Asia/Anadyr",
                "Asia/Aqtau",
                "Asia/Aqtobe",
                "Asia/Ashgabat",
                "Asia/Atyrau",
                "Asia/Baghdad",
                "Asia/Bahrain",
                "Asia/Baku",
                "Asia/Bangkok",
                "Asia/Barnaul",
                "Asia/Beirut",
                "Asia/Bishkek",
                "Asia/Brunei",
                "Asia/Chita",
                "Asia/Choibalsan",
                "Asia/Colombo",
                "Asia/Damascus",
                "Asia/Dhaka",
                "Asia/Dili",
                "Asia/Dubai",
                "Asia/Dushanbe",
                "Asia/Famagusta",
                "Asia/Gaza",
                "Asia/Hebron",
                "Asia/Ho_Chi_Minh",
                "Asia/Hong_Kong",
                "Asia/Hovd",
                "Asia/Irkutsk",
                "Asia/Jakarta",
                "Asia/Jayapura",
                "Asia/Jerusalem",
                "Asia/Kabul",
                "Asia/Kamchatka",
                "Asia/Karachi",
                "Asia/Kathmandu",
                "Asia/Khandyga",
                "Asia/Kolkata",
                "Asia/Krasnoyarsk",
                "Asia/Kuala_Lumpur",
                "Asia/Kuching",
                "Asia/Kuwait",
                "Asia/Macau",
                "Asia/Magadan",
                "Asia/Makassar",
                "Asia/Manila",
                "Asia/Muscat",
                "Asia/Novokuznetsk",
                "Asia/Novosibirsk",
                "Asia/Omsk",
                "Asia/Oral",
                "Asia/Phnom_Penh",
                "Asia/Pontianak",
                "Asia/Pyongyang",
                "Asia/Qatar",
                "Asia/Qostanay",
                "Asia/Qyzylorda",
                "Asia/Riyadh",
                "Asia/Sakhalin",
                "Asia/Samarkand",
                "Asia/Seoul",
                "Asia/Shanghai",
                "Asia/Singapore",
                "Asia/Srednekolymsk",
                "Asia/Taipei",
                "Asia/Tashkent",
                "Asia/Tbilisi",
                "Asia/Tehran",
                "Asia/Thimphu",
                "Asia/Tokyo",
                "Asia/Tomsk",
                "Asia/Ulaanbaatar",
                "Asia/Urumqi",
                "Asia/Ust-Nera",
                "Asia/Vientiane",
                "Asia/Vladivostok",
                "Asia/Yakutsk",
                "Asia/Yangon",
                "Asia/Yekaterinburg",
                "Asia/Yerevan",
                "Atlantic/Azores",
                "Atlantic/Bermuda",
                "Atlantic/Canary",
                "Atlantic/Cape_Verde",
                "Atlantic/Faroe",
                "Atlantic/Madeira",
                "Atlantic/Reykjavik",
                "Atlantic/South_Georgia",
                "Atlantic/St_Helena",
                "Atlantic/Stanley",
                "Australia/Adelaide",
                "Australia/Brisbane",
                "Australia/Broken_Hill",
                "Australia/Darwin",
                "Australia/Eucla",
                "Australia/Hobart",
                "Australia/Lindeman",
                "Australia/Lord_Howe",
                "Australia/Melbourne",
                "Australia/Perth",
                "Australia/Sydney",
                "CET",
                "CST6CDT",
                "EET",
                "EST",
                "EST5EDT",
                "Etc/GMT",
                "Etc/GMT+0",
                "Etc/GMT+1",
                "Etc/GMT+10",
                "Etc/GMT+11",
                "Etc/GMT+12",
                "Etc/GMT+2",
                "Etc/GMT+3",
                "Etc/GMT+4",
                "Etc/GMT+5",
                "Etc/GMT+6",
                "Etc/GMT+7",
                "Etc/GMT+8",
                "Etc/GMT+9",
                "Etc/GMT-0",
                "Etc/GMT-1",
                "Etc/GMT-10",
                "Etc/GMT-11",
                "Etc/GMT-12",
                "Etc/GMT-13",
                "Etc/GMT-14",
                "Etc/GMT-2",
                "Etc/GMT-3",
                "Etc/GMT-4",
                "Etc/GMT-5",
                "Etc/GMT-6",
                "Etc/GMT-7",
                "Etc/GMT-8",
                "Etc/GMT-9",
                "Etc/GMT0",
                "Etc/Greenwich",
                "Etc/UTC",
                "Etc/Universal",
                "Etc/Zulu",
                "Europe/Amsterdam",
                "Europe/Andorra",
                "Europe/Astrakhan",
                "Europe/Athens",
                "Europe/Belgrade",
                "Europe/Berlin",
                "Europe/Bratislava",
                "Europe/Brussels",
                "Europe/Bucharest",
                "Europe/Budapest",
                "Europe/Busingen",
                "Europe/Chisinau",
                "Europe/Copenhagen",
                "Europe/Dublin",
                "Europe/Gibraltar",
                "Europe/Guernsey",
                "Europe/Helsinki",
                "Europe/Isle_of_Man",
                "Europe/Istanbul",
                "Europe/Jersey",
                "Europe/Kaliningrad",
                "Europe/Kirov",
                "Europe/Kyiv",
                "Europe/Lisbon",
                "Europe/Ljubljana",
                "Europe/London",
                "Europe/Luxembourg",
                "Europe/Madrid",
                "Europe/Malta",
                "Europe/Mariehamn",
                "Europe/Minsk",
                "Europe/Monaco",
                "Europe/Moscow",
                "Europe/Nicosia",
                "Europe/Oslo",
                "Europe/Paris",
                "Europe/Podgorica",
                "Europe/Prague",
                "Europe/Riga",
                "Europe/Rome",
                "Europe/Samara",
                "Europe/San_Marino",
                "Europe/Sarajevo",
                "Europe/Saratov",
                "Europe/Simferopol",
                "Europe/Skopje",
                "Europe/Sofia",
                "Europe/Stockholm",
                "Europe/Tallinn",
                "Europe/Tirane",
                "Europe/Ulyanovsk",
                "Europe/Uzhgorod",
                "Europe/Vaduz",
                "Europe/Vatican",
                "Europe/Vienna",
                "Europe/Vilnius",
                "Europe/Volgograd",
                "Europe/Warsaw",
                "Europe/Zagreb",
                "Europe/Zaporozhye",
                "Europe/Zurich",
                "GMT",
                "HST",
                "Indian/Antananarivo",
                "Indian/Chagos",
                "Indian/Christmas",
                "Indian/Cocos",
                "Indian/Comoro",
                "Indian/Kerguelen",
                "Indian/Mahe",
                "Indian/Maldives",
                "Indian/Mauritius",
                "Indian/Mayotte",
                "Indian/Reunion",
                "MET",
                "MST",
                "MST7MDT",
                "PST8PDT",
                "Pacific/Apia",
                "Pacific/Auckland",
                "Pacific/Bougainville",
                "Pacific/Chatham",
                "Pacific/Chuuk",
                "Pacific/Easter",
                "Pacific/Efate",
                "Pacific/Fakaofo",
                "Pacific/Fiji",
                "Pacific/Funafuti",
                "Pacific/Galapagos",
                "Pacific/Gambier",
                "Pacific/Guadalcanal",
                "Pacific/Guam",
                "Pacific/Honolulu",
                "Pacific/Kanton",
                "Pacific/Kiritimati",
                "Pacific/Kosrae",
                "Pacific/Kwajalein",
                "Pacific/Majuro",
                "Pacific/Marquesas",
                "Pacific/Midway",
                "Pacific/Nauru",
                "Pacific/Niue",
                "Pacific/Norfolk",
                "Pacific/Noumea",
                "Pacific/Pago_Pago",
                "Pacific/Palau",
                "Pacific/Pitcairn",
                "Pacific/Pohnpei",
                "Pacific/Port_Moresby",
                "Pacific/Rarotonga",
                "Pacific/Saipan",
                "Pacific/Tahiti",
                "Pacific/Tarawa",
                "Pacific/Tongatapu",
                "Pacific/Wake",
                "Pacific/Wallis",
                "UTC",
                "WET"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnergyConsumption"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get energy consumption breakdown for a building",
        "tags": [
          "Analysis"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "building_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/st_cleanups_by_campaigns/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ST_CleanupByCampaign"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List cleanup scheduled tasks x campaign associations",
        "tags": [
          "ST_CleanupByCampaign"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_CleanupByCampaign"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ST_CleanupByCampaign"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new cleanup scheduled tasks x campaign association",
        "tags": [
          "ST_CleanupByCampaign"
        ]
      }
    },
    "/st_cleanups_by_campaigns/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_CleanupByCampaign"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get cleanup scheduled tasks x campaign association by ID",
        "tags": [
          "ST_CleanupByCampaign"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_CleanupByCampaign"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ST_CleanupByCampaignPut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update cleanup scheduled tasks x campaign association by ID",
        "tags": [
          "ST_CleanupByCampaign"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a cleanup scheduled tasks x campaign associations",
        "tags": [
          "ST_CleanupByCampaign"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/st_cleanups_by_campaigns/full": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign_name",
                  "+campaign_name",
                  "-campaign_name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "is_enabled",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "in_campaign_name",
            "description": "Search for items whose name contains this input value (case insensitive)",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ST_CleanupByCampaignFull"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List cleanup service state for all campaigns",
        "tags": [
          "ST_CleanupByCampaign"
        ]
      }
    },
    "/st_cleanups_by_timeseries/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ST_CleanupByTimeseries"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List cleanup scheduled task x timeseries associations",
        "tags": [
          "ST_CleanupByTimeseries"
        ]
      }
    },
    "/st_cleanups_by_timeseries/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_CleanupByTimeseries"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get cleanup scheduled task x timeseries association by ID",
        "tags": [
          "ST_CleanupByTimeseries"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/st_cleanups_by_timeseries/full": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "timeseries_name",
                  "+timeseries_name",
                  "-timeseries_name",
                  "last_timestamp",
                  "+last_timestamp",
                  "-last_timestamp"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "timeseries_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "in_timeseries_name",
            "description": "Search for items whose name contains this input value (case insensitive)",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ST_CleanupByTimeseriesFull"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List cleanup service last timestamp for all timeseries",
        "tags": [
          "ST_CleanupByTimeseries"
        ]
      }
    },
    "/st_check_missings_by_campaigns/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ST_CheckMissingByCampaign"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List check missings scheduled tasks x campaign associations",
        "tags": [
          "ST_CheckMissingByCampaign"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_CheckMissingByCampaign"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ST_CheckMissingByCampaign"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new check missings scheduled tasks x campaign association",
        "tags": [
          "ST_CheckMissingByCampaign"
        ]
      }
    },
    "/st_check_missings_by_campaigns/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_CheckMissingByCampaign"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get check missings scheduled tasks x campaign association by ID",
        "tags": [
          "ST_CheckMissingByCampaign"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_CheckMissingByCampaign"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ST_CheckMissingByCampaignPut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update check missings scheduled tasks x campaign association by ID",
        "tags": [
          "ST_CheckMissingByCampaign"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a check missings scheduled tasks x campaign associations",
        "tags": [
          "ST_CheckMissingByCampaign"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/st_check_missings_by_campaigns/full": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign_name",
                  "+campaign_name",
                  "-campaign_name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "is_enabled",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "in_campaign_name",
            "description": "Search for items whose name contains this input value (case insensitive)",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ST_CheckMissingByCampaignFull"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List check missings service state for all campaigns",
        "tags": [
          "ST_CheckMissingByCampaign"
        ]
      }
    },
    "/st_check_outliers_by_campaigns/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ST_CheckOutliersByCampaign"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List check outliers scheduled tasks x campaign associations",
        "tags": [
          "ST_CheckOutliersByCampaign"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_CheckOutliersByCampaign"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ST_CheckOutliersByCampaign"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new check outliers scheduled tasks x campaign association",
        "tags": [
          "ST_CheckOutliersByCampaign"
        ]
      }
    },
    "/st_check_outliers_by_campaigns/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_CheckOutliersByCampaign"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get check outliers scheduled tasks x campaign association by ID",
        "tags": [
          "ST_CheckOutliersByCampaign"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_CheckOutliersByCampaign"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ST_CheckOutliersByCampaignPut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update check outliers scheduled tasks x campaign association by ID",
        "tags": [
          "ST_CheckOutliersByCampaign"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a check outliers scheduled tasks x campaign associations",
        "tags": [
          "ST_CheckOutliersByCampaign"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/st_check_outliers_by_campaigns/full": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign_name",
                  "+campaign_name",
                  "-campaign_name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "is_enabled",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "in_campaign_name",
            "description": "Search for items whose name contains this input value (case insensitive)",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ST_CheckOutliersByCampaignFull"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List check outliers service state for all campaigns",
        "tags": [
          "ST_CheckOutliersByCampaign"
        ]
      }
    },
    "/st_download_weather_data_by_sites/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ST_DownloadWeatherDataBySite"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List download weather data scheduled tasks x site associations",
        "tags": [
          "ST_DownloadWeatherDataBySite"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_DownloadWeatherDataBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ST_DownloadWeatherDataBySite"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new download weather data scheduled task x site association",
        "tags": [
          "ST_DownloadWeatherDataBySite"
        ]
      }
    },
    "/st_download_weather_data_by_sites/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_DownloadWeatherDataBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get download weather data scheduled task x site association by ID",
        "tags": [
          "ST_DownloadWeatherDataBySite"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_DownloadWeatherDataBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ST_DownloadWeatherDataBySitePut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update a download weather data scheduled task x site association",
        "tags": [
          "ST_DownloadWeatherDataBySite"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a download weather data scheduled task x site association",
        "tags": [
          "ST_DownloadWeatherDataBySite"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/st_download_weather_data_by_sites/full": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign_id",
                  "+campaign_id",
                  "-campaign_id",
                  "site_name",
                  "+site_name",
                  "-site_name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "is_enabled",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "in_site_name",
            "description": "Search for items whose name contains this input value (case insensitive)",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ST_DownloadWeatherDataBySiteFull"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List download weather data service state for all sites",
        "tags": [
          "ST_DownloadWeatherDataBySite"
        ]
      }
    },
    "/st_download_weather_forecast_data_by_sites/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ST_DownloadWeatherForecastDataBySite"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List download weather forecast data scheduled tasks x site associations",
        "tags": [
          "ST_DownloadWeatherForecastDataBySite"
        ]
      },
      "post": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "409": {
            "$ref": "#/components/responses/CONFLICT"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_DownloadWeatherForecastDataBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ST_DownloadWeatherForecastDataBySite"
              }
            }
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Add a new download weather forecast data scheduled task x site association",
        "tags": [
          "ST_DownloadWeatherForecastDataBySite"
        ]
      }
    },
    "/st_download_weather_forecast_data_by_sites/{item_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_DownloadWeatherForecastDataBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Get download weather forecast data scheduled task x site association by ID",
        "tags": [
          "ST_DownloadWeatherForecastDataBySite"
        ]
      },
      "put": {
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ST_DownloadWeatherForecastDataBySite"
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ST_DownloadWeatherForecastDataBySitePut"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Update a download weather forecast data scheduled task x site association",
        "tags": [
          "ST_DownloadWeatherForecastDataBySite"
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "412": {
            "$ref": "#/components/responses/PRECONDITION_FAILED"
          },
          "428": {
            "$ref": "#/components/responses/PRECONDITION_REQUIRED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/IF_MATCH"
          }
        ],
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "Delete a download weather forecast data scheduled task x site association",
        "tags": [
          "ST_DownloadWeatherForecastDataBySite"
        ]
      },
      "parameters": [
        {
          "in": "path",
          "name": "item_id",
          "required": true,
          "schema": {
            "type": "integer",
            "minimum": 0
          }
        }
      ]
    },
    "/st_download_weather_forecast_data_by_sites/full": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "campaign_id",
                  "+campaign_id",
                  "-campaign_id",
                  "site_name",
                  "+site_name",
                  "-site_name"
                ]
              }
            },
            "required": false,
            "explode": false,
            "style": "form"
          },
          {
            "in": "query",
            "name": "is_enabled",
            "schema": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "campaign_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "site_id",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "in_site_name",
            "description": "Search for items whose name contains this input value (case insensitive)",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/components/parameters/IF_NONE_MATCH"
          }
        ],
        "responses": {
          "422": {
            "$ref": "#/components/responses/UNPROCESSABLE_ENTITY"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ST_DownloadWeatherForecastDataBySiteFull"
                  }
                }
              }
            },
            "headers": {
              "ETag": {
                "$ref": "#/components/headers/ETAG"
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DEFAULT_ERROR"
          },
          "304": {
            "$ref": "#/components/responses/NOT_MODIFIED"
          },
          "401": {
            "$ref": "#/components/responses/UNAUTHORIZED"
          }
        },
        "security": [
          {
            "BasicAuthentication": []
          }
        ],
        "summary": "List download weather forecast data service state for all sites",
        "tags": [
          "ST_DownloadWeatherForecastDataBySite"
        ]
      }
    }
  },
  "info": {
    "title": "BEMServer API",
    "version": "0.20.0"
  },
  "tags": [
    {
      "name": "About",
      "description": "Informations about BEMServer"
    },
    {
      "name": "User",
      "description": "Operations on users"
    },
    {
      "name": "UserGroup",
      "description": "Operations on users groups"
    },
    {
      "name": "UserByUserGroup",
      "description": "Operations on users x user groups associations"
    },
    {
      "name": "Campaign",
      "description": "Operations on campaigns"
    },
    {
      "name": "UserGroupByCampaign",
      "description": "Operations on user group x campaign associations"
    },
    {
      "name": "CampaignScope",
      "description": "Operations on campaign scopes"
    },
    {
      "name": "UserGroupByCampaignScope",
      "description": "Operations on user group x campaign scope associations"
    },
    {
      "name": "TimeseriesProperty",
      "description": "Operations on timeseries properties"
    },
    {
      "name": "TimeseriesDataState",
      "description": "Operations on timeseries data states"
    },
    {
      "name": "Timeseries",
      "description": "Operations on timeseries"
    },
    {
      "name": "TimeseriesPropertyData",
      "description": "Operations on timeseries property data"
    },
    {
      "name": "TimeseriesData",
      "description": "Operations on timeseries data"
    },
    {
      "name": "TimeseriesDataForCampaign",
      "description": "Operations on timeseries data for a given campaign"
    },
    {
      "name": "EventCategory",
      "description": "Operations on event categories"
    },
    {
      "name": "EventCategoryByUser",
      "description": "Operations on event category x user associations"
    },
    {
      "name": "Event",
      "description": "Operations on events"
    },
    {
      "name": "TimeseriesByEvent",
      "description": "Operations on timeseries x event associations"
    },
    {
      "name": "EventBySite",
      "description": "Operations on event x site associations"
    },
    {
      "name": "EventByBuilding",
      "description": "Operations on event x building associations"
    },
    {
      "name": "EventByStorey",
      "description": "Operations on event x storey associations"
    },
    {
      "name": "EventBySpace",
      "description": "Operations on event x space associations"
    },
    {
      "name": "EventByZone",
      "description": "Operations on event x zone associations"
    },
    {
      "name": "Notification",
      "description": "Operations on notifications"
    },
    {
      "name": "Site",
      "description": "Operations on sites"
    },
    {
      "name": "Building",
      "description": "Operations on buildings"
    },
    {
      "name": "Storey",
      "description": "Operations on storeys"
    },
    {
      "name": "Space",
      "description": "Operations on spaces"
    },
    {
      "name": "Zone",
      "description": "Operations on zones"
    },
    {
      "name": "StructuralElementProperty",
      "description": "Operations on structural element properties"
    },
    {
      "name": "SiteProperty",
      "description": "Operations on site properties"
    },
    {
      "name": "BuildingProperty",
      "description": "Operations on building properties"
    },
    {
      "name": "StoreyProperty",
      "description": "Operations on storey properties"
    },
    {
      "name": "SpaceProperty",
      "description": "Operations on space properties"
    },
    {
      "name": "ZoneProperty",
      "description": "Operations on zone properties"
    },
    {
      "name": "SitePropertyData",
      "description": "Operations on site property data"
    },
    {
      "name": "BuildingPropertyData",
      "description": "Operations on building property data"
    },
    {
      "name": "StoreyPropertyData",
      "description": "Operations on storey property data"
    },
    {
      "name": "SpacePropertyData",
      "description": "Operations on space property data"
    },
    {
      "name": "ZonePropertyData",
      "description": "Operations on zone property data"
    },
    {
      "name": "TimeseriesBySite",
      "description": "Operations on timeseries x site associations"
    },
    {
      "name": "TimeseriesByBuilding",
      "description": "Operations on timeseries x building associations"
    },
    {
      "name": "TimeseriesByStorey",
      "description": "Operations on timeseries x storey associations"
    },
    {
      "name": "TimeseriesBySpace",
      "description": "Operations on timeseries x space associations"
    },
    {
      "name": "TimeseriesByZone",
      "description": "Operations on timeseries x zone associations"
    },
    {
      "name": "Energy",
      "description": "Operations on energies"
    },
    {
      "name": "EnergyEndUse",
      "description": "Operations on energy end uses"
    },
    {
      "name": "EnergyProductionTechnology",
      "description": "Operations on energy production technologies"
    },
    {
      "name": "EnergyConsumptionTimeseriesBySite",
      "description": "Operations on energy consumption timeseries x site associations"
    },
    {
      "name": "EnergyConsumptionTimeseriesByBuilding",
      "description": "Operations on energy consumption timeseries x building associations"
    },
    {
      "name": "EnergyProductionTimeseriesBySite",
      "description": "Operations on energy production timeseries x site associations"
    },
    {
      "name": "EnergyProductionTimeseriesByBuilding",
      "description": "Operations on energy production timeseries x building associations"
    },
    {
      "name": "WeatherTimeseriesBySite",
      "description": "Operations on weather timeseries x site associations"
    },
    {
      "name": "Input/Output",
      "description": "Input/Output operations"
    },
    {
      "name": "Analysis",
      "description": "Data analysis operations"
    },
    {
      "name": "ST_CleanupByCampaign",
      "description": "Operations on cleanup scheduled task x campaign associations"
    },
    {
      "name": "ST_CleanupByTimeseries",
      "description": "Operations on cleanup scheduled task x timeseries associations"
    },
    {
      "name": "ST_CheckMissingByCampaign",
      "description": "Operations on check missings scheduled task x campaign associations"
    },
    {
      "name": "ST_CheckOutliersByCampaign",
      "description": "Operations on check outliers scheduled task x campaign associations"
    },
    {
      "name": "ST_DownloadWeatherDataBySite",
      "description": "Operations on download weather data scheduled task x site associations"
    },
    {
      "name": "ST_DownloadWeatherForecastDataBySite",
      "description": "Operations on download weather forecast data scheduled task x site associations"
    }
  ],
  "openapi": "3.1.0",
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "integer",
            "description": "Error code"
          },
          "status": {
            "type": "string",
            "description": "Error name"
          },
          "errors": {
            "type": "object",
            "description": "Errors"
          }
        }
      },
      "PaginationMetadata": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "total_pages": {
            "type": "integer"
          },
          "first_page": {
            "type": "integer"
          },
          "last_page": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "previous_page": {
            "type": "integer"
          },
          "next_page": {
            "type": "integer"
          }
        }
      },
      "Versions": {
        "type": "object",
        "properties": {
          "bemserver_core": {
            "type": "string"
          },
          "bemserver_api": {
            "type": "string"
          }
        }
      },
      "About": {
        "type": "object",
        "properties": {
          "versions": {
            "$ref": "#/components/schemas/Versions"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1,
            "maxLength": 80
          },
          "is_admin": {
            "type": "boolean",
            "readOnly": true
          },
          "is_active": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "required": [
          "email",
          "name",
          "password"
        ]
      },
      "BooleanValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "boolean"
          }
        }
      },
      "UserGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        },
        "required": [
          "name"
        ]
      },
      "UserByUserGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user_id": {
            "type": "integer"
          },
          "user_group_id": {
            "type": "integer"
          }
        },
        "required": [
          "user_group_id",
          "user_id"
        ]
      },
      "Campaign": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "x-minimum": "1680-01-01T00:00:00+00:00",
            "x-maximum": "2260-01-01T00:00:00+00:00"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "x-minimum": "1680-01-01T00:00:00+00:00",
            "x-maximum": "2260-01-01T00:00:00+00:00"
          },
          "timezone": {
            "type": "string",
            "format": "iana-tz",
            "default": "UTC",
            "enum": [
              "Africa/Abidjan",
              "Africa/Accra",
              "Africa/Addis_Ababa",
              "Africa/Algiers",
              "Africa/Asmara",
              "Africa/Bamako",
              "Africa/Bangui",
              "Africa/Banjul",
              "Africa/Bissau",
              "Africa/Blantyre",
              "Africa/Brazzaville",
              "Africa/Bujumbura",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Ceuta",
              "Africa/Conakry",
              "Africa/Dakar",
              "Africa/Dar_es_Salaam",
              "Africa/Djibouti",
              "Africa/Douala",
              "Africa/El_Aaiun",
              "Africa/Freetown",
              "Africa/Gaborone",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Juba",
              "Africa/Kampala",
              "Africa/Khartoum",
              "Africa/Kigali",
              "Africa/Kinshasa",
              "Africa/Lagos",
              "Africa/Libreville",
              "Africa/Lome",
              "Africa/Luanda",
              "Africa/Lubumbashi",
              "Africa/Lusaka",
              "Africa/Malabo",
              "Africa/Maputo",
              "Africa/Maseru",
              "Africa/Mbabane",
              "Africa/Mogadishu",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "Africa/Ndjamena",
              "Africa/Niamey",
              "Africa/Nouakchott",
              "Africa/Ouagadougou",
              "Africa/Porto-Novo",
              "Africa/Sao_Tome",
              "Africa/Tripoli",
              "Africa/Tunis",
              "Africa/Windhoek",
              "America/Adak",
              "America/Anchorage",
              "America/Anguilla",
              "America/Antigua",
              "America/Araguaina",
              "America/Argentina/Buenos_Aires",
              "America/Argentina/Catamarca",
              "America/Argentina/Cordoba",
              "America/Argentina/Jujuy",
              "America/Argentina/La_Rioja",
              "America/Argentina/Mendoza",
              "America/Argentina/Rio_Gallegos",
              "America/Argentina/Salta",
              "America/Argentina/San_Juan",
              "America/Argentina/San_Luis",
              "America/Argentina/Tucuman",
              "America/Argentina/Ushuaia",
              "America/Aruba",
              "America/Asuncion",
              "America/Atikokan",
              "America/Bahia",
              "America/Bahia_Banderas",
              "America/Barbados",
              "America/Belem",
              "America/Belize",
              "America/Blanc-Sablon",
              "America/Boa_Vista",
              "America/Bogota",
              "America/Boise",
              "America/Cambridge_Bay",
              "America/Campo_Grande",
              "America/Cancun",
              "America/Caracas",
              "America/Cayenne",
              "America/Cayman",
              "America/Chicago",
              "America/Chihuahua",
              "America/Costa_Rica",
              "America/Creston",
              "America/Cuiaba",
              "America/Curacao",
              "America/Danmarkshavn",
              "America/Dawson",
              "America/Dawson_Creek",
              "America/Denver",
              "America/Detroit",
              "America/Dominica",
              "America/Edmonton",
              "America/Eirunepe",
              "America/El_Salvador",
              "America/Fort_Nelson",
              "America/Fortaleza",
              "America/Glace_Bay",
              "America/Goose_Bay",
              "America/Grand_Turk",
              "America/Grenada",
              "America/Guadeloupe",
              "America/Guatemala",
              "America/Guayaquil",
              "America/Guyana",
              "America/Halifax",
              "America/Havana",
              "America/Hermosillo",
              "America/Indiana/Indianapolis",
              "America/Indiana/Knox",
              "America/Indiana/Marengo",
              "America/Indiana/Petersburg",
              "America/Indiana/Tell_City",
              "America/Indiana/Vevay",
              "America/Indiana/Vincennes",
              "America/Indiana/Winamac",
              "America/Inuvik",
              "America/Iqaluit",
              "America/Jamaica",
              "America/Juneau",
              "America/Kentucky/Louisville",
              "America/Kentucky/Monticello",
              "America/Kralendijk",
              "America/La_Paz",
              "America/Lima",
              "America/Los_Angeles",
              "America/Lower_Princes",
              "America/Maceio",
              "America/Managua",
              "America/Manaus",
              "America/Marigot",
              "America/Martinique",
              "America/Matamoros",
              "America/Mazatlan",
              "America/Menominee",
              "America/Merida",
              "America/Metlakatla",
              "America/Mexico_City",
              "America/Miquelon",
              "America/Moncton",
              "America/Monterrey",
              "America/Montevideo",
              "America/Montserrat",
              "America/Nassau",
              "America/New_York",
              "America/Nipigon",
              "America/Nome",
              "America/Noronha",
              "America/North_Dakota/Beulah",
              "America/North_Dakota/Center",
              "America/North_Dakota/New_Salem",
              "America/Nuuk",
              "America/Ojinaga",
              "America/Panama",
              "America/Pangnirtung",
              "America/Paramaribo",
              "America/Phoenix",
              "America/Port-au-Prince",
              "America/Port_of_Spain",
              "America/Porto_Velho",
              "America/Puerto_Rico",
              "America/Punta_Arenas",
              "America/Rainy_River",
              "America/Rankin_Inlet",
              "America/Recife",
              "America/Regina",
              "America/Resolute",
              "America/Rio_Branco",
              "America/Santarem",
              "America/Santiago",
              "America/Santo_Domingo",
              "America/Sao_Paulo",
              "America/Scoresbysund",
              "America/Sitka",
              "America/St_Barthelemy",
              "America/St_Johns",
              "America/St_Kitts",
              "America/St_Lucia",
              "America/St_Thomas",
              "America/St_Vincent",
              "America/Swift_Current",
              "America/Tegucigalpa",
              "America/Thule",
              "America/Thunder_Bay",
              "America/Tijuana",
              "America/Toronto",
              "America/Tortola",
              "America/Vancouver",
              "America/Whitehorse",
              "America/Winnipeg",
              "America/Yakutat",
              "America/Yellowknife",
              "Antarctica/Casey",
              "Antarctica/Davis",
              "Antarctica/DumontDUrville",
              "Antarctica/Macquarie",
              "Antarctica/Mawson",
              "Antarctica/McMurdo",
              "Antarctica/Palmer",
              "Antarctica/Rothera",
              "Antarctica/Syowa",
              "Antarctica/Troll",
              "Antarctica/Vostok",
              "Arctic/Longyearbyen",
              "Asia/Aden",
              "Asia/Almaty",
              "Asia/Amman",
              "Asia/Anadyr",
              "Asia/Aqtau",
              "Asia/Aqtobe",
              "Asia/Ashgabat",
              "Asia/Atyrau",
              "Asia/Baghdad",
              "Asia/Bahrain",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Barnaul",
              "Asia/Beirut",
              "Asia/Bishkek",
              "Asia/Brunei",
              "Asia/Chita",
              "Asia/Choibalsan",
              "Asia/Colombo",
              "Asia/Damascus",
              "Asia/Dhaka",
              "Asia/Dili",
              "Asia/Dubai",
              "Asia/Dushanbe",
              "Asia/Famagusta",
              "Asia/Gaza",
              "Asia/Hebron",
              "Asia/Ho_Chi_Minh",
              "Asia/Hong_Kong",
              "Asia/Hovd",
              "Asia/Irkutsk",
              "Asia/Jakarta",
              "Asia/Jayapura",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Kathmandu",
              "Asia/Khandyga",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuching",
              "Asia/Kuwait",
              "Asia/Macau",
              "Asia/Magadan",
              "Asia/Makassar",
              "Asia/Manila",
              "Asia/Muscat",
              "Asia/Novokuznetsk",
              "Asia/Novosibirsk",
              "Asia/Omsk",
              "Asia/Oral",
              "Asia/Phnom_Penh",
              "Asia/Pontianak",
              "Asia/Pyongyang",
              "Asia/Qatar",
              "Asia/Qostanay",
              "Asia/Qyzylorda",
              "Asia/Riyadh",
              "Asia/Sakhalin",
              "Asia/Samarkand",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Thimphu",
              "Asia/Tokyo",
              "Asia/Tomsk",
              "Asia/Ulaanbaatar",
              "Asia/Urumqi",
              "Asia/Ust-Nera",
              "Asia/Vientiane",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yangon",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Bermuda",
              "Atlantic/Canary",
              "Atlantic/Cape_Verde",
              "Atlantic/Faroe",
              "Atlantic/Madeira",
              "Atlantic/Reykjavik",
              "Atlantic/South_Georgia",
              "Atlantic/St_Helena",
              "Atlantic/Stanley",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Broken_Hill",
              "Australia/Darwin",
              "Australia/Eucla",
              "Australia/Hobart",
              "Australia/Lindeman",
              "Australia/Lord_Howe",
              "Australia/Melbourne",
              "Australia/Perth",
              "Australia/Sydney",
              "CET",
              "CST6CDT",
              "EET",
              "EST",
              "EST5EDT",
              "Etc/GMT",
              "Etc/GMT+0",
              "Etc/GMT+1",
              "Etc/GMT+10",
              "Etc/GMT+11",
              "Etc/GMT+12",
              "Etc/GMT+2",
              "Etc/GMT+3",
              "Etc/GMT+4",
              "Etc/GMT+5",
              "Etc/GMT+6",
              "Etc/GMT+7",
              "Etc/GMT+8",
              "Etc/GMT+9",
              "Etc/GMT-0",
              "Etc/GMT-1",
              "Etc/GMT-10",
              "Etc/GMT-11",
              "Etc/GMT-12",
              "Etc/GMT-13",
              "Etc/GMT-14",
              "Etc/GMT-2",
              "Etc/GMT-3",
              "Etc/GMT-4",
              "Etc/GMT-5",
              "Etc/GMT-6",
              "Etc/GMT-7",
              "Etc/GMT-8",
              "Etc/GMT-9",
              "Etc/GMT0",
              "Etc/Greenwich",
              "Etc/UTC",
              "Etc/Universal",
              "Etc/Zulu",
              "Europe/Amsterdam",
              "Europe/Andorra",
              "Europe/Astrakhan",
              "Europe/Athens",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Busingen",
              "Europe/Chisinau",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Gibraltar",
              "Europe/Guernsey",
              "Europe/Helsinki",
              "Europe/Isle_of_Man",
              "Europe/Istanbul",
              "Europe/Jersey",
              "Europe/Kaliningrad",
              "Europe/Kirov",
              "Europe/Kyiv",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/Luxembourg",
              "Europe/Madrid",
              "Europe/Malta",
              "Europe/Mariehamn",
              "Europe/Minsk",
              "Europe/Monaco",
              "Europe/Moscow",
              "Europe/Nicosia",
              "Europe/Oslo",
              "Europe/Paris",
              "Europe/Podgorica",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/San_Marino",
              "Europe/Sarajevo",
              "Europe/Saratov",
              "Europe/Simferopol",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Tirane",
              "Europe/Ulyanovsk",
              "Europe/Uzhgorod",
              "Europe/Vaduz",
              "Europe/Vatican",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Europe/Zaporozhye",
              "Europe/Zurich",
              "GMT",
              "HST",
              "Indian/Antananarivo",
              "Indian/Chagos",
              "Indian/Christmas",
              "Indian/Cocos",
              "Indian/Comoro",
              "Indian/Kerguelen",
              "Indian/Mahe",
              "Indian/Maldives",
              "Indian/Mauritius",
              "Indian/Mayotte",
              "Indian/Reunion",
              "MET",
              "MST",
              "MST7MDT",
              "PST8PDT",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Bougainville",
              "Pacific/Chatham",
              "Pacific/Chuuk",
              "Pacific/Easter",
              "Pacific/Efate",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Funafuti",
              "Pacific/Galapagos",
              "Pacific/Gambier",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Kanton",
              "Pacific/Kiritimati",
              "Pacific/Kosrae",
              "Pacific/Kwajalein",
              "Pacific/Majuro",
              "Pacific/Marquesas",
              "Pacific/Midway",
              "Pacific/Nauru",
              "Pacific/Niue",
              "Pacific/Norfolk",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Palau",
              "Pacific/Pitcairn",
              "Pacific/Pohnpei",
              "Pacific/Port_Moresby",
              "Pacific/Rarotonga",
              "Pacific/Saipan",
              "Pacific/Tahiti",
              "Pacific/Tarawa",
              "Pacific/Tongatapu",
              "Pacific/Wake",
              "Pacific/Wallis",
              "UTC",
              "WET"
            ],
            "description": "Timezone used to localize timeseries in this campaign"
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          }
        },
        "required": [
          "name",
          "timezone"
        ]
      },
      "UserGroupByCampaign": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "campaign_id": {
            "type": "integer"
          },
          "user_group_id": {
            "type": "integer"
          }
        },
        "required": [
          "campaign_id",
          "user_group_id"
        ]
      },
      "CampaignScope": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "campaign_id": {
            "type": "integer"
          }
        },
        "required": [
          "campaign_id",
          "name"
        ]
      },
      "CampaignScopePut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          }
        },
        "required": [
          "name"
        ]
      },
      "UserGroupByCampaignScope": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "campaign_scope_id": {
            "type": "integer"
          },
          "user_group_id": {
            "type": "integer"
          }
        },
        "required": [
          "campaign_scope_id",
          "user_group_id"
        ]
      },
      "TimeseriesProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "value_type": {
            "default": "string",
            "type": "string",
            "enum": [
              "integer",
              "float",
              "boolean",
              "string"
            ]
          },
          "unit_symbol": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 250
          }
        },
        "required": [
          "name"
        ]
      },
      "TimeseriesPropertyPut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "unit_symbol": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 250
          }
        },
        "required": [
          "name"
        ]
      },
      "TimeseriesDataState": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          }
        },
        "required": [
          "name"
        ]
      },
      "Timeseries": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "unit_symbol": {
            "type": "string",
            "default": ""
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "campaign_id": {
            "type": "integer"
          },
          "campaign_scope_id": {
            "type": "integer"
          }
        },
        "required": [
          "campaign_id",
          "campaign_scope_id",
          "name"
        ]
      },
      "TimeseriesPut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "unit_symbol": {
            "type": "string",
            "default": ""
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          }
        },
        "required": [
          "name"
        ]
      },
      "TimeseriesPropertyData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "timeseries_id": {
            "type": "integer"
          },
          "property_id": {
            "type": "integer"
          },
          "value": {
            "type": "string",
            "maxLength": 100
          }
        },
        "required": [
          "property_id",
          "timeseries_id",
          "value"
        ]
      },
      "TSStats": {
        "type": "object",
        "properties": {
          "first_timestamp": {
            "type": "string",
            "format": "date-time",
            "x-minimum": "1680-01-01T00:00:00+00:00",
            "x-maximum": "2260-01-01T00:00:00+00:00",
            "description": "First datetime"
          },
          "last_timestamp": {
            "type": "string",
            "format": "date-time",
            "x-minimum": "1680-01-01T00:00:00+00:00",
            "x-maximum": "2260-01-01T00:00:00+00:00",
            "description": "Last datetime"
          },
          "count": {
            "type": "integer",
            "description": "Values count"
          },
          "min": {
            "type": "number",
            "description": "Minimum value"
          },
          "max": {
            "type": "number",
            "description": "Maximum value"
          },
          "avg": {
            "type": "number",
            "description": "Minimum value"
          },
          "stddev": {
            "type": "number",
            "description": "Standard deviation"
          }
        }
      },
      "TimeseriesDataStatsByID": {
        "type": "object",
        "properties": {
          "stats": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TSStats"
            }
          }
        }
      },
      "TimeseriesDataStatsByName": {
        "type": "object",
        "properties": {
          "stats": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TSStats"
            }
          }
        }
      },
      "EventCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 250
          }
        },
        "required": [
          "name"
        ]
      },
      "EventCategoryByUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "notification_level": {
            "type": "string",
            "enum": [
              "DEBUG",
              "INFO",
              "WARNING",
              "ERROR",
              "CRITICAL"
            ]
          },
          "user_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          }
        },
        "required": [
          "category_id",
          "user_id"
        ]
      },
      "EventCategoryByUserPut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "notification_level": {
            "type": "string",
            "enum": [
              "DEBUG",
              "INFO",
              "WARNING",
              "ERROR",
              "CRITICAL"
            ]
          },
          "category_id": {
            "type": "integer"
          }
        },
        "required": [
          "category_id"
        ]
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "x-minimum": "1680-01-01T00:00:00+00:00",
            "x-maximum": "2260-01-01T00:00:00+00:00"
          },
          "level": {
            "type": "string",
            "enum": [
              "DEBUG",
              "INFO",
              "WARNING",
              "ERROR",
              "CRITICAL"
            ]
          },
          "campaign_scope_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "source": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "campaign_scope_id",
          "category_id",
          "source"
        ]
      },
      "EventPut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "level": {
            "type": "string",
            "enum": [
              "DEBUG",
              "INFO",
              "WARNING",
              "ERROR",
              "CRITICAL"
            ]
          },
          "category_id": {
            "type": "integer"
          },
          "source": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "category_id",
          "source"
        ]
      },
      "TimeseriesExcludeId": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "unit_symbol": {
            "type": "string",
            "default": ""
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "campaign_id": {
            "type": "integer"
          },
          "campaign_scope_id": {
            "type": "integer"
          }
        },
        "required": [
          "campaign_id",
          "campaign_scope_id",
          "name"
        ]
      },
      "EventExcludeId": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "x-minimum": "1680-01-01T00:00:00+00:00",
            "x-maximum": "2260-01-01T00:00:00+00:00"
          },
          "level": {
            "type": "string",
            "enum": [
              "DEBUG",
              "INFO",
              "WARNING",
              "ERROR",
              "CRITICAL"
            ]
          },
          "campaign_scope_id": {
            "type": "integer"
          },
          "category_id": {
            "type": "integer"
          },
          "source": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "campaign_scope_id",
          "category_id",
          "source"
        ]
      },
      "TimeseriesByEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "timeseries": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeseriesExcludeId"
              }
            ]
          },
          "event": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/EventExcludeId"
              }
            ]
          },
          "timeseries_id": {
            "type": "integer"
          },
          "event_id": {
            "type": "integer"
          }
        },
        "required": [
          "event_id",
          "timeseries_id"
        ]
      },
      "SiteExcludeId": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "latitude": {
            "type": [
              "number",
              "null"
            ],
            "minimum": -90.0,
            "maximum": 90.0
          },
          "longitude": {
            "type": [
              "number",
              "null"
            ],
            "minimum": -180.0,
            "maximum": 180.0
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          },
          "campaign_id": {
            "type": "integer"
          }
        },
        "required": [
          "campaign_id",
          "name"
        ]
      },
      "EventBySite": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "site": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SiteExcludeId"
              }
            ]
          },
          "event_id": {
            "type": "integer"
          },
          "site_id": {
            "type": "integer"
          }
        },
        "required": [
          "event_id",
          "site_id"
        ]
      },
      "BuildingExcludeId": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          },
          "site_id": {
            "type": "integer"
          }
        },
        "required": [
          "name",
          "site_id"
        ]
      },
      "EventByBuilding": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "site": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SiteExcludeId"
              }
            ]
          },
          "building": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/BuildingExcludeId"
              }
            ]
          },
          "event_id": {
            "type": "integer"
          },
          "building_id": {
            "type": "integer"
          }
        },
        "required": [
          "building_id",
          "event_id"
        ]
      },
      "StoreyExcludeId": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          },
          "building_id": {
            "type": "integer"
          }
        },
        "required": [
          "building_id",
          "name"
        ]
      },
      "EventByStorey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "site": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SiteExcludeId"
              }
            ]
          },
          "building": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/BuildingExcludeId"
              }
            ]
          },
          "storey": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/StoreyExcludeId"
              }
            ]
          },
          "event_id": {
            "type": "integer"
          },
          "storey_id": {
            "type": "integer"
          }
        },
        "required": [
          "event_id",
          "storey_id"
        ]
      },
      "SpaceExcludeId": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          },
          "storey_id": {
            "type": "integer"
          }
        },
        "required": [
          "name",
          "storey_id"
        ]
      },
      "EventBySpace": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "site": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SiteExcludeId"
              }
            ]
          },
          "building": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/BuildingExcludeId"
              }
            ]
          },
          "storey": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/StoreyExcludeId"
              }
            ]
          },
          "space": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SpaceExcludeId"
              }
            ]
          },
          "event_id": {
            "type": "integer"
          },
          "space_id": {
            "type": "integer"
          }
        },
        "required": [
          "event_id",
          "space_id"
        ]
      },
      "ZoneExcludeId": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          },
          "campaign_id": {
            "type": "integer"
          }
        },
        "required": [
          "campaign_id",
          "name"
        ]
      },
      "EventByZone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "zone": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ZoneExcludeId"
              }
            ]
          },
          "event_id": {
            "type": "integer"
          },
          "zone_id": {
            "type": "integer"
          }
        },
        "required": [
          "event_id",
          "zone_id"
        ]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "event": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/EventExcludeId"
              }
            ]
          },
          "user_id": {
            "type": "integer"
          },
          "event_id": {
            "type": "integer"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "read": {
            "type": "boolean"
          }
        },
        "required": [
          "event_id",
          "timestamp",
          "user_id"
        ]
      },
      "NotificationPut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "event": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/EventExcludeId"
              }
            ]
          },
          "read": {
            "type": "boolean"
          }
        }
      },
      "NotificationCountForCampaign": {
        "type": "object",
        "properties": {
          "campaign_id": {
            "type": "integer"
          },
          "campaign_name": {
            "type": "string"
          },
          "count": {
            "type": "integer"
          }
        }
      },
      "NotificationCountByCampaign": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "campaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationCountForCampaign"
            }
          }
        }
      },
      "Site": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "latitude": {
            "type": [
              "number",
              "null"
            ],
            "minimum": -90.0,
            "maximum": 90.0
          },
          "longitude": {
            "type": [
              "number",
              "null"
            ],
            "minimum": -180.0,
            "maximum": 180.0
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          },
          "campaign_id": {
            "type": "integer"
          }
        },
        "required": [
          "campaign_id",
          "name"
        ]
      },
      "SitePut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "latitude": {
            "type": [
              "number",
              "null"
            ],
            "minimum": -90.0,
            "maximum": 90.0
          },
          "longitude": {
            "type": [
              "number",
              "null"
            ],
            "minimum": -180.0,
            "maximum": 180.0
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          }
        },
        "required": [
          "name"
        ]
      },
      "DegreeDays": {
        "type": "object",
        "properties": {
          "degree_days": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          }
        }
      },
      "Building": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          },
          "site_id": {
            "type": "integer"
          }
        },
        "required": [
          "name",
          "site_id"
        ]
      },
      "BuildingPut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          }
        },
        "required": [
          "name"
        ]
      },
      "Storey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          },
          "building_id": {
            "type": "integer"
          }
        },
        "required": [
          "building_id",
          "name"
        ]
      },
      "StoreyPut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          }
        },
        "required": [
          "name"
        ]
      },
      "Space": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          },
          "storey_id": {
            "type": "integer"
          }
        },
        "required": [
          "name",
          "storey_id"
        ]
      },
      "SpacePut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          }
        },
        "required": [
          "name"
        ]
      },
      "Zone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          },
          "campaign_id": {
            "type": "integer"
          }
        },
        "required": [
          "campaign_id",
          "name"
        ]
      },
      "ZonePut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          },
          "ifc_id": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 22
          }
        },
        "required": [
          "name"
        ]
      },
      "StructuralElementProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "value_type": {
            "default": "string",
            "type": "string",
            "enum": [
              "integer",
              "float",
              "boolean",
              "string"
            ]
          },
          "unit_symbol": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          }
        },
        "required": [
          "name"
        ]
      },
      "StructuralElementPropertyPut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "unit_symbol": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          }
        },
        "required": [
          "name"
        ]
      },
      "StructuralElementPropertyExcludeId": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80
          },
          "value_type": {
            "default": "string",
            "type": "string",
            "enum": [
              "integer",
              "float",
              "boolean",
              "string"
            ]
          },
          "unit_symbol": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 500
          }
        },
        "required": [
          "name"
        ]
      },
      "SiteProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "structural_element_property": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/StructuralElementPropertyExcludeId"
              }
            ]
          },
          "structural_element_property_id": {
            "type": "integer"
          }
        },
        "required": [
          "structural_element_property_id"
        ]
      },
      "BuildingProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "structural_element_property": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/StructuralElementPropertyExcludeId"
              }
            ]
          },
          "structural_element_property_id": {
            "type": "integer"
          }
        },
        "required": [
          "structural_element_property_id"
        ]
      },
      "StoreyProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "structural_element_property": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/StructuralElementPropertyExcludeId"
              }
            ]
          },
          "structural_element_property_id": {
            "type": "integer"
          }
        },
        "required": [
          "structural_element_property_id"
        ]
      },
      "SpaceProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "structural_element_property": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/StructuralElementPropertyExcludeId"
              }
            ]
          },
          "structural_element_property_id": {
            "type": "integer"
          }
        },
        "required": [
          "structural_element_property_id"
        ]
      },
      "ZoneProperty": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "structural_element_property": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/StructuralElementPropertyExcludeId"
              }
            ]
          },
          "structural_element_property_id": {
            "type": "integer"
          }
        },
        "required": [
          "structural_element_property_id"
        ]
      },
      "SitePropertyData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "site_id": {
            "type": "integer"
          },
          "site_property_id": {
            "type": "integer"
          },
          "value": {
            "type": "string",
            "maxLength": 100
          }
        },
        "required": [
          "site_id",
          "site_property_id",
          "value"
        ]
      },
      "BuildingPropertyData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "building_id": {
            "type": "integer"
          },
          "building_property_id": {
            "type": "integer"
          },
          "value": {
            "type": "string",
            "maxLength": 100
          }
        },
        "required": [
          "building_id",
          "building_property_id",
          "value"
        ]
      },
      "StoreyPropertyData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "storey_id": {
            "type": "integer"
          },
          "storey_property_id": {
            "type": "integer"
          },
          "value": {
            "type": "string",
            "maxLength": 100
          }
        },
        "required": [
          "storey_id",
          "storey_property_id",
          "value"
        ]
      },
      "SpacePropertyData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "space_id": {
            "type": "integer"
          },
          "space_property_id": {
            "type": "integer"
          },
          "value": {
            "type": "string",
            "maxLength": 100
          }
        },
        "required": [
          "space_id",
          "space_property_id",
          "value"
        ]
      },
      "ZonePropertyData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "zone_id": {
            "type": "integer"
          },
          "zone_property_id": {
            "type": "integer"
          },
          "value": {
            "type": "string",
            "maxLength": 100
          }
        },
        "required": [
          "value",
          "zone_id",
          "zone_property_id"
        ]
      },
      "TimeseriesBySite": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "site": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SiteExcludeId"
              }
            ]
          },
          "timeseries_id": {
            "type": "integer"
          },
          "site_id": {
            "type": "integer"
          }
        },
        "required": [
          "site_id",
          "timeseries_id"
        ]
      },
      "TimeseriesByBuilding": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "site": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SiteExcludeId"
              }
            ]
          },
          "building": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/BuildingExcludeId"
              }
            ]
          },
          "timeseries_id": {
            "type": "integer"
          },
          "building_id": {
            "type": "integer"
          }
        },
        "required": [
          "building_id",
          "timeseries_id"
        ]
      },
      "TimeseriesByStorey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "site": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SiteExcludeId"
              }
            ]
          },
          "building": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/BuildingExcludeId"
              }
            ]
          },
          "storey": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/StoreyExcludeId"
              }
            ]
          },
          "timeseries_id": {
            "type": "integer"
          },
          "storey_id": {
            "type": "integer"
          }
        },
        "required": [
          "storey_id",
          "timeseries_id"
        ]
      },
      "TimeseriesBySpace": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "site": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SiteExcludeId"
              }
            ]
          },
          "building": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/BuildingExcludeId"
              }
            ]
          },
          "storey": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/StoreyExcludeId"
              }
            ]
          },
          "space": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/SpaceExcludeId"
              }
            ]
          },
          "timeseries_id": {
            "type": "integer"
          },
          "space_id": {
            "type": "integer"
          }
        },
        "required": [
          "space_id",
          "timeseries_id"
        ]
      },
      "TimeseriesByZone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "zone": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/ZoneExcludeId"
              }
            ]
          },
          "timeseries_id": {
            "type": "integer"
          },
          "zone_id": {
            "type": "integer"
          }
        },
        "required": [
          "timeseries_id",
          "zone_id"
        ]
      },
      "Energy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 80
          }
        },
        "required": [
          "name"
        ]
      },
      "EnergyEndUse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 80
          }
        },
        "required": [
          "name"
        ]
      },
      "EnergyProductionTechnology": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 80
          }
        },
        "required": [
          "name"
        ]
      },
      "EnergyConsumptionTimeseriesBySite": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "timeseries": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeseriesExcludeId"
              }
            ]
          },
          "site_id": {
            "type": "integer"
          },
          "energy_id": {
            "type": "integer"
          },
          "end_use_id": {
            "type": "integer"
          },
          "timeseries_id": {
            "type": "integer"
          }
        },
        "required": [
          "end_use_id",
          "energy_id",
          "site_id",
          "timeseries_id"
        ]
      },
      "EnergyConsumptionTimeseriesByBuilding": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "timeseries": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeseriesExcludeId"
              }
            ]
          },
          "building_id": {
            "type": "integer"
          },
          "energy_id": {
            "type": "integer"
          },
          "end_use_id": {
            "type": "integer"
          },
          "timeseries_id": {
            "type": "integer"
          }
        },
        "required": [
          "building_id",
          "end_use_id",
          "energy_id",
          "timeseries_id"
        ]
      },
      "EnergyProductionTimeseriesBySite": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "timeseries": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeseriesExcludeId"
              }
            ]
          },
          "site_id": {
            "type": "integer"
          },
          "energy_id": {
            "type": "integer"
          },
          "prod_tech_id": {
            "type": "integer"
          },
          "timeseries_id": {
            "type": "integer"
          }
        },
        "required": [
          "energy_id",
          "prod_tech_id",
          "site_id",
          "timeseries_id"
        ]
      },
      "EnergyProductionTimeseriesByBuilding": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "timeseries": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeseriesExcludeId"
              }
            ]
          },
          "building_id": {
            "type": "integer"
          },
          "energy_id": {
            "type": "integer"
          },
          "prod_tech_id": {
            "type": "integer"
          },
          "timeseries_id": {
            "type": "integer"
          }
        },
        "required": [
          "building_id",
          "energy_id",
          "prod_tech_id",
          "timeseries_id"
        ]
      },
      "WeatherTimeseriesBySite": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "parameter": {
            "type": "string",
            "enum": [
              "AIR_TEMPERATURE",
              "DEWPOINT_TEMPERATURE",
              "WETBULB_TEMPERATURE",
              "WIND_SPEED",
              "WIND_DIRECTION",
              "SURFACE_SOLAR_RADIATION",
              "SURFACE_DIRECT_SOLAR_RADIATION",
              "SURFACE_DIFFUSE_SOLAR_RADIATION",
              "DIRECT_NORMAL_SOLAR_RADIATION",
              "RELATIVE_HUMIDITY",
              "SURFACE_PRESSURE",
              "TOTAL_PRECIPITATION"
            ]
          },
          "timeseries": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeseriesExcludeId"
              }
            ]
          },
          "site_id": {
            "type": "integer"
          },
          "timeseries_id": {
            "type": "integer"
          },
          "forecast": {
            "type": "boolean"
          }
        },
        "required": [
          "forecast",
          "site_id",
          "timeseries_id"
        ]
      },
      "SitesCSVUploadFile": {
        "type": "object",
        "properties": {
          "sites_csv": {
            "type": "string",
            "format": "binary"
          },
          "buildings_csv": {
            "type": "string",
            "format": "binary"
          },
          "storeys_csv": {
            "type": "string",
            "format": "binary"
          },
          "spaces_csv": {
            "type": "string",
            "format": "binary"
          },
          "zones_csv": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "TimeseriesCSVUploadFile": {
        "type": "object",
        "properties": {
          "timeseries_csv": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "timeseries_csv"
        ]
      },
      "TimeseriesCompleteness": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Timeseries name"
          },
          "count": {
            "type": "array",
            "description": "Number or values for each bucket",
            "items": {
              "type": "integer"
            }
          },
          "ratio": {
            "type": "array",
            "description": "Number or values / expected values for each bucket",
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "total_count": {
            "type": "integer",
            "description": "Total number or values"
          },
          "avg_count": {
            "type": "number",
            "description": "Average number or values"
          },
          "avg_ratio": {
            "type": [
              "number",
              "null"
            ],
            "description": "Average number or values / expected values"
          },
          "interval": {
            "type": [
              "number",
              "null"
            ],
            "description": "Interval between samples (seconds), defined or inferred"
          },
          "undefined_interval": {
            "type": "boolean",
            "description": "Whether the interval was not defined"
          },
          "expected_count": {
            "type": "array",
            "description": "Expected number or values for each bucket",
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          }
        }
      },
      "Completeness": {
        "type": "object",
        "properties": {
          "timestamps": {
            "type": "array",
            "description": "Time index (value is bucket start time)",
            "items": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            }
          },
          "timeseries": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TimeseriesCompleteness"
            }
          }
        }
      },
      "EnergyConsumption": {
        "type": "object",
        "properties": {
          "timestamps": {
            "type": "array",
            "description": "Time index (value is bucket start time)",
            "items": {
              "type": "string",
              "format": "date-time",
              "x-minimum": "1680-01-01T00:00:00+00:00",
              "x-maximum": "2260-01-01T00:00:00+00:00"
            }
          },
          "energy": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "number",
                  "description": "Value (Wh)"
                }
              }
            }
          }
        }
      },
      "ST_CleanupByCampaign": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "is_enabled": {
            "type": "boolean",
            "default": true
          },
          "campaign_id": {
            "type": "integer"
          }
        },
        "required": [
          "campaign_id"
        ]
      },
      "ST_CleanupByCampaignPut": {
        "type": "object",
        "properties": {
          "is_enabled": {
            "type": "boolean"
          }
        }
      },
      "ST_CleanupByCampaignFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "campaign_id": {
            "type": "integer"
          },
          "campaign_name": {
            "type": "string"
          },
          "is_enabled": {
            "type": "boolean"
          }
        }
      },
      "ST_CleanupByTimeseries": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "timeseries_id": {
            "type": "integer"
          },
          "last_timestamp": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        },
        "required": [
          "timeseries_id"
        ]
      },
      "ST_CleanupByTimeseriesFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "timeseries_id": {
            "type": "integer"
          },
          "timeseries_name": {
            "type": "string"
          },
          "timeseries_unit_symbol": {
            "type": "string"
          },
          "last_timestamp": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "x-minimum": "1680-01-01T00:00:00+00:00",
            "x-maximum": "2260-01-01T00:00:00+00:00"
          }
        }
      },
      "ST_CheckMissingByCampaign": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "is_enabled": {
            "type": "boolean",
            "default": true
          },
          "campaign_id": {
            "type": "integer"
          }
        },
        "required": [
          "campaign_id"
        ]
      },
      "ST_CheckMissingByCampaignPut": {
        "type": "object",
        "properties": {
          "is_enabled": {
            "type": "boolean"
          }
        }
      },
      "ST_CheckMissingByCampaignFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "campaign_id": {
            "type": "integer"
          },
          "campaign_name": {
            "type": "string"
          },
          "is_enabled": {
            "type": "boolean"
          }
        }
      },
      "ST_CheckOutliersByCampaign": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "is_enabled": {
            "type": "boolean",
            "default": true
          },
          "campaign_id": {
            "type": "integer"
          }
        },
        "required": [
          "campaign_id"
        ]
      },
      "ST_CheckOutliersByCampaignPut": {
        "type": "object",
        "properties": {
          "is_enabled": {
            "type": "boolean"
          }
        }
      },
      "ST_CheckOutliersByCampaignFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "campaign_id": {
            "type": "integer"
          },
          "campaign_name": {
            "type": "string"
          },
          "is_enabled": {
            "type": "boolean"
          }
        }
      },
      "ST_DownloadWeatherDataBySite": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "is_enabled": {
            "type": "boolean",
            "default": true
          },
          "site_id": {
            "type": "integer"
          }
        },
        "required": [
          "site_id"
        ]
      },
      "ST_DownloadWeatherDataBySitePut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "is_enabled": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "ST_DownloadWeatherDataBySiteFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "site_id": {
            "type": "integer"
          },
          "site_name": {
            "type": "string"
          },
          "is_enabled": {
            "type": "boolean"
          }
        }
      },
      "ST_DownloadWeatherForecastDataBySite": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "is_enabled": {
            "type": "boolean",
            "default": true
          },
          "site_id": {
            "type": "integer"
          }
        },
        "required": [
          "site_id"
        ]
      },
      "ST_DownloadWeatherForecastDataBySitePut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "is_enabled": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "ST_DownloadWeatherForecastDataBySiteFull": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "site_id": {
            "type": "integer"
          },
          "site_name": {
            "type": "string"
          },
          "is_enabled": {
            "type": "boolean"
          }
        }
      }
    },
    "responses": {
      "DEFAULT_ERROR": {
        "description": "Default error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NOT_MODIFIED": {
        "description": "Not Modified"
      },
      "UNPROCESSABLE_ENTITY": {
        "description": "Unprocessable Entity",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "UNAUTHORIZED": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "CONFLICT": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "PRECONDITION_FAILED": {
        "description": "Precondition Failed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "PRECONDITION_REQUIRED": {
        "description": "Precondition Required",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "parameters": {
      "IF_NONE_MATCH": {
        "name": "If-None-Match",
        "in": "header",
        "description": "Tag to check against",
        "schema": {
          "type": "string"
        }
      },
      "IF_MATCH": {
        "name": "If-Match",
        "in": "header",
        "required": true,
        "description": "Tag to check against",
        "schema": {
          "type": "string"
        }
      }
    },
    "headers": {
      "ETAG": {
        "description": "Tag for the returned entry",
        "schema": {
          "type": "string"
        }
      },
      "PAGINATION": {
        "description": "Pagination metadata",
        "schema": {
          "$ref": "#/components/schemas/PaginationMetadata"
        }
      }
    },
    "securitySchemes": {
      "BasicAuthentication": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}
